[{"F:\\Dev\\MyWebApp\\toper\\src\\index.tsx":"1","F:\\Dev\\MyWebApp\\toper\\src\\BodyWidget.tsx":"2","F:\\Dev\\MyWebApp\\toper\\src\\components\\CanvasDiagram.tsx":"3","F:\\Dev\\MyWebApp\\toper\\src\\defaultData\\defaultScheme.js":"4","F:\\Dev\\MyWebApp\\toper\\src\\components\\NavbarEditor.tsx":"5","F:\\Dev\\MyWebApp\\toper\\src\\components\\SchemaEditor.js":"6","F:\\Dev\\MyWebApp\\toper\\src\\store.js":"7","F:\\Dev\\MyWebApp\\toper\\src\\App.tsx":"8","F:\\Dev\\MyWebApp\\toper\\src\\libs\\engine.ts":"9","F:\\Dev\\MyWebApp\\toper\\src\\custom-node-ts\\TSCustomNodeModel.ts":"10","F:\\Dev\\MyWebApp\\toper\\src\\components\\Appbar.tsx":"11","F:\\Dev\\MyWebApp\\toper\\src\\components\\TabMat.tsx":"12","F:\\Dev\\MyWebApp\\toper\\src\\components\\TabMenu.tsx":"13","F:\\Dev\\MyWebApp\\toper\\src\\components\\Toolbar.tsx":"14","F:\\Dev\\MyWebApp\\toper\\src\\schemanode\\node\\SchemaNodeModel.ts":"15","F:\\Dev\\MyWebApp\\toper\\src\\schemanode\\port\\SchemaPortModel.ts":"16","F:\\Dev\\MyWebApp\\toper\\src\\schemanode\\node\\SchemaNodeFactory.tsx":"17","F:\\Dev\\MyWebApp\\toper\\src\\schemanode\\node\\SchemaNodeWidget.tsx":"18","F:\\Dev\\MyWebApp\\toper\\src\\schemanode\\port\\SchemaPortLabelWidget.tsx":"19","F:\\Dev\\MyWebApp\\toper\\src\\components\\AppToolbar.tsx":"20","F:\\Dev\\MyWebApp\\toper\\src\\components\\TableEditor.tsx":"21","F:\\Dev\\MyWebApp\\toper\\src\\components\\FileMenu.tsx":"22","F:\\Dev\\MyWebApp\\toper\\src\\components\\ContextMenus\\ContextMenuShortcutContainer.jsx":"23","F:\\Dev\\MyWebApp\\toper\\src\\components\\ContextMenus\\ContextMenuIconContainer.jsx":"24","F:\\Dev\\MyWebApp\\toper\\src\\components\\ContextMenus\\KeyMenu.jsx":"25","F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\index.js":"26","F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\ZoomOut.jsx":"27","F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Undo.jsx":"28","F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\ZoomIn.jsx":"29","F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Settings.jsx":"30","F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Stop.jsx":"31","F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Redo.jsx":"32","F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Duplicate.jsx":"33","F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Play.jsx":"34","F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Pause.jsx":"35","F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Paste.jsx":"36","F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Cut.jsx":"37","F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Copy.jsx":"38","F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Close.jsx":"39","F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Edit.jsx":"40","F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Delete.jsx":"41","F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\ArrowRight.jsx":"42","F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Chevron.jsx":"43","F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Chevrons.jsx":"44","F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\ArrowLeft.jsx":"45","F:\\Dev\\MyWebApp\\toper\\src\\DiagramController\\DiagramCtr.tsx":"46","F:\\Dev\\MyWebApp\\toper\\src\\DiagramController\\actions\\ClipboardAction.js":"47","F:\\Dev\\MyWebApp\\toper\\src\\components\\ContextMenus\\ContextMenus.tsx":"48","F:\\Dev\\MyWebApp\\toper\\src\\components\\ContextMenus\\ComponentContextMenu.tsx":"49","F:\\Dev\\MyWebApp\\toper\\src\\components\\ContextMenus\\DiagramContextMenu.tsx":"50","F:\\Dev\\MyWebApp\\toper\\src\\DiagramController\\actions\\DeleteAction.ts":"51","F:\\Dev\\MyWebApp\\toper\\src\\DiagramController\\actions\\NewNodeAction.ts":"52","F:\\Dev\\MyWebApp\\toper\\src\\DiagramController\\actions\\DuplicateAction.ts":"53","F:\\Dev\\MyWebApp\\toper\\src\\components\\ExportEditor.tsx":"54","F:\\Dev\\MyWebApp\\toper\\src\\DiagramController\\actions\\ZoomAction.ts":"55","F:\\Dev\\MyWebApp\\toper\\src\\DiagramController\\actions\\Clipboard.ts":"56","F:\\Dev\\MyWebApp\\toper\\src\\components\\ContextMenus\\SimpleContext.tsx":"57","F:\\Dev\\MyWebApp\\toper\\src\\api\\export\\MySqlGenerate.ts":"58","F:\\Dev\\MyWebApp\\toper\\src\\libs\\tableUtil.ts":"59","F:\\Dev\\MyWebApp\\toper\\src\\api\\export\\BaseGenerate.ts":"60","F:\\Dev\\MyWebApp\\toper\\src\\interface\\user.ts":"61","F:\\Dev\\MyWebApp\\toper\\src\\interface\\project.ts":"62"},{"size":255,"mtime":1613050996632,"results":"63","hashOfConfig":"64"},{"size":388,"mtime":1612249709457,"results":"65","hashOfConfig":"64"},{"size":1450,"mtime":1613317001202,"results":"66","hashOfConfig":"64"},{"size":187,"mtime":1612323376670,"results":"67","hashOfConfig":"64"},{"size":1762,"mtime":1612844508056,"results":"68","hashOfConfig":"64"},{"size":4362,"mtime":1612676179331,"results":"69","hashOfConfig":"64"},{"size":368,"mtime":1612544460601,"results":"70","hashOfConfig":"64"},{"size":8842,"mtime":1614224417143,"results":"71","hashOfConfig":"64"},{"size":2217,"mtime":1613652003431,"results":"72","hashOfConfig":"64"},{"size":877,"mtime":1612576686001,"results":"73","hashOfConfig":"64"},{"size":2242,"mtime":1613358646902,"results":"74","hashOfConfig":"64"},{"size":2131,"mtime":1612713948794,"results":"75","hashOfConfig":"64"},{"size":985,"mtime":1612695004123,"results":"76","hashOfConfig":"64"},{"size":2551,"mtime":1613873868872,"results":"77","hashOfConfig":"64"},{"size":9871,"mtime":1614137136342,"results":"78","hashOfConfig":"64"},{"size":1083,"mtime":1613219467079,"results":"79","hashOfConfig":"64"},{"size":841,"mtime":1613099389316,"results":"80","hashOfConfig":"64"},{"size":3175,"mtime":1613919128398,"results":"81","hashOfConfig":"64"},{"size":1299,"mtime":1613747580415,"results":"82","hashOfConfig":"64"},{"size":1519,"mtime":1613301988506,"results":"83","hashOfConfig":"64"},{"size":12037,"mtime":1614234454400,"results":"84","hashOfConfig":"64"},{"size":7322,"mtime":1614223806055,"results":"85","hashOfConfig":"64"},{"size":222,"mtime":1613044669211,"results":"86","hashOfConfig":"64"},{"size":231,"mtime":1613044670610,"results":"87","hashOfConfig":"64"},{"size":638,"mtime":1613044719437,"results":"88","hashOfConfig":"64"},{"size":786,"mtime":1608105596000,"results":"89","hashOfConfig":"64"},{"size":375,"mtime":1608105596000,"results":"90","hashOfConfig":"64"},{"size":896,"mtime":1608105596000,"results":"91","hashOfConfig":"64"},{"size":417,"mtime":1608105596000,"results":"92","hashOfConfig":"64"},{"size":1034,"mtime":1608105596000,"results":"93","hashOfConfig":"64"},{"size":1055,"mtime":1608105596000,"results":"94","hashOfConfig":"64"},{"size":780,"mtime":1608105596000,"results":"95","hashOfConfig":"64"},{"size":1361,"mtime":1608105596000,"results":"96","hashOfConfig":"64"},{"size":401,"mtime":1608105596000,"results":"97","hashOfConfig":"64"},{"size":433,"mtime":1608105596000,"results":"98","hashOfConfig":"64"},{"size":1692,"mtime":1608105596000,"results":"99","hashOfConfig":"64"},{"size":455,"mtime":1608105596000,"results":"100","hashOfConfig":"64"},{"size":372,"mtime":1608105596000,"results":"101","hashOfConfig":"64"},{"size":681,"mtime":1608105596000,"results":"102","hashOfConfig":"64"},{"size":439,"mtime":1608105596000,"results":"103","hashOfConfig":"64"},{"size":466,"mtime":1608105596000,"results":"104","hashOfConfig":"64"},{"size":367,"mtime":1608105596000,"results":"105","hashOfConfig":"64"},{"size":255,"mtime":1608105596000,"results":"106","hashOfConfig":"64"},{"size":383,"mtime":1608105596000,"results":"107","hashOfConfig":"64"},{"size":314,"mtime":1608105596000,"results":"108","hashOfConfig":"64"},{"size":6574,"mtime":1614234334911,"results":"109","hashOfConfig":"64"},{"size":2784,"mtime":1608105596000,"results":"110","hashOfConfig":"64"},{"size":760,"mtime":1613747205231,"results":"111","hashOfConfig":"64"},{"size":3276,"mtime":1613747181852,"results":"112","hashOfConfig":"64"},{"size":1788,"mtime":1613748446771,"results":"113","hashOfConfig":"64"},{"size":971,"mtime":1613061340964,"results":"114","hashOfConfig":"64"},{"size":1287,"mtime":1613318798129,"results":"115","hashOfConfig":"64"},{"size":1353,"mtime":1613061622164,"results":"116","hashOfConfig":"64"},{"size":4994,"mtime":1614149618732,"results":"117","hashOfConfig":"64"},{"size":2603,"mtime":1613316168409,"results":"118","hashOfConfig":"64"},{"size":2936,"mtime":1613734680164,"results":"119","hashOfConfig":"64"},{"size":1520,"mtime":1613748533886,"results":"120","hashOfConfig":"64"},{"size":921,"mtime":1613825452845,"results":"121","hashOfConfig":"64"},{"size":677,"mtime":1613798993433,"results":"122","hashOfConfig":"64"},{"size":261,"mtime":1613799903678,"results":"123","hashOfConfig":"64"},{"size":622,"mtime":1614224087276,"results":"124","hashOfConfig":"64"},{"size":593,"mtime":1614223998859,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"129"},"1qj6m5i",{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"129"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"129"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"129"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"129"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"129"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"129"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"129"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"129"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"129"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"129"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"129"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"129"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"129"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"129"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Dev\\MyWebApp\\toper\\src\\index.tsx",["276","277"],"\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport {App} from './App'\n\nReactDOM.render(   \n    <App/>\n,\n  document.getElementById('root')\n);\n\n",["278","279"],"F:\\Dev\\MyWebApp\\toper\\src\\BodyWidget.tsx",[],["280","281"],"F:\\Dev\\MyWebApp\\toper\\src\\components\\CanvasDiagram.tsx",[],"F:\\Dev\\MyWebApp\\toper\\src\\defaultData\\defaultScheme.js",[],"F:\\Dev\\MyWebApp\\toper\\src\\components\\NavbarEditor.tsx",[],["282","283"],"F:\\Dev\\MyWebApp\\toper\\src\\components\\SchemaEditor.js",["284","285","286","287","288","289","290"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport TableMat from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport TableChartIcon from '@material-ui/icons/TableChart';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\n\r\n\r\nimport { useDispatch , useSelector } from \"react-redux\"\r\nimport Tabmat from './TabMat'\r\nimport Appbar from './Appbar'\r\nimport {initEngine , newNode} from '../libs/schemeReduce'\r\nimport {OpenEditor , Table , NewNode} from '../libs/tablereducer'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 500,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nfunction createData(Name, TypeName, PK, FK) {\r\n  return { Name, TypeName, PK, FK };\r\n}\r\n\r\nconst rows = [\r\n  createData('Product Id', \"varchar\", false, false),\r\n  createData('Product Name', \"varchar\", false , false),\r\n  createData('Product Price', \"int\", false , false),\r\n\r\n];\r\n\r\n//const engine = useSelector(\r\n  //  (state: RootState) => state.schemeReducer.engine\r\n  //);\r\n\r\n\r\nfunction getCurrentNode(){\r\n\r\n}\r\n\r\n\r\nexport default function TemporaryDrawer() {\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const tableform = {\r\n    table_name : \"\",\r\n    node_id : \"\",\r\n    fields : []\r\n  }\r\n\r\n\r\n  //const [state, setstate] = useState()\r\n\r\n  //const currentSelect = useSelector(state => state.schemaEditor.isOpen)\r\nconst currentSelect = false\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    console.log(\"toggle\")\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <Appbar></Appbar>\r\n       <TableContainer>\r\n      <TableMat aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Field Name</TableCell>\r\n            <TableCell>Type Name</TableCell>\r\n            <TableCell>PK</TableCell>\r\n            <TableCell>FK</TableCell>\r\n\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.name}>\r\n              {(row) ? <TableCell component=\"th\" scope=\"row\"> {row.Name}\r\n              </TableCell> : <div>Edit</div>} \r\n               \r\n              \r\n              <TableCell >{row.TypeName}</TableCell>\r\n              <TableCell >{row.PK}</TableCell>\r\n              <TableCell >{row.FK}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </TableMat>\r\n    </TableContainer>\r\n    <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n          <AddCircleOutlineIcon />\r\n        </IconButton>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Tabmat></Tabmat>\r\n      <Button onClick={toggleDrawer(\"right\", true)}  startIcon={<TableChartIcon />} onClick={() => dispatch(NewNode(tableform))}>New Table</Button>\r\n      <Button startIcon={<SaveIcon />}>Save File</Button>\r\n      <Button startIcon={<ArrowDownwardIcon />} onClick={() => dispatch(OpenEditor(true))}>Export {currentSelect}</Button>\r\n      <Button startIcon={<ShareIcon />} >Share File</Button>\r\n          <Drawer anchor={\"right\"} open={false} onClose={()=> dispatch(OpenEditor(true))}>\r\n            {list(\"right\")}\r\n          </Drawer>\r\n\r\n    </div>\r\n \r\n  );\r\n}",["291","292"],"F:\\Dev\\MyWebApp\\toper\\src\\store.js",["293","294"],"import { configureStore } from '@reduxjs/toolkit';\r\n\r\n\r\nimport SchemaEditor from './libs/schemaEditorReducer'\r\n\r\nimport SchemaReducer from './libs/schemeReduce'\r\nimport TableReducer from './libs/tablereducer'\r\nimport Dummay from './libs/dummyreducer'\r\nexport default configureStore({\r\n  reducer: {\r\n    \r\n    dummy : Dummay,\r\n    tablereducer : TableReducer\r\n  },\r\n});",["295","296"],"F:\\Dev\\MyWebApp\\toper\\src\\App.tsx",["297","298","299","300","301","302","303","304","305"],"F:\\Dev\\MyWebApp\\toper\\src\\libs\\engine.ts",["306","307","308","309","310"],"import createEngine, { DefaultLinkModel, DefaultNodeModel , DiagramEngine,  DiagramModel , PathFindingLinkFactory } from \"@projectstorm/react-diagrams\";\r\n\r\n\r\nimport {SchemaNodeModel} from '../schemanode/node/SchemaNodeModel'\r\nimport {SchemaNodeFactory} from '../schemanode/node/SchemaNodeFactory'\r\n\r\n\r\nfunction GetEngine() : DiagramEngine  {\r\n \r\n    let rs = createEngine({registerDefaultDeleteItemsAction: false,\r\n})\r\n\r\n    rs.getNodeFactories().registerFactory(new SchemaNodeFactory());\r\n\r\n\r\n    const model = new DiagramModel();\r\n\r\n\r\n    let snode =  new SchemaNodeModel({\r\n\t\tname: 'Product',\r\n\t\tcolor: 'rgb(0,192,255)'\r\n\t});\r\n\r\n    let productIdPort = snode.addField({fieldName : \"Id\" , fieldType : \"int\"})\r\n    snode.addField({fieldName : \"ProductName\" , fieldType : \"varchar\"})\r\n    let pnameport = snode.addField({fieldName : \"ProductPrice\" , fieldType : \"int\"})\r\n    snode.addField({fieldName : \"ProductCategory\" , fieldType : \"int\"})\r\n\r\n    snode.setPosition(100, 100);\r\n\r\n\r\n\r\n\r\n    const models = model.addAll(snode);\r\n\r\n    //snode2.addLinkForeignKey(link1.getID())\r\n    \r\n    models.forEach(m => {\r\n        m.registerListener({\r\n            \r\n\t\t\tselectionChanged: () => onclick(m.getID()),\r\n            onDoubleClick : () => ondbclick(m.getID())\r\n\t\t});\r\n\r\n    });\r\n\r\n    \r\n\r\n\t\r\n\r\n    /*\r\n    var node1 = new DefaultNodeModel({\r\n\t\tname: 'Node 1',\r\n\t\tcolor: 'rgb(0,192,255)'\r\n\t});\r\n\tnode1.setPosition(100, 100);\r\n\tlet port1 = node1.addOutPort('id');\r\n    node1.addInPort('int');\r\n\r\n\t//3-B) create another default node\r\n\tvar node2 = new DefaultNodeModel('Node 2', 'rgb(192,255,0)');\r\n\tlet port2 = node2.addInPort('product_id');\r\n    node2.addOutPort('int');\r\n\tnode2.setPosition(400, 100);\r\n\r\n\t// link the ports\r\n\tlet link1 = port1.link<DefaultLinkModel>(port2);\r\n\tlink1.getOptions().testName = 'Test';\r\n\tlink1.addLabel('Hello World!');\r\n    */\r\n    \r\n\r\n    rs.setModel(model);\r\n\r\n   \r\n    return rs\r\n}\r\n\r\nfunction ondbclick(id : string){\r\n    alert('double')\r\n}\r\n\r\nfunction onclick(id : String){\r\n    //alert(id)\r\n    //const dispatch = useDispatch()\r\n    //dispatch(ToggleEditor())\r\n    //store.dispatch(ToggleEditor())\r\n    console.log(id)\r\n   \r\n}\r\n\r\nconst engine = GetEngine()\r\nexport {engine , GetEngine}","F:\\Dev\\MyWebApp\\toper\\src\\custom-node-ts\\TSCustomNodeModel.ts",[],["311","312"],"F:\\Dev\\MyWebApp\\toper\\src\\components\\Appbar.tsx",["313"],"import React , {FunctionComponent, useState} from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 0,\r\n    },\r\n    inputEdit : {\r\n      backgroundColor : \"#3F51B5\",\r\n      padding : 8,\r\n      color : \"white\",\r\n      border: \"none\",\r\n      borderRadius: 4,\r\n      fontSize : 20\r\n\r\n \r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }),\r\n);\r\n\r\ninterface AppbarProp {\r\n  title : string,\r\n  onDelete : () => void,\r\n  onEndEdit : (e : string) => void\r\n}\r\n\r\nexport const  Appbar : FunctionComponent<AppbarProp> = ({ onDelete , title , onEndEdit }) => {\r\n  const classes = useStyles();\r\n\r\n  const [isEdit, setisEdit] = useState(false)\r\n\r\n  const [textInput, settextInput] = useState(\"\")\r\n\r\n  function handleChange(e : any){\r\n    settextInput(e.target.value)\r\n  }\r\n\r\n  function handleBlur(){\r\n    setisEdit(!isEdit)\r\n    \r\n    onEndEdit(textInput)\r\n  }\r\n\r\n\r\n\r\n  function handleOpenEdit(){\r\n    setisEdit(true)\r\n    settextInput(title)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" elevation={0}>\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {(isEdit) ? \r\n           <input value={textInput} onChange={handleChange} onBlur={ handleBlur} className={classes.inputEdit} />\r\n         \r\n          :\r\n          <Typography  variant=\"h6\" className={classes.title} onClick={handleOpenEdit}>\r\n            {title}\r\n          </Typography>\r\n          }\r\n          <IconButton color=\"inherit\" onClick={onDelete}><DeleteOutlineIcon/></IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","F:\\Dev\\MyWebApp\\toper\\src\\components\\TabMat.tsx",["314"],"F:\\Dev\\MyWebApp\\toper\\src\\components\\TabMenu.tsx",["315"],"F:\\Dev\\MyWebApp\\toper\\src\\components\\Toolbar.tsx",[],"F:\\Dev\\MyWebApp\\toper\\src\\schemanode\\node\\SchemaNodeModel.ts",["316","317","318","319","320","321","322","323","324","325","326"],"import * as _ from 'lodash';\r\nimport { NodeModel, NodeModelGenerics, PortModel, PortModelAlignment } from '@projectstorm/react-diagrams-core';\r\nimport { SchemaPortModel } from '../port/SchemaPortModel';\r\nimport { BasePositionModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\r\nimport { DefaultLinkModel, DefaultPortModel, DiagramEngine, LinkModel } from '@projectstorm/react-diagrams';\r\nimport { TableData  } from '../../components/TableEditor';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nexport interface DefaultNodeModelOptions extends BasePositionModelOptions {\r\n\tname?: string;\r\n\tcolor?: string;\r\n}\r\n\r\nexport interface Field{\r\n\tinId ?: string,\r\n\toutId ?: string,\r\n\tfieldName : string,\r\n\tfieldType : string,\r\n\tfieldOption ?: FieldOption\r\n}\r\n\r\nexport interface FieldOption {\r\n\tportId : string,\r\n\tai ?: boolean\r\n\tpk ?: boolean,\r\n\tfk ?: boolean,\r\n\tfkTb ?: string,\r\n\tfkField ?: string\r\n}\r\n\r\nexport interface SchemaNodeModelGenerics extends NodeModelGenerics {\r\n\tOPTIONS: DefaultNodeModelOptions;\r\n}\r\n\r\nexport class SchemaNodeModel extends NodeModel<SchemaNodeModelGenerics> {\r\n\tprotected portsIn: DefaultPortModel[];\r\n\tprotected portsOut: DefaultPortModel[];\r\n\tprotected fieldOptions : FieldOption[]\t\r\n\r\n\tconstructor(name: string, color: string);\r\n\tconstructor(options?: DefaultNodeModelOptions);\r\n\tconstructor(options: any = {}, color?: string) {\r\n\t\tif (typeof options === 'string') {\r\n\t\t\toptions = {\r\n\t\t\t\tname: options,\r\n\t\t\t\tcolor: color\r\n\t\t\t};\r\n\t\t}\r\n\t\tsuper({\r\n\t\t\ttype: 'default',\r\n\t\t\tname: 'Untitled',\r\n\t\t\tcolor: 'rgb(0,192,255)',\r\n\t\t\t...options\r\n\t\t});\r\n\t\tthis.portsOut = [];\r\n\t\tthis.portsIn = [];\r\n\t\tthis.fieldOptions = []\r\n\t}\r\n\r\n\tperformanceTune() : boolean { return false}\r\n\r\n\tdoClone(lookupTable: {}, clone: SchemaNodeModel): void {\r\n\r\n\t\tconsole.log('original id : ' + this.getID())\r\n\t\tclone.portsIn = [];\r\n\t\tclone.portsOut = [];\r\n\t\t\r\n\t\tsuper.doClone(lookupTable, clone);\r\n\t\tlet fields = []\r\n\t\tfor (let i = 0; i < clone.portsIn.length; i++) {\r\n\t\t\tclone.fieldOptions[i].portId = clone.portsIn[i].getID()\r\n\t\t}\r\n\t}\r\n\r\n\tremoveFieldbyId(id : string): void{\r\n\t\t\r\n\t\tlet indexof = this.portsIn.findIndex(p=>p.getID() == id );\r\n\r\n\t\tlet fieldIndex = this.fieldOptions.findIndex(f=>f.portId == id)\r\n\r\n\t\tif(indexof === -1) return\r\n\r\n\t\tif(fieldIndex !== -1){\r\n\t\t\tthis.fieldOptions.splice(fieldIndex, 1);\r\n\t\t}\r\n\r\n\t\tthis.removeField(indexof)\r\n\t}\r\n\r\n\tremovePort(port: DefaultPortModel): void {\r\n\t\tsuper.removePort(port);\r\n\t\r\n\t\tif (port.getOptions().in) {\r\n\t\t\tthis.portsIn.splice(this.portsIn.indexOf(port), 1);\r\n\t\t} else {\r\n\t\t\tthis.portsOut.splice(this.portsOut.indexOf(port), 1);\r\n\t\t}\r\n\t}\r\n\r\n\tupdateNode(tb : TableData){\r\n\t\r\n\t\tlet fields_tb = tb.fields\r\n\t\tlet fields = this.getAllField()\r\n\t\tfor (let i = 0; i < fields_tb.length; i++) {\r\n\t\t\tif(fields[i].fieldName !== fields_tb[i].fieldName){\r\n\t\t\t\tthis.portsIn[i].getOptions().label = fields_tb[i].fieldName\r\n\t\t\t}\r\n\t\t\tif(fields[i].fieldType !== fields_tb[i].fieldType){\r\n\t\t\t\tthis.portsOut[i].getOptions().label = fields_tb[i].fieldType\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\r\n\taddField(field : Field) : DefaultPortModel[] {\r\n\t\t\r\n\t\tlet portin = this.addInPort(field.fieldName)\r\n\t\tlet portout = this.addOutPort(field.fieldType)\r\n\t\t\r\n\t\tlet add : FieldOption = {\r\n\t\t\tportId : portin.getID(),\r\n\t\t\tai : false,\r\n\t\t\tpk : false,\r\n\t\t\tfk : false,\r\n\t\t\tfkTb : \"\",\r\n\t\t\tfkField : \"\"\r\n\t\t}\r\n\r\n\t\tthis.fieldOptions.push(add)\r\n\r\n\t\treturn [portin , portout]\r\n\t}\r\n\r\n\tremoveField(i : number){\r\n\r\n\t\tthis.removePort(this.portsIn[i])\r\n\t\tthis.removePort(this.portsOut[i])\r\n\t}\r\n\r\n\tAddNewField(){\r\n\r\n\t\tlet field : Field = {\r\n\t\t\tfieldName : \"test\",\r\n\t\t\tfieldType : \"int\"\r\n\t\t}\r\n\t\tthis.addField(field)\r\n\r\n\t}\r\n\r\n\taddOrUpdateFieldOption(field : Field)  : void{\r\n\t\tlet fieldIndex = this.fieldOptions.findIndex(f=>f.portId === field.inId)\r\n\t\tif(fieldIndex === -1) return\r\n\t\t\r\n\t\tif(field.fieldOption === undefined) return \r\n\t\tthis.fieldOptions[fieldIndex] = field.fieldOption\r\n\t\tconsole.log(field.fieldOption)\r\n\r\n\t\t//fieldrs.\r\n\t\tlet fieldOption = field.fieldOption\r\n\t\tif(fieldOption == undefined) return\r\n\t\t\r\n\t\tlet targetNodeId = (fieldOption.fkTb === undefined) ? \"\" : fieldOption.fkTb\r\n\t\tlet targetPortId = (fieldOption.fkField === undefined) ? \"\" : fieldOption.fkField\r\n\t\tlet sourceIdPort = (field.inId === undefined) ? \"\" : field.inId\r\n\t\t\r\n\t\t//this.linkForeignKey(targetNodeId , targetPortId ,  sourceIdPort)\r\n\t}\r\n\r\n\tlinkForeignKey(targetNode : SchemaNodeModel ,targetIdPort : string , sourceInIdPort : string): LinkModel | undefined{\r\n\t\talert('do link')\r\n\t\tlet targetPort = targetNode.getPortFromID(targetIdPort) as DefaultPortModel\r\n\t\tlet sourceport = this.getPortFromID(sourceInIdPort)  as DefaultPortModel  // find  sourePort\r\n\t\tif(sourceport === null) return undefined\r\n\t\tif(targetPort === null) return undefined\r\n\t\talert('complete link')\r\n\t\tconsole.log(\"main field \" + sourceport.getOptions().label + \" link with : \" + targetPort.getOptions().label)\r\n\t\tconsole.log(sourceport.getOptions().in)\r\n\t\tconsole.log(targetPort.getOptions().in)\r\n\t\tlet link =  targetPort.link(sourceport)\r\n\r\n\t\ttargetPort.reportPosition()\r\n\t\tsourceport.reportPosition()\r\n\t\treturn link\r\n\t}\r\n\r\n\tgetAllField() : Field[]{\r\n\t\tlet portins = this.portsIn\r\n\t\tlet portouts = this.portsOut\r\n\t\tlet rs : Field[] = []\r\n\t\tconsole.log(\"get field lenght : \"+ portins.length)\r\n\r\n\t\tconsole.log(this.fieldOptions)\r\n\r\n\t\tfor (let i = 0; i < portins.length; i++) {\r\n\t\t\tconsole.log(\"check field \" + i )\r\n\t\t\t\r\n\t\t\tlet f = this.getField(i)\r\n\t\t\tconsole.log(f)\r\n\t\t\trs.push(f)\r\n\t\t}\r\n\t\treturn rs\r\n\t}\r\n\r\n\tgetField(index : number) : Field{\r\n\r\n\t\tlet field = this.portsIn[index].getOptions().label\r\n\t\tlet type = this.portsOut[index].getOptions().label\r\n\t\tlet id = this.portsIn[index].getID()\r\n\t\tconsole.log(\"check id : \" + id)\r\n\t\t\r\n\t\tlet fieldOptionIndex = this.fieldOptions.findIndex(f=>f.portId === id)\r\n\r\n\t\tconsole.log(\"fieldopt index : \" + fieldOptionIndex)\r\n\r\n\t\tif(fieldOptionIndex === -1){\r\n\t\t\tlet r : Field = {\r\n\t\t\t\tinId : '',\r\n\t\t\toutId : '',\r\n\t\t\tfieldName : '',\r\n\t\t\tfieldType : '',\r\n\t\r\n\t\t\t}\r\n\t\t\treturn r\r\n\t\t}\r\n\r\n\t\tlet fieldOption = this.fieldOptions[fieldOptionIndex]\r\n\t\tconsole.log(\"field name : \" + field + \" pk : \" + fieldOption.pk + \" fk : \" + fieldOption.fk)\r\n\r\n\t\tif(field === undefined) field = \"\"\r\n\t\tif(type === undefined) type = \"\"\r\n\r\n\t\t\r\n\t\tlet rs : Field = {\r\n\t\t\tinId : this.portsIn[index].getID(),\r\n\t\t\toutId : this.portsOut[index].getID(),\r\n\t\t\tfieldName : field,\r\n\t\t\tfieldType : type,\r\n\t\t\tfieldOption : fieldOption\r\n\t\t}\r\n\r\n\t\treturn rs\r\n\t}\r\n\r\n\tupdatePort(port: SchemaPortModel , index : number){\r\n\t\t\r\n\t}\r\n\r\n\taddPort<T extends DefaultPortModel>(port: T): T {\r\n\r\n\r\n\t\tsuper.addPort(port);\r\n\t\t\r\n\t\tif (port.getOptions().in) {\r\n\t\t\tif (this.portsIn.indexOf(port) === -1) {\r\n\t\t\t\tthis.portsIn.push(port);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.portsOut.indexOf(port) === -1) {\r\n\t\t\t\tthis.portsOut.push(port);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn port;\r\n\t}\r\n\r\n\taddInPort(label: string, after = true): DefaultPortModel {\r\n\t\tlet uid = uuidv4()\r\n\t\tconst p = new DefaultPortModel({\r\n\t\t\tin: true,\r\n\t\t\tname: uid,\r\n\t\t\tlabel: label,\r\n\t\t\talignment: PortModelAlignment.LEFT\r\n\t\t});\r\n\t\tif (!after) {\r\n\t\t\tthis.portsIn.splice(0, 0, p);\r\n\t\t}\r\n\t\treturn this.addPort(p);\r\n\t}\r\n\r\n\taddOutPort(label: string, after = true): DefaultPortModel {\r\n\t\tlet uid = uuidv4()\r\n\t\tconst p = new DefaultPortModel({\r\n\t\t\tin: false,\r\n\t\t\tname: uid,\r\n\t\t\tlabel: label,\r\n\t\t\talignment: PortModelAlignment.RIGHT\r\n\t\t});\r\n\t\tif (!after) {\r\n\t\t\tthis.portsOut.splice(0, 0, p);\r\n\t\t}\r\n\t\treturn this.addPort(p);\r\n\t}\r\n\r\n\t//when convert back to model it is no function to add field and add fieldoption : \r\n\t//fix you need \r\n\r\n\tdeserialize(event: DeserializeEvent<this>) {\r\n\t\tsuper.deserialize(event);\r\n\r\n\t\tthis.options.name = event.data.name;\r\n\t\tthis.options.color = event.data.color;\r\n\t\tthis.fieldOptions = event.data.fields\r\n\t\tconsole.log(this.fieldOptions)\r\n\t\tthis.portsIn = _.map(event.data.portsInOrder, (id : any) => {\r\n\t\t\treturn this.getPortFromID(id);\r\n\t\t}) as DefaultPortModel[];\r\n\t\tthis.portsOut = _.map(event.data.portsOutOrder, (id : any) => {\r\n\t\t\treturn this.getPortFromID(id);\r\n\t\t}) as DefaultPortModel[];\r\n\t\tconsole.log(\"deserial call on shemaModel\")\r\n\r\n\t\tconsole.log(\"after deserial\")\r\n\r\n\t}\r\n\r\n\tdeserializeFieldOption(){\r\n\r\n\t}\r\n\r\n\tserializeClone(c : any){\r\n\t\tconsole.log('serial clone')\r\n\t\tconsole.log(c)\r\n\t}\r\n\r\n\tserialize(): any {\r\n\r\n\t\tconsole.log(\"call serialize on model\")\r\n\r\n\t\tlet fields = []\r\n\r\n\t\tconsole.log(this.fieldOptions)\r\n\r\n\t\tfor (let i = 0; i < this.portsIn.length; i++) {\r\n\t\t\t\r\n\t\t\tlet fieldOptionIndex = this.fieldOptions.findIndex(f=>f.portId === this.portsIn[i].getID())\r\n\t\t\tconsole.log(\"fieldOptIndex : \" + fieldOptionIndex)\r\n\t\t\tif(fieldOptionIndex === -1) continue\r\n\t\t\tfields.push({\r\n\t\t\t\tportId : this.portsIn[i].getID(),\r\n\t\t\t\tfieldName : this.portsIn[i].getOptions().label,\r\n\t\t\t\tfieldType : this.portsOut[i].getOptions().label,\r\n\t\t\t\tai : this.fieldOptions[fieldOptionIndex].ai,\r\n\t\t\t\tpk : this.fieldOptions[fieldOptionIndex].pk\r\n\t\t\t})\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\t\r\n\t\treturn {\r\n\t\t\t...super.serialize(),\r\n\t\t\tname: this.options.name,\r\n\t\t\tcolor: this.options.color,\r\n\t\t\tfields : fields,\r\n\t\t\tportsInOrder: _.map(this.portsIn, (port) => {\r\n\t\t\t\treturn port.getID();\r\n\t\t\t}),\r\n\t\t\tportsOutOrder: _.map(this.portsOut, (port) => {\r\n\t\t\t\treturn port.getID();\r\n\t\t\t})\r\n\t\t};\r\n\t}\r\n\r\n\ttoJson() : any{\r\n\t\t\r\n\t\tlet fields = []\r\n\t\tfor (let i = 0; i < this.portsIn.length; i++) {\r\n\t\t\tlet fieldOptionIndex = this.fieldOptions.findIndex(f=>f.portId === this.portsIn[i].getID())\r\n\t\t\tif(fieldOptionIndex === -1) continue\r\n\t\t\tlet field = {\r\n\t\t\t\tfieldName : this.portsIn[i].getOptions().label,\r\n\t\t\t\tfieldType : this.portsOut[i].getOptions().label,\r\n\t\t\t\tfieldOption : this.fieldOptions[fieldOptionIndex]\r\n\t\t\t}\r\n\t\t\tfields.push(field)\r\n\t\t}\r\n\t\tlet rs = {\r\n\t\t\tname : this.options.name,\r\n\t\t\tcolor : this.options.color,\r\n\t\t\tfields : fields\r\n\t\t}\r\n\t\treturn rs\r\n\t}\r\n\r\n\tgetInPorts(): DefaultPortModel[] {\r\n\t\treturn this.portsIn;\r\n\t}\r\n\r\n\tgetOutPorts(): DefaultPortModel[] {\r\n\t\treturn this.portsOut;\r\n\t}\r\n\r\n\t\r\n}","F:\\Dev\\MyWebApp\\toper\\src\\schemanode\\port\\SchemaPortModel.ts",["327","328","329","330","331"],"F:\\Dev\\MyWebApp\\toper\\src\\schemanode\\node\\SchemaNodeFactory.tsx",["332"],"import * as React from 'react';\r\nimport { SchemaNodeModel } from './SchemaNodeModel';\r\nimport { SchemaNodeWidget } from './SchemaNodeWidget';\r\nimport { AbstractReactFactory , GenerateWidgetEvent } from '@projectstorm/react-canvas-core';\r\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\r\nimport { MenuProvider  } from 'react-contexify';\r\n\r\nexport class SchemaNodeFactory extends AbstractReactFactory<SchemaNodeModel, DiagramEngine> {\r\n\r\n\tconstructor() {\r\n\t\tsuper('default');\r\n\t}\r\n\t\r\n\r\n\tgenerateReactWidget(event : any): JSX.Element {\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<MenuProvider id=\"component\" storeRef={false} data={event.model}>\r\n\t\t\t\t<SchemaNodeWidget engine={this.engine} node={event.model}  />\r\n\t\t\t</MenuProvider>\r\n\t\t\t)\r\n\t}\r\n\r\n\tgenerateModel(initialConfig : any) {\r\n\t\treturn new SchemaNodeModel('Node 2', 'rgb(192,255,0)');\r\n\t}\r\n}","F:\\Dev\\MyWebApp\\toper\\src\\schemanode\\node\\SchemaNodeWidget.tsx",["333","334"],"import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\r\nimport { SchemaNodeModel } from './SchemaNodeModel';\r\nimport { SchemaPortLabel } from '../port/SchemaPortLabelWidget';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/core';\r\nimport { SchemaPortModel } from '../port/SchemaPortModel';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\n\texport const Node = styled.div<{ background ?: string; selected: boolean }>`\r\n\t\r\n\t\r\n\r\n\t\tborder-style: solid;\r\n\r\n\t\tborder-color : grey;\r\n\r\n\t\tborder-width: thin;\r\n\r\n\t\tcolor: white;\r\n\t\t\r\n\t\toverflow: visible;\r\n\t\tfont-size: 13px;\r\n\t\t\r\n\t`;\r\n\r\n\texport const Title = styled.div`\r\n\t\tbackground-color: #005AA0;\r\n\t\tdisplay: flex;\r\n\t\tfont-weight: 600;\r\n\t\twhite-space: nowrap;\r\n\t\tjustify-items: center;\r\n\t`;\r\n\r\n\texport const TitleName = styled.div`\r\n\t\tmargin-left : 10px;\r\n\t\tflex-grow: 1;\r\n\t\tpadding: 10px 5px;\r\n\t`;\r\n\r\n\texport const Ports = styled.div`\r\n\t\tdisplay: flex;\r\n\t\tcolor : #5E666E;\r\n\t\tfont-weight: 600;\r\n\t\tbackground-color: white;\r\n\t`;\r\n\r\n\texport const PortsContainer = styled.div`\r\n\t\tflex-grow: 1;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\t&:first-of-type {\r\n\t\t\tmargin-right: 10px;\r\n\t\t}\r\n\t\t&:only-child {\r\n\t\t\tmargin-right: 0px;\r\n\t\t}\r\n\t`;\r\n\r\n\r\nexport interface DefaultNodeProps {\r\n\tnode: SchemaNodeModel;\r\n\tengine: DiagramEngine;\r\n}\r\n\r\n/**\r\n * Default node that models the DefaultNodeModel. It creates two columns\r\n * for both all the input ports on the left, and the output ports on the right.\r\n */\r\n\r\n\r\nexport class SchemaNodeWidget extends React.Component<DefaultNodeProps> {\r\n\r\n\r\n\t  fireAction (event : any) {\r\n\t\tthis.props.engine.getActionEventBus().fireAction({\r\n\t\t  event: {\r\n\t\t\t...event,\r\n\t\t\tkey: '',\r\n\t\t\tpreventDefault: () => {},\r\n          stopPropagation: () => {},\r\n\t\t  },\r\n\t\t});\r\n\t  }\r\n\r\n\t  fireDeleteEvent(engine : DiagramEngine){\r\n\t\tlet e = { type: 'keydown', ctrlKey: true, code: 'Delete' }\r\n\t\tthis.fireAction(e);\r\n\t  }\r\n\r\n\tfireDoubleClick(engine : DiagramEngine){\r\n\t\tconsole.log(\"double click\")\r\n\t\tif(engine != undefined){\r\n\t\r\n\t\t\tengine.fireEvent({ }, 'onDoubleClick');\r\n\t\t}else{\r\n\t\t\tconsole.log(\"unid\")\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\r\n\tgeneratePort = (port : SchemaPortModel) => {\r\n\t\r\n\t\treturn <SchemaPortLabel engine={this.props.engine} port={port} key={port.getID()}  />;\r\n\t};\r\n\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Node\r\n\t\t\t\tdata-default-node-name={this.props.node.getOptions().name}\r\n\t\t\t\tselected={this.props.node.isSelected()}\r\n\t\t\t\tbackground={this.props.node.getOptions().color} onDoubleClick={() => this.fireDoubleClick(this.props.engine)}>\r\n\t\t\t\t<Title>\r\n\t\t\t\t\t<TitleName>{this.props.node.getOptions().name}</TitleName>\r\n\t\t\t\t\t<IconButton  onClick={()=> this.fireDeleteEvent(this.props.engine)} color=\"inherit\" size=\"small\">\r\n          \t\t\t\t<DeleteOutlineIcon/>\r\n        \t\t\t</IconButton>\r\n\r\n\t\t\t\t</Title>\r\n\t\t\t\t<Ports>\r\n\t\t\t\t\t<PortsContainer>{_.map(this.props.node.getInPorts(), this.generatePort)}</PortsContainer>\r\n\t\t\t\t\t<PortsContainer>{_.map(this.props.node.getOutPorts(), this.generatePort)}</PortsContainer>\r\n\t\t\t\t</Ports>\r\n\t\t\t</Node>\r\n\t\t);\r\n\t}\r\n}","F:\\Dev\\MyWebApp\\toper\\src\\schemanode\\port\\SchemaPortLabelWidget.tsx",[],"F:\\Dev\\MyWebApp\\toper\\src\\components\\AppToolbar.tsx",["335","336","337","338","339"],"\r\nimport React , {FunctionComponent} from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Button  from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n\r\n    },\r\n    menu : {\r\n        marginRight : 10\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n  }),\r\n);\r\n\r\ninterface ToolbarFunction {\r\n  onExport : () => void,\r\n\r\n}\r\n\r\nexport const AppToolbar: FunctionComponent<ToolbarFunction> = ({onExport }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{height : 30,marginLeft : 20 }}>\r\n \r\n          <Typography variant=\"h6\" color=\"inherit\" >\r\n            Visual Draw\r\n            \r\n          </Typography>\r\n          \r\n      </div>\r\n      <div style={{height : 40}}>\r\n \r\n          \r\n      <Button>File</Button>\r\n          <Button onClick={onExport}>Export</Button>\r\n          <Button> Print</Button>\r\n          <Button>Help</Button>\r\n          <Typography className={classes.title}></Typography>\r\n\r\n          \r\n   \r\n      </div>\r\n  \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","F:\\Dev\\MyWebApp\\toper\\src\\components\\TableEditor.tsx",["340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378"],"F:\\Dev\\MyWebApp\\toper\\src\\components\\FileMenu.tsx",["379","380","381"],"F:\\Dev\\MyWebApp\\toper\\src\\components\\ContextMenus\\ContextMenuShortcutContainer.jsx",[],["382","383"],"F:\\Dev\\MyWebApp\\toper\\src\\components\\ContextMenus\\ContextMenuIconContainer.jsx",[],"F:\\Dev\\MyWebApp\\toper\\src\\components\\ContextMenus\\KeyMenu.jsx",[],"F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\index.js",[],"F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\ZoomOut.jsx",[],"F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Undo.jsx",[],"F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\ZoomIn.jsx",[],"F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Settings.jsx",[],"F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Stop.jsx",[],"F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Redo.jsx",[],"F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Duplicate.jsx",[],"F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Play.jsx",[],"F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Pause.jsx",[],"F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Paste.jsx",[],"F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Cut.jsx",[],"F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Copy.jsx",[],"F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Close.jsx",[],["384","385"],"F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Edit.jsx",[],"F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Delete.jsx",[],"F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\ArrowRight.jsx",[],"F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Chevron.jsx",[],"F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\Chevrons.jsx",[],"F:\\Dev\\MyWebApp\\toper\\src\\components\\Icons\\ArrowLeft.jsx",[],"F:\\Dev\\MyWebApp\\toper\\src\\DiagramController\\DiagramCtr.tsx",["386","387","388","389","390","391","392","393","394","395","396","397"],"F:\\Dev\\MyWebApp\\toper\\src\\DiagramController\\actions\\ClipboardAction.js",[],"F:\\Dev\\MyWebApp\\toper\\src\\components\\ContextMenus\\ContextMenus.tsx",[],"F:\\Dev\\MyWebApp\\toper\\src\\components\\ContextMenus\\ComponentContextMenu.tsx",[],"F:\\Dev\\MyWebApp\\toper\\src\\components\\ContextMenus\\DiagramContextMenu.tsx",[],"F:\\Dev\\MyWebApp\\toper\\src\\DiagramController\\actions\\DeleteAction.ts",["398"],"\nimport {Action, InputType, BaseModel } from '@projectstorm/react-canvas-core';\n\n\n/**\n * Handles delete actions.\n */\nexport default class DeleteAction extends Action {\n  constructor(areShortcutsAllowed : boolean) {\n    super({\n      type: InputType.KEY_DOWN,\n      fire: ({ event }) => {\n        console.log(JSON.stringify(event))\n        //if (!areShortcutsAllowed) return;\n        if (this.engine.getModel().isLocked()) return;\n        \n        if (this.matchesInput(event)) {\n          event.preventDefault();\n          this.handleAction();\n        }\n      },\n    });\n  }\n\n  matchesInput(event : any) : boolean{\n    return event.ctrlKey && event.code === 'Delete'\n  }\n\n  handleAction = () => {\n    console.log(\"delete\")\n    const entities = this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(model => !model.isLocked());\n\n    //this.fireEvent(entities);\n\n    entities.forEach(model => model.remove());\n\n    this.engine.repaintCanvas();\n  };\n\n \n}\n","F:\\Dev\\MyWebApp\\toper\\src\\DiagramController\\actions\\NewNodeAction.ts",["399","400","401"],"import { DiagramModel, LinkModel, NodeModel } from '@projectstorm/react-diagrams';\r\n\r\nimport { Action, InputType } from '@projectstorm/react-canvas-core';\r\n\r\nimport {BaseModel} from '@projectstorm/react-canvas-core';\r\nimport { SchemaNodeModel } from '../../schemanode/node/SchemaNodeModel';\r\n\r\n/**\r\n * Handle duplication (clone) actions.\r\n */\r\nexport default class NewNodeAction extends Action {\r\n  constructor(areShortcutsAllowed : boolean) {\r\n    super({\r\n      type: InputType.KEY_DOWN,\r\n      fire: ({ event }) => {\r\n        if (!areShortcutsAllowed) return;\r\n        if (this.engine.getModel().isLocked()) return;\r\n\r\n        if (this.matchesInput(event)) {\r\n          event.preventDefault();\r\n          this.handleAction();\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  matchesInput(event : any) : boolean{\r\n    return event.ctrlKey && event.code === 'KeyB'\r\n  }\r\n\r\n  handleAction = () => {\r\n     \r\n    let snode =  new SchemaNodeModel({\r\n\t\tname: 'Product',\r\n\t\tcolor: 'rgb(0,192,255)'\r\n\t});\r\n    snode.addField({fieldName : \"Id\" , fieldType : \"int\"})\r\n\r\n    snode.setPosition(100, 100);\r\n\r\n    let model = this.engine.getModel() as DiagramModel\r\n\r\n    model.addAll(snode)\r\n\r\n    //this.engine.fireEvent({ nodes: clones }, 'componentsAdded');\r\n\r\n    this.engine.repaintCanvas();\r\n  };\r\n}\r\n","F:\\Dev\\MyWebApp\\toper\\src\\DiagramController\\actions\\DuplicateAction.ts",["402"],"import { DiagramModel, LinkModel, NodeModel } from '@projectstorm/react-diagrams';\n\nimport { Action, InputType } from '@projectstorm/react-canvas-core';\n\nimport {BaseModel} from '@projectstorm/react-canvas-core';\n\n/**\n * Handle duplication (clone) actions.\n */\nexport default class DuplicateAction extends Action {\n  constructor(areShortcutsAllowed : boolean) {\n    super({\n      type: InputType.KEY_DOWN,\n      fire: ({ event }) => {\n        if (!areShortcutsAllowed) return;\n        if (this.engine.getModel().isLocked()) return;\n\n        if (this.matchesInput(event)) {\n          event.preventDefault();\n          this.handleAction();\n        }\n      },\n    });\n  }\n\n  matchesInput(event : any) : boolean{\n    return event.ctrlKey && event.code === 'KeyD'\n  }\n\n  handleAction = () => {\n    const model = this.engine.getModel() as DiagramModel\n\n    const clones : BaseModel[] = model \n      .getSelectedEntities()\n      .filter(entity => entity instanceof BaseModel)\n      .filter(entity => !entity.isLocked())\n      .map(entity => entity.clone());\n\n    model.clearSelection();\n\n    clones.forEach(clone => {\n\n      if (clone instanceof NodeModel) {\n        model.addNode(clone)\n        clone.setSelected(true);\n      }\n      \n      \n    });\n\n    //this.engine.fireEvent({ nodes: clones }, 'componentsAdded');\n\n    this.engine.repaintCanvas();\n  };\n}\n","F:\\Dev\\MyWebApp\\toper\\src\\components\\ExportEditor.tsx",["403","404","405","406"],"import React, { FunctionComponent, useEffect, useState } from 'react'\r\nimport Drawer from '@material-ui/core/Drawer';\r\n\r\nimport styled from '@emotion/styled';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n//mongodb+srv://topster:<password>@cluster0.hbfnd.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\r\n//aaebaYCK6opQGeRA\r\n\r\nexport interface TableEditorProp {\r\n  isOpen: boolean,\r\n  onclose: () => void\r\n}\r\n\r\n\r\nexport const LEFT = styled.div<{}>`\r\nwidth : 30%;\r\nheight: 100vh;\r\ncolor : white;\r\nfont-size : 20px;\r\nbackground-color: #005AA0;\r\n`;\r\n\r\nexport const MenuList = styled.div<{}>`\r\n\r\ncolor : white;\r\n\r\npadding : 15px;\r\nmargin-bottom : 10px;\r\n`;\r\n\r\nexport const Menu = styled.div<{}>`\r\n\r\ncolor : white;\r\nfont-size : 15px;\r\nmargin : 8px;\r\n\r\n`;\r\n\r\n\r\nexport const Right = styled.div<{}>`\r\nwidth : 70%;\r\nbackground-color: \"white\";\r\nmargin : 15px;\r\nfont-size : 20px;\r\n\r\n`;\r\n\r\n\r\n\r\n\r\nexport const SqlExport: FunctionComponent<ExportSqlProp> = ({ code, fileName, isRender, onDownloadClick , onInputChange }) => {\r\n  if (!isRender) {\r\n    return (<div></div>)\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div>Export sql</div>\r\n        <TextField label=\"file name\" variant=\"filled\" value={fileName} onChange={onInputChange} />\r\n        <TextField label=\"Filled\" variant=\"filled\" multiline\r\n          rowsMax={20} style={{ marginTop: 20, width: \"100%\", height: 400 }} value={code}  />\r\n        <Button variant=\"outlined\" color=\"primary\" style={{ marginRight: 10 }}>Copy</Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDownloadClick} >Download</Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport const ImageExport: FunctionComponent<ExportImageProp> = ({ fileName, isRender, imageType, onDownloadClick , onInputChange }) => {\r\n  if (!isRender) {\r\n    return (<div></div>)\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div>Export Image</div>\r\n        <TextField label=\"file name\" variant=\"filled\" value={fileName} onChange={onInputChange} />\r\n\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDownloadClick}  >Download</Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nenum MenuEnum {\r\n  Image,\r\n  MySql,\r\n  SqlServer,\r\n  Postresql,\r\n  Laravel\r\n}\r\n\r\n\r\ninterface ExportProp {\r\n  isOpen: boolean,\r\n  fileName : string,\r\n  onclose: () => void,\r\n  exportPng: (filename : string) => void,\r\n  exportPdf: (filename : string) => void,\r\n  exportSql: (filename : string) => void,\r\n  exportTest : (a : string) => void\r\n}\r\n\r\ninterface ExportEvent {\r\n  onclose: () => void,\r\n  exportPng: () => void,\r\n  exportPdf: (filename : string) => void,\r\n  exportSql: (filename : string) => void\r\n}\r\n\r\ninterface MenuExport {\r\n  isRender: boolean,\r\n  fileName: string,\r\n  onInputChange : (e : any) => void,\r\n  onDownloadClick: () => void\r\n}\r\n\r\ninterface ExportImageProp extends MenuExport {\r\n  imageType: string\r\n}\r\n\r\ninterface ExportSqlProp extends MenuExport {\r\n  code: string,\r\n}\r\n\r\nexport const ExportEditor: FunctionComponent<ExportProp> = ({ isOpen, onclose, exportPng,  exportSql , exportTest , fileName}) => {\r\n\r\n  const [currentMenu, setcurrentMenu] = useState(MenuEnum.Image)\r\n\r\n  const [currentFileName, setcurrentFileName] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    if(isOpen === false){\r\n      setcurrentFileName(fileName)\r\n    }\r\n    \r\n  }, [fileName])\r\n\r\n  const handleFileNameInput = (e : any) => setcurrentFileName(e.target.value)\r\n\r\n  const onExportSql = () => {\r\n    exportSql(currentFileName + \".sql\")\r\n  }\r\n\r\n  const onExportPng = () => {\r\n    exportPng(currentFileName + \".png\")\r\n  }\r\n\r\n  return (\r\n\r\n    <Drawer anchor={\"right\"} open={isOpen} style={{ width: 400 }} onClose={onclose}>\r\n      <div\r\n        style={{ width: 500, display: \"flex\" }}\r\n        role=\"presentation\"\r\n        className=\"\"\r\n      >\r\n\r\n        <LEFT>\r\n          <IconButton color=\"inherit\" size=\"medium\"><HighlightOffIcon></HighlightOffIcon></IconButton>\r\n          <MenuList>\r\n            <Menu onClick={() => setcurrentMenu(MenuEnum.MySql)}>Sql</Menu>\r\n            <Menu onClick={() => setcurrentMenu(MenuEnum.Image)}>Image</Menu>\r\n            <Menu onClick={() => exportTest('filename test')}>Pdf</Menu>\r\n\r\n            <Divider style={{ marginTop: 10, color: \"white\" }} light={true}></Divider>\r\n\r\n            <Menu>Laravel</Menu>\r\n            <Menu>Golang Gin</Menu>\r\n\r\n          </MenuList>\r\n        </LEFT>\r\n        <Right>\r\n          <SqlExport isRender={currentMenu == MenuEnum.MySql}\r\n          onInputChange={handleFileNameInput} code={\"\"} fileName={currentFileName} onDownloadClick={onExportSql} />\r\n          <ImageExport isRender={currentMenu == MenuEnum.Image} \r\n          onInputChange={handleFileNameInput} imageType=\"png\" fileName={currentFileName} onDownloadClick={onExportPng} />\r\n        </Right>\r\n\r\n      </div>\r\n    </Drawer>\r\n  )\r\n}\r\n","F:\\Dev\\MyWebApp\\toper\\src\\DiagramController\\actions\\ZoomAction.ts",[],["407","408"],"F:\\Dev\\MyWebApp\\toper\\src\\DiagramController\\actions\\Clipboard.ts",["409","410","411"],"import { Action, InputType , DeserializeEvent } from '@projectstorm/react-canvas-core';\r\n\r\nimport {BaseModel} from '@projectstorm/react-canvas-core';\r\nimport { DiagramModel, NodeModel } from '@projectstorm/react-diagrams';\r\nimport Base from 'antd/lib/typography/Base';\r\nimport { SchemaNodeModel } from '../../schemanode/node/SchemaNodeModel';\r\n\r\n\r\n/**\r\n * Handles clipboard actions.\r\n */\r\nexport default class ClipboardAction extends Action {\r\n  constructor(areShortcutsAllowed : boolean) {\r\n    super({\r\n      type: InputType.KEY_DOWN,\r\n      fire: ({ event }) => {\r\n        if (!areShortcutsAllowed) return;\r\n        if (this.engine.getModel().isLocked()) return;\r\n\r\n        if (this.matchesInput(event)) {\r\n          event.preventDefault();\r\n\r\n          const e : any = event;\r\n          if (e.code === 'KeyX') this.handleCut();\r\n          if (e.code === 'KeyC') this.handleCopy();\r\n          if (e.code === 'KeyV') this.handlePaste();\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  matchesInput(event : any) : boolean{\r\n        return event.ctrlKey && (event.code === 'KeyX' || event.code === \"KeyC\" || \r\n        event.code === \"KeyV\")     \r\n  }\r\n\r\n  getSelectedComponents = () =>\r\n    this.engine\r\n      .getModel()\r\n      .getSelectedEntities()\r\n      .filter(entity => entity instanceof SchemaNodeModel)\r\n      .filter(entity => !entity.isLocked());\r\n\r\n  /** Cut */\r\n  handleCut() {\r\n    let selectNodes = this.getSelectedComponents() as SchemaNodeModel[]\r\n    let clonenode = selectNodes[0].clone()\r\n    const copie = clonenode.serialize()\r\n\r\n    localStorage.setItem('clipboard', JSON.stringify(copie));\r\n\r\n    selectNodes.forEach(model => model.remove());\r\n\r\n    this.engine.repaintCanvas();\r\n\r\n  };\r\n\r\n  /** Copy */\r\n  handleCopy() {\r\n    let selectNodes = this.getSelectedComponents() as SchemaNodeModel[]\r\n    let clonenode = selectNodes[0].clone()\r\n    const copie = clonenode.serialize()\r\n\r\n\r\n    console.log(copie)\r\n\r\n    localStorage.setItem('clipboard', JSON.stringify(copie));\r\n  };\r\n\r\n  onPromise(id : string) {\r\n    return new Promise<BaseModel>((resolve, reject) => {\r\n      let rs = new SchemaNodeModel()\r\n      resolve(rs);\r\n    });\r\n  }\r\n\r\n\r\n  /** Paste */\r\n  handlePaste() {\r\n\r\n\r\n    let clipboardstr = localStorage.getItem('clipboard')\r\n\r\n    if(clipboardstr == null) clipboardstr = \"\"\r\n\r\n    const clipboard = JSON.parse(clipboardstr);\r\n    if (!clipboard) return;\r\n\r\n    console.log(clipboard)\r\n\r\n\r\n    let pastemodel = new SchemaNodeModel()\r\n \r\n    let deserializeData : any = {\r\n      data : clipboard,\r\n      engine : this.engine,\r\n      registerModel: () => {},\r\n    }\r\n\r\n    pastemodel.deserialize(deserializeData)\r\n    \r\n  \r\n    pastemodel.setPosition(100, 100);\r\n\r\n    console.log(pastemodel)\r\n    let model = this.engine.getModel() as DiagramModel\r\n    model.addAll(pastemodel)\r\n\r\n\r\n    //this.engine.fireEvent( nodes: models , 'componentsAdded');\r\n\r\n    this.engine.repaintCanvas();\r\n  };\r\n\r\n\r\n\r\n\r\n  \r\n}\r\n","F:\\Dev\\MyWebApp\\toper\\src\\components\\ContextMenus\\SimpleContext.tsx",["412"],"import React , {FunctionComponent} from 'react';\r\n\r\nimport { Menu, Item, Separator } from 'react-contexify';\r\n\r\nimport { Redo, Undo, Paste, ZoomIn, ZoomOut } from '../Icons';\r\nimport Key from './KeyMenu';\r\nimport ContextMenuIconContainer from './ContextMenuIconContainer';\r\nimport ContextMenuShortcutContainer from './ContextMenuShortcutContainer';\r\n\r\nimport {ContextFunction} from './FunctionList'\r\n\r\n\r\nexport const SimpleContext : FunctionComponent = () => (\r\n  <Menu id=\"nodeedit\">\r\n  <Item>\r\n    <ContextMenuIconContainer>\r\n      <Paste />\r\n    </ContextMenuIconContainer>\r\n    Paste\r\n    <ContextMenuShortcutContainer>\r\n      <Key>CTRL</Key>\r\n      <Key>V</Key>\r\n    </ContextMenuShortcutContainer>\r\n  </Item>\r\n\r\n  <Separator />\r\n\r\n  <Item>\r\n    <ContextMenuIconContainer>\r\n      <ZoomIn />\r\n    </ContextMenuIconContainer>\r\n    Zoom in\r\n  </Item>\r\n  <Item>\r\n    <ContextMenuIconContainer>\r\n      <ZoomOut />\r\n    </ContextMenuIconContainer>\r\n    Zoom out\r\n  </Item>\r\n\r\n  <Separator />\r\n\r\n  <Item>\r\n    <ContextMenuIconContainer>\r\n      <Undo />\r\n    </ContextMenuIconContainer>\r\n    Undo\r\n    <ContextMenuShortcutContainer>\r\n      <Key>CTRL</Key>\r\n      <Key>Z</Key>\r\n    </ContextMenuShortcutContainer>\r\n  </Item>\r\n\r\n  <Item>\r\n    <ContextMenuIconContainer>\r\n      <Redo />\r\n    </ContextMenuIconContainer>\r\n    Redo\r\n    <ContextMenuShortcutContainer>\r\n      <Key>CTRL</Key>\r\n      <Key>SHIFT</Key>\r\n      <Key>Z</Key>\r\n    </ContextMenuShortcutContainer>\r\n  </Item>\r\n</Menu>\r\n);\r\n\r\nexport default SimpleContext;","F:\\Dev\\MyWebApp\\toper\\src\\api\\export\\MySqlGenerate.ts",["413","414"],"import BaseGenerate from \"./BaseGenerate\"\r\n\r\nclass MySqlGenerate extends BaseGenerate {\r\n\r\n    getFields(field : any , isLastLine : boolean = false) : string{\r\n        let newLineAndTab = \", \\n \\t\"\r\n        let rs = `${field.fieldName} ${field.fieldType}` \r\n        if(isLastLine == false) rs += newLineAndTab\r\n        return rs \r\n    }\r\n  \r\n    getCreateTable(tb : any) : string{\r\n        let fields = ``\r\n        tb.fields.forEach((f: any , i : number)=>{\r\n            let isLastLine = false\r\n            if(tb.fields.length-1 == i) isLastLine = true\r\n            fields += this.getFields(f , isLastLine)\r\n        })\r\n\r\n        return `CREATE TABLE ${tb.tablename} (\\n \\t${fields} \\n ) `\r\n    }\r\n\r\n    export(data : any[]) : any {\r\n\r\n        let rs = ``\r\n       data.forEach(d=>{\r\n          rs += this.getCreateTable(d)\r\n          rs += \"\\n \\n\"\r\n       })\r\n       return rs\r\n    }\r\n}\r\n\r\nexport default MySqlGenerate\r\n  ","F:\\Dev\\MyWebApp\\toper\\src\\libs\\tableUtil.ts",["415"],"import { TableData } from \"../components/TableEditor\";\r\nimport { DiagramController } from \"../DiagramController/DiagramCtr\";\r\nimport { SchemaNodeModel } from \"../schemanode/node/SchemaNodeModel\";\r\n\r\nfunction getAllTable(diagram : DiagramController) : TableData[]{\r\n    let rs : TableData[] = []\r\n    let alltb = diagram.getEngine().getModel().getNodes() as SchemaNodeModel[]\r\n    alltb.forEach(tb => {\r\n      let name =tb.getOptions().name\r\n      if(name == undefined) name = \"\"\r\n      let add : TableData = {\r\n        id : tb.getID(),\r\n        tablename : name,\r\n        fields : tb.getAllField()\r\n      }\r\n      rs.push(add)\r\n    });\r\n    return rs\r\n}\r\n\r\nexport {getAllTable}","F:\\Dev\\MyWebApp\\toper\\src\\api\\export\\BaseGenerate.ts",[],"F:\\Dev\\MyWebApp\\toper\\src\\interface\\user.ts",[],"F:\\Dev\\MyWebApp\\toper\\src\\interface\\project.ts",[],{"ruleId":"416","severity":1,"message":"417","line":9,"column":10,"nodeType":"418","messageId":"419","endLine":9,"endColumn":18},{"ruleId":"416","severity":1,"message":"420","line":10,"column":8,"nodeType":"418","messageId":"419","endLine":10,"endColumn":13},{"ruleId":"421","replacedBy":"422"},{"ruleId":"423","replacedBy":"424"},{"ruleId":"421","replacedBy":"425"},{"ruleId":"423","replacedBy":"426"},{"ruleId":"421","replacedBy":"427"},{"ruleId":"423","replacedBy":"428"},{"ruleId":"429","severity":1,"message":"430","line":16,"column":8,"nodeType":"418","messageId":"419","endLine":16,"endColumn":13},{"ruleId":"429","severity":1,"message":"431","line":26,"column":24,"nodeType":"418","messageId":"419","endLine":26,"endColumn":35},{"ruleId":"429","severity":1,"message":"432","line":29,"column":9,"nodeType":"418","messageId":"419","endLine":29,"endColumn":19},{"ruleId":"429","severity":1,"message":"433","line":29,"column":22,"nodeType":"418","messageId":"419","endLine":29,"endColumn":29},{"ruleId":"429","severity":1,"message":"434","line":30,"column":22,"nodeType":"418","messageId":"419","endLine":30,"endColumn":27},{"ruleId":"429","severity":1,"message":"435","line":58,"column":10,"nodeType":"418","messageId":"419","endLine":58,"endColumn":24},{"ruleId":"436","severity":1,"message":"437","line":139,"column":85,"nodeType":"438","endLine":139,"endColumn":129},{"ruleId":"421","replacedBy":"439"},{"ruleId":"423","replacedBy":"440"},{"ruleId":"429","severity":1,"message":"441","line":4,"column":8,"nodeType":"418","messageId":"419","endLine":4,"endColumn":20},{"ruleId":"429","severity":1,"message":"442","line":6,"column":8,"nodeType":"418","messageId":"419","endLine":6,"endColumn":21},{"ruleId":"421","replacedBy":"443"},{"ruleId":"423","replacedBy":"444"},{"ruleId":"416","severity":1,"message":"445","line":54,"column":18,"nodeType":"418","messageId":"419","endLine":54,"endColumn":28},{"ruleId":"416","severity":1,"message":"446","line":60,"column":25,"nodeType":"418","messageId":"419","endLine":60,"endColumn":42},{"ruleId":"447","severity":1,"message":"448","line":73,"column":5,"nodeType":"449","endLine":73,"endColumn":7,"suggestions":"450"},{"ruleId":"416","severity":1,"message":"451","line":102,"column":9,"nodeType":"418","messageId":"419","endLine":102,"endColumn":15},{"ruleId":"416","severity":1,"message":"452","line":123,"column":8,"nodeType":"418","messageId":"419","endLine":123,"endColumn":16},{"ruleId":"453","severity":1,"message":"454","line":132,"column":17,"nodeType":"455","messageId":"456","endLine":132,"endColumn":19},{"ruleId":"416","severity":1,"message":"457","line":186,"column":11,"nodeType":"418","messageId":"419","endLine":186,"endColumn":20},{"ruleId":"416","severity":1,"message":"458","line":253,"column":11,"nodeType":"418","messageId":"419","endLine":253,"endColumn":21},{"ruleId":"453","severity":1,"message":"454","line":255,"column":16,"nodeType":"455","messageId":"456","endLine":255,"endColumn":18},{"ruleId":"416","severity":1,"message":"459","line":1,"column":24,"nodeType":"418","messageId":"419","endLine":1,"endColumn":40},{"ruleId":"416","severity":1,"message":"460","line":1,"column":42,"nodeType":"418","messageId":"419","endLine":1,"endColumn":58},{"ruleId":"416","severity":1,"message":"461","line":1,"column":92,"nodeType":"418","messageId":"419","endLine":1,"endColumn":114},{"ruleId":"416","severity":1,"message":"462","line":24,"column":9,"nodeType":"418","messageId":"419","endLine":24,"endColumn":22},{"ruleId":"416","severity":1,"message":"463","line":26,"column":9,"nodeType":"418","messageId":"419","endLine":26,"endColumn":18},{"ruleId":"421","replacedBy":"464"},{"ruleId":"423","replacedBy":"465"},{"ruleId":"416","severity":1,"message":"466","line":6,"column":8,"nodeType":"418","messageId":"419","endLine":6,"endColumn":14},{"ruleId":"416","severity":1,"message":"467","line":15,"column":10,"nodeType":"418","messageId":"419","endLine":15,"endColumn":18},{"ruleId":"468","severity":1,"message":"469","line":13,"column":15,"nodeType":"470","endLine":13,"endColumn":18},{"ruleId":"416","severity":1,"message":"471","line":2,"column":40,"nodeType":"418","messageId":"419","endLine":2,"endColumn":49},{"ruleId":"416","severity":1,"message":"459","line":5,"column":10,"nodeType":"418","messageId":"419","endLine":5,"endColumn":26},{"ruleId":"416","severity":1,"message":"472","line":5,"column":46,"nodeType":"418","messageId":"419","endLine":5,"endColumn":59},{"ruleId":"416","severity":1,"message":"473","line":68,"column":7,"nodeType":"418","messageId":"419","endLine":68,"endColumn":13},{"ruleId":"453","severity":1,"message":"454","line":76,"column":53,"nodeType":"455","messageId":"456","endLine":76,"endColumn":55},{"ruleId":"453","severity":1,"message":"454","line":78,"column":60,"nodeType":"455","messageId":"456","endLine":78,"endColumn":62},{"ruleId":"453","severity":1,"message":"454","line":160,"column":18,"nodeType":"455","messageId":"456","endLine":160,"endColumn":20},{"ruleId":"416","severity":1,"message":"474","line":162,"column":7,"nodeType":"418","messageId":"419","endLine":162,"endColumn":19},{"ruleId":"416","severity":1,"message":"475","line":163,"column":7,"nodeType":"418","messageId":"419","endLine":163,"endColumn":19},{"ruleId":"416","severity":1,"message":"476","line":164,"column":7,"nodeType":"418","messageId":"419","endLine":164,"endColumn":19},{"ruleId":"416","severity":1,"message":"477","line":188,"column":7,"nodeType":"418","messageId":"419","endLine":188,"endColumn":15},{"ruleId":"416","severity":1,"message":"478","line":2,"column":2,"nodeType":"418","messageId":"419","endLine":2,"endColumn":11},{"ruleId":"416","severity":1,"message":"479","line":4,"column":2,"nodeType":"418","messageId":"419","endLine":4,"endColumn":20},{"ruleId":"416","severity":1,"message":"480","line":9,"column":9,"nodeType":"418","messageId":"419","endLine":9,"endColumn":25},{"ruleId":"416","severity":1,"message":"481","line":10,"column":10,"nodeType":"418","messageId":"419","endLine":10,"endColumn":30},{"ruleId":"416","severity":1,"message":"482","line":10,"column":32,"nodeType":"418","messageId":"419","endLine":10,"endColumn":48},{"ruleId":"416","severity":1,"message":"483","line":4,"column":33,"nodeType":"418","messageId":"419","endLine":4,"endColumn":52},{"ruleId":"416","severity":1,"message":"484","line":7,"column":10,"nodeType":"418","messageId":"419","endLine":7,"endColumn":13},{"ruleId":"453","severity":1,"message":"485","line":98,"column":13,"nodeType":"455","messageId":"456","endLine":98,"endColumn":15},{"ruleId":"416","severity":1,"message":"486","line":4,"column":8,"nodeType":"418","messageId":"419","endLine":4,"endColumn":14},{"ruleId":"416","severity":1,"message":"487","line":5,"column":8,"nodeType":"418","messageId":"419","endLine":5,"endColumn":15},{"ruleId":"416","severity":1,"message":"488","line":7,"column":8,"nodeType":"418","messageId":"419","endLine":7,"endColumn":18},{"ruleId":"416","severity":1,"message":"489","line":8,"column":8,"nodeType":"418","messageId":"419","endLine":8,"endColumn":16},{"ruleId":"416","severity":1,"message":"490","line":10,"column":8,"nodeType":"418","messageId":"419","endLine":10,"endColumn":15},{"ruleId":"416","severity":1,"message":"491","line":14,"column":10,"nodeType":"418","messageId":"419","endLine":14,"endColumn":19},{"ruleId":"416","severity":1,"message":"492","line":17,"column":8,"nodeType":"418","messageId":"419","endLine":17,"endColumn":17},{"ruleId":"416","severity":1,"message":"472","line":20,"column":10,"nodeType":"418","messageId":"419","endLine":20,"endColumn":23},{"ruleId":"416","severity":1,"message":"493","line":20,"column":25,"nodeType":"418","messageId":"419","endLine":20,"endColumn":34},{"ruleId":"416","severity":1,"message":"494","line":61,"column":22,"nodeType":"418","messageId":"419","endLine":61,"endColumn":35},{"ruleId":"447","severity":1,"message":"495","line":72,"column":62,"nodeType":"449","endLine":72,"endColumn":84,"suggestions":"496"},{"ruleId":"447","severity":1,"message":"497","line":83,"column":6,"nodeType":"449","endLine":83,"endColumn":41,"suggestions":"498"},{"ruleId":"453","severity":1,"message":"454","line":92,"column":16,"nodeType":"455","messageId":"456","endLine":92,"endColumn":18},{"ruleId":"453","severity":1,"message":"454","line":112,"column":14,"nodeType":"455","messageId":"456","endLine":112,"endColumn":16},{"ruleId":"453","severity":1,"message":"454","line":149,"column":59,"nodeType":"455","messageId":"456","endLine":149,"endColumn":61},{"ruleId":"453","severity":1,"message":"454","line":151,"column":17,"nodeType":"455","messageId":"456","endLine":151,"endColumn":19},{"ruleId":"453","severity":1,"message":"485","line":155,"column":20,"nodeType":"455","messageId":"456","endLine":155,"endColumn":22},{"ruleId":"453","severity":1,"message":"454","line":171,"column":14,"nodeType":"455","messageId":"456","endLine":171,"endColumn":16},{"ruleId":"453","severity":1,"message":"454","line":178,"column":14,"nodeType":"455","messageId":"456","endLine":178,"endColumn":16},{"ruleId":"453","severity":1,"message":"454","line":194,"column":12,"nodeType":"455","messageId":"456","endLine":194,"endColumn":14},{"ruleId":"453","severity":1,"message":"454","line":196,"column":14,"nodeType":"455","messageId":"456","endLine":196,"endColumn":16},{"ruleId":"453","severity":1,"message":"454","line":207,"column":30,"nodeType":"455","messageId":"456","endLine":207,"endColumn":32},{"ruleId":"453","severity":1,"message":"454","line":209,"column":12,"nodeType":"455","messageId":"456","endLine":209,"endColumn":14},{"ruleId":"453","severity":1,"message":"454","line":215,"column":65,"nodeType":"455","messageId":"456","endLine":215,"endColumn":67},{"ruleId":"453","severity":1,"message":"454","line":219,"column":43,"nodeType":"455","messageId":"456","endLine":219,"endColumn":45},{"ruleId":"453","severity":1,"message":"454","line":219,"column":80,"nodeType":"455","messageId":"456","endLine":219,"endColumn":82},{"ruleId":"453","severity":1,"message":"454","line":220,"column":24,"nodeType":"455","messageId":"456","endLine":220,"endColumn":26},{"ruleId":"453","severity":1,"message":"454","line":220,"column":63,"nodeType":"455","messageId":"456","endLine":220,"endColumn":65},{"ruleId":"453","severity":1,"message":"454","line":223,"column":43,"nodeType":"455","messageId":"456","endLine":223,"endColumn":45},{"ruleId":"416","severity":1,"message":"499","line":228,"column":12,"nodeType":"418","messageId":"419","endLine":228,"endColumn":30},{"ruleId":"453","severity":1,"message":"454","line":230,"column":14,"nodeType":"455","messageId":"456","endLine":230,"endColumn":16},{"ruleId":"453","severity":1,"message":"454","line":231,"column":59,"nodeType":"455","messageId":"456","endLine":231,"endColumn":61},{"ruleId":"453","severity":1,"message":"454","line":233,"column":15,"nodeType":"455","messageId":"456","endLine":233,"endColumn":17},{"ruleId":"453","severity":1,"message":"454","line":236,"column":16,"nodeType":"455","messageId":"456","endLine":236,"endColumn":18},{"ruleId":"416","severity":1,"message":"500","line":238,"column":9,"nodeType":"418","messageId":"419","endLine":238,"endColumn":15},{"ruleId":"453","severity":1,"message":"454","line":261,"column":21,"nodeType":"455","messageId":"456","endLine":261,"endColumn":23},{"ruleId":"453","severity":1,"message":"454","line":265,"column":20,"nodeType":"455","messageId":"456","endLine":265,"endColumn":22},{"ruleId":"453","severity":1,"message":"454","line":266,"column":20,"nodeType":"455","messageId":"456","endLine":266,"endColumn":22},{"ruleId":"453","severity":1,"message":"454","line":272,"column":17,"nodeType":"455","messageId":"456","endLine":272,"endColumn":19},{"ruleId":"453","severity":1,"message":"454","line":276,"column":66,"nodeType":"455","messageId":"456","endLine":276,"endColumn":68},{"ruleId":"453","severity":1,"message":"454","line":279,"column":24,"nodeType":"455","messageId":"456","endLine":279,"endColumn":26},{"ruleId":"453","severity":1,"message":"454","line":281,"column":20,"nodeType":"455","messageId":"456","endLine":281,"endColumn":22},{"ruleId":"453","severity":1,"message":"454","line":284,"column":20,"nodeType":"455","messageId":"456","endLine":284,"endColumn":22},{"ruleId":"453","severity":1,"message":"454","line":313,"column":41,"nodeType":"455","messageId":"456","endLine":313,"endColumn":43},{"ruleId":"416","severity":1,"message":"501","line":11,"column":8,"nodeType":"418","messageId":"419","endLine":11,"endColumn":15},{"ruleId":"416","severity":1,"message":"502","line":17,"column":8,"nodeType":"418","messageId":"419","endLine":17,"endColumn":14},{"ruleId":"503","severity":1,"message":"504","line":166,"column":43,"nodeType":"505","messageId":"506","endLine":166,"endColumn":45},{"ruleId":"421","replacedBy":"422"},{"ruleId":"423","replacedBy":"424"},{"ruleId":"421","replacedBy":"507"},{"ruleId":"423","replacedBy":"508"},{"ruleId":"416","severity":1,"message":"509","line":2,"column":13,"nodeType":"418","messageId":"419","endLine":2,"endColumn":14},{"ruleId":"416","severity":1,"message":"510","line":9,"column":8,"nodeType":"418","messageId":"419","endLine":9,"endColumn":18},{"ruleId":"416","severity":1,"message":"511","line":34,"column":9,"nodeType":"418","messageId":"419","endLine":34,"endColumn":15},{"ruleId":"453","severity":1,"message":"454","line":88,"column":25,"nodeType":"455","messageId":"456","endLine":88,"endColumn":27},{"ruleId":"453","severity":1,"message":"454","line":104,"column":16,"nodeType":"455","messageId":"456","endLine":104,"endColumn":18},{"ruleId":"453","severity":1,"message":"454","line":123,"column":14,"nodeType":"455","messageId":"456","endLine":123,"endColumn":16},{"ruleId":"453","severity":1,"message":"454","line":159,"column":14,"nodeType":"455","messageId":"456","endLine":159,"endColumn":16},{"ruleId":"453","severity":1,"message":"454","line":167,"column":14,"nodeType":"455","messageId":"456","endLine":167,"endColumn":16},{"ruleId":"453","severity":1,"message":"454","line":170,"column":14,"nodeType":"455","messageId":"456","endLine":170,"endColumn":16},{"ruleId":"453","severity":1,"message":"454","line":182,"column":14,"nodeType":"455","messageId":"456","endLine":182,"endColumn":16},{"ruleId":"453","severity":1,"message":"454","line":209,"column":14,"nodeType":"455","messageId":"456","endLine":209,"endColumn":16},{"ruleId":"453","severity":1,"message":"454","line":227,"column":14,"nodeType":"455","messageId":"456","endLine":227,"endColumn":16},{"ruleId":"416","severity":1,"message":"491","line":2,"column":28,"nodeType":"418","messageId":"419","endLine":2,"endColumn":37},{"ruleId":"416","severity":1,"message":"478","line":1,"column":24,"nodeType":"418","messageId":"419","endLine":1,"endColumn":33},{"ruleId":"416","severity":1,"message":"493","line":1,"column":35,"nodeType":"418","messageId":"419","endLine":1,"endColumn":44},{"ruleId":"416","severity":1,"message":"491","line":5,"column":9,"nodeType":"418","messageId":"419","endLine":5,"endColumn":18},{"ruleId":"416","severity":1,"message":"478","line":1,"column":24,"nodeType":"418","messageId":"419","endLine":1,"endColumn":33},{"ruleId":"416","severity":1,"message":"512","line":108,"column":11,"nodeType":"418","messageId":"419","endLine":108,"endColumn":22},{"ruleId":"447","severity":1,"message":"513","line":141,"column":6,"nodeType":"449","endLine":141,"endColumn":16,"suggestions":"514"},{"ruleId":"453","severity":1,"message":"454","line":177,"column":44,"nodeType":"455","messageId":"456","endLine":177,"endColumn":46},{"ruleId":"453","severity":1,"message":"454","line":179,"column":46,"nodeType":"455","messageId":"456","endLine":179,"endColumn":48},{"ruleId":"421","replacedBy":"515"},{"ruleId":"423","replacedBy":"516"},{"ruleId":"416","severity":1,"message":"482","line":1,"column":30,"nodeType":"418","messageId":"419","endLine":1,"endColumn":46},{"ruleId":"416","severity":1,"message":"493","line":4,"column":24,"nodeType":"418","messageId":"419","endLine":4,"endColumn":33},{"ruleId":"416","severity":1,"message":"517","line":5,"column":8,"nodeType":"418","messageId":"419","endLine":5,"endColumn":12},{"ruleId":"416","severity":1,"message":"518","line":10,"column":9,"nodeType":"418","messageId":"419","endLine":10,"endColumn":24},{"ruleId":"453","severity":1,"message":"454","line":8,"column":23,"nodeType":"455","messageId":"456","endLine":8,"endColumn":25},{"ruleId":"453","severity":1,"message":"454","line":16,"column":35,"nodeType":"455","messageId":"456","endLine":16,"endColumn":37},{"ruleId":"453","severity":1,"message":"454","line":10,"column":15,"nodeType":"455","messageId":"456","endLine":10,"endColumn":17},"@typescript-eslint/no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","'store' is defined but never used.","no-native-reassign",["519"],"no-negated-in-lhs",["520"],["519"],["520"],["519"],["520"],"no-unused-vars","'Paper' is defined but never used.","'useSelector' is defined but never used.","'initEngine' is defined but never used.","'newNode' is defined but never used.","'Table' is defined but never used.","'getCurrentNode' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["519"],["520"],"'SchemaEditor' is defined but never used.","'SchemaReducer' is defined but never used.",["519"],["520"],"'setDiagram' is assigned a value but never used.","'setcurrentProject' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ToggleEditor', 'diagram', and 'isLogger'. Either include them or remove the dependency array.","ArrayExpression",["521"],"'userrs' is assigned a value but never used.","'onLogOut' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'onZoomFit' is defined but never used.","'loadSerial' is defined but never used.","'DefaultLinkModel' is defined but never used.","'DefaultNodeModel' is defined but never used.","'PathFindingLinkFactory' is defined but never used.","'productIdPort' is assigned a value but never used.","'pnameport' is assigned a value but never used.",["519"],["520"],"'Button' is defined but never used.","'TabPanel' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'PortModel' is defined but never used.","'DiagramEngine' is defined but never used.","'fields' is assigned a value but never used.","'targetNodeId' is assigned a value but never used.","'targetPortId' is assigned a value but never used.","'sourceIdPort' is assigned a value but never used.","'portouts' is assigned a value but never used.","'LinkModel' is defined but never used.","'PortModelAlignment' is defined but never used.","'DefaultPortModel' is defined but never used.","'AbstractModelFactory' is defined but never used.","'DeserializeEvent' is defined but never used.","'GenerateWidgetEvent' is defined but never used.","'css' is defined but never used.","Expected '!==' and instead saw '!='.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'Divider' is defined but never used.","'BaseModel' is defined but never used.","'TextField' is defined but never used.","'NodeModel' is defined but never used.","'setotherTable' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'loadTableFieldSelect'. Either include it or remove the dependency array.",["522"],"React Hook useEffect has missing dependencies: 'diagramctr' and 'getNodeData'. Either include them or remove the dependency array. If 'setTable' needs the current value of 'diagramctr', you can also switch to useReducer instead of useState and read 'diagramctr' in the reducer.",["523"],"'onSelectForeignKey' is defined but never used.","'option' is assigned a value but never used.","'Cookies' is defined but never used.","'Avatar' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["519"],["520"],"'_' is defined but never used.","'ZoomAction' is defined but never used.","'models' is assigned a value but never used.","'ExportEvent' is defined but never used.","React Hook useEffect has a missing dependency: 'isOpen'. Either include it or remove the dependency array.",["524"],["519"],["520"],"'Base' is defined but never used.","'ContextFunction' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"525","fix":"526"},{"desc":"527","fix":"528"},{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},"Update the dependencies array to be: [ToggleEditor, diagram, isLogger]",{"range":"533","text":"534"},"Update the dependencies array to be: [loadTableFieldSelect]",{"range":"535","text":"536"},"Update the dependencies array to be: [isOpen, toggleUpdate, forceUpdate, getNodeData, diagramctr]",{"range":"537","text":"538"},"Update the dependencies array to be: [fileName, isOpen]",{"range":"539","text":"540"},[2080,2082],"[ToggleEditor, diagram, isLogger]",[2267,2289],"[loadTableFieldSelect]",[2561,2596],"[isOpen, toggleUpdate, forceUpdate, getNodeData, diagramctr]",[3497,3507],"[fileName, isOpen]"]