{"version":3,"sources":["components/CanvasDiagram.tsx","components/MenuSelect.tsx","components/Toolbar.tsx","components/MenuButton.tsx","data/menus.ts","api/import/sqlimport.ts","components/AppToolbar.tsx","components/ExportEditor.tsx","components/Icons/Copy.jsx","components/Icons/Cut.jsx","components/Icons/Delete.jsx","components/Icons/Duplicate.jsx","components/Icons/Paste.jsx","components/Icons/Redo.jsx","components/Icons/Settings.jsx","components/Icons/Undo.jsx","components/Icons/ZoomIn.jsx","components/Icons/ZoomOut.jsx","components/ContextMenus/KeyMenu.jsx","components/ContextMenus/ContextMenuIconContainer.jsx","components/ContextMenus/ContextMenuShortcutContainer.jsx","components/ContextMenus/ComponentContextMenu.tsx","components/ContextMenus/DiagramContextMenu.tsx","components/ContextMenus/ContextMenus.tsx","DiagramController/actions/DeleteAction.ts","schemanode/link/SchemaLinkModel.ts","schemanode/port/SchemaPortModel.ts","schemanode/node/SchemaNodeModel.ts","DiagramController/actions/NewNodeAction.ts","DiagramController/actions/DuplicateAction.ts","DiagramController/actions/Clipboard.ts","schemanode/port/SchemaPortLabelWidget.tsx","schemanode/node/SchemaNodeWidget.tsx","schemanode/node/SchemaNodeFactory.tsx","schemanode/port/SchemaPortFactory.tsx","libs/engine.ts","data/testdiagramdata.ts","DiagramController/DiagramCtr.tsx","components/Appbar.tsx","components/TableEditor.tsx","components/ContextMenus/SimpleContext.tsx","api/export/MySqlGenerate.ts","api/export/BaseGenerate.ts","reducer/share/type.ts","interface/project.ts","reducer/share/action.ts","pages/editor.tsx","reducer/auth/type.ts","reducer/project/type.ts","libs/tableUtil.ts","components/Document/Sidebar.tsx","interface/user.ts","reducer/auth/action.ts","reducer/project/action.ts","reducer/auth/thunkaction.ts","components/Document/MainHead.tsx","reducer/loadapp.ts","components/ConfrimDialog.tsx","components/Document/FileList.tsx","reducer/project/thunkaction.ts","pages/userform.tsx","pages/projectform.tsx","pages/document.tsx","pages/signin.tsx","pages/signup.tsx","App.tsx","reducer/auth/auth.ts","reducer/share/share.ts","reducer/project/project.ts","store/index.ts","index.tsx"],"names":["CT","styled","div","p","background","DemoCanvasWidget","color","id","this","props","children","React","MenuSelect","items","defaultMenuText","menuName","onSelectChange","useState","anchorEl","setAnchorEl","currentSelect","setcurrentSelect","handleClose","item","selectOption","text","undefined","Fragment","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","endIcon","Menu","keepMounted","elevation","anchorOrigin","vertical","horizontal","transformOrigin","open","Boolean","onClose","map","MenuItem","useStyles","makeStyles","theme","createStyles","root","border","palette","divider","borderRadius","shape","backgroundColor","secondary","margin","spacing","zoomLevel","Toolbar","onSave","onLoad","onZoomIn","onZoomOut","onZoomFit","newTable","classes","Grid","container","alignItems","className","style","display","Divider","orientation","flexItem","MenuButton","isOpen","onClickMenu","setOpen","anchorRef","useRef","current","contains","target","textTransform","marginRight","cursor","ref","prevOpen","Popper","role","transition","disablePortal","TransitionProps","placement","Grow","Paper","ClickAwayListener","onClickAway","e","MenuList","autoFocusItem","FileMenu","ThemeMenu","EditMenu","keywords","readUntilFoundKeyWord","content","forEach","keyword","indexOf","flexGrow","title","menu","menuButton","AppToolbar","onExport","isApiLoading","useSelector","state","ShareReducer","isLoading","onFileMenu","alert","elem","document","getElementById","createEvent","evt","initEvent","dispatchEvent","loadOpenFile","AppBar","position","variant","Avatar","src","width","height","type","onChange","input","reader","FileReader","onload","es","result","i","length","substr","OnImport","value","readAsText","files","IconButton","aria-label","Badge","badgeContent","marginLeft","startIcon","CircularProgress","edge","MenuEnum","LEFT","Right","SqlExport","code","fileName","isRender","onDownloadClick","onInputChange","TextField","label","multiline","rowsMax","marginTop","ImageExport","imageType","ExportEditor","onclose","exportPng","exportSql","exportTest","Image","currentMenu","setcurrentMenu","currentFileName","setcurrentFileName","useEffect","handleFileNameInput","Drawer","anchor","size","MySql","light","Copy","viewBox","fill","stroke","strokeWidth","x","y","rx","ry","d","Cut","cx","cy","r","x1","y1","x2","y2","Delete","points","Duplicate","transform","Paste","Redo","Settings","Undo","ZoomIn","ZoomOut","Container","span","Key","ContextMenuIconContainer","ContextMenuShortcutContainer","ComponentContextMenu","copyFunc","pasteFunc","deleteFunc","duplicateFunc","cutFunc","zoomIn","zoomOut","DiagramContextMenu","redoFunc","undoFunc","ContextMenus","DeleteAction","areShortcutsAllowed","InputType","KEY_DOWN","fire","console","log","JSON","stringify","engine","getModel","isLocked","matchesInput","preventDefault","handleAction","getSelectedEntities","filter","model","remove","repaintCanvas","ctrlKey","Action","SchemaLinkModel","RefInPort","labelset","labels","DefaultLinkModel","SchemaPortModel","DefaultPortModel","SchemaNodeModel","options","name","portsIn","portsOut","fieldOptions","lookupTable","clone","getID","portId","indexof","findIndex","fieldIndex","f","splice","removeField","port","getOptions","in","tb","fields_tb","fields","getAllField","fieldName","fieldType","field","portin","addInPort","portout","addOutPort","add","ai","pk","fk","fkTb","fkField","push","removePort","addField","inId","fieldOption","targetPort","sourcePort","path","link","reportPosition","portins","rs","getField","index","fieldOptionIndex","outId","getInPorts","getOutPorts","getPortOutByIndex","isIn","getPortFromID","getPortInByIndex","after","uid","uuidv4","alignment","PortModelAlignment","addPort","RIGHT","data","_","portsInOrder","portsOutOrder","NodeModel","NewNodeAction","snode","setPosition","addAll","DuplicateAction","clones","entity","BaseModel","clearSelection","addNode","setSelected","ClipboardAction","handleCut","handleCopy","handlePaste","getSelectedComponents","selectNodes","copie","serialize","localStorage","setItem","Promise","resolve","reject","clipboardstr","getItem","clipboard","parse","pastemodel","deserializeData","registerModel","deserialize","PortLabel","Label","Port","SchemaPortLabel","storeRef","Node","Title","TitleName","Ports","PortsContainer","SchemaNodeWidget","generatePort","getActionEventBus","fireAction","key","stopPropagation","fireEvent","data-default-node-name","node","selected","isSelected","onDoubleClick","fireDoubleClick","fireDeleteEvent","SchemaNodeFactory","initialConfig","AbstractReactFactory","SchemaPortFactory","AbstractModelFactory","GetEngine","createEngine","registerDefaultDeleteItemsAction","getNodeFactories","registerFactory","getPortFactories","DiagramModel","setModel","tables","tablename","DiagramController","isLock","copySelected","duplicateSelected","cutSelected","pasteSelected","deleteSelected","undo","initActions","getEngine","getZoomLevel","links","getLinks","getModels","registerAction","inPort","outPort","linksIn","linksOut","removeLink","Object","keys","getSourcePort","entities","prototype","hasOwnProperty","call","selectPort","selectPortOut","relationName","findSourcesLinkInPort","setRelationLink","setLabels","addLabel","model2","obj","deserializeModel","registerLinkEvent","registerListener","nodesUpdated","linksUpdated","isCompleteLink","mirrorPort","getNode","sourceLinkArr","targetPortChanged","ev","toggleFk","setNodeOption","node1","node2","getPosition","modelset","linkNode","nodes","getNodes","currentNode","sourceLink","updateNode","setZoomLevel","addOrUpdateFieldOption","curCol","nodeTotal","posX","posY","point","createPorts","tbs","createDiagramWithSchemaTable","nodeToTable","clientX","clientY","deltaY","inputEdit","padding","fontSize","Appbar","onDelete","onEndEdit","isEdit","setisEdit","textInput","settextInput","onBlur","Typography","borderBottom","styledTable","cell","TableEditor","diagramctr","forceUpdate","getNodeData","currentTable","setTable","setrelationName","getOtherTable","otherTable","setotherTable","currentSelectTableId","setcurrentSelectTableId","currentFieldId","setcurrentFieldId","currentField","useMemo","find","t","loadTableFieldSelect","toggleUpdate","settoggleUpdate","currentEdit","setcurrentEdit","typeSelect","settypeSelect","allTable","setEditField","getOutIdFromInId","portSelectIn","portSelectOut","linkIn","findSourceLinkInPort","linkOut","getTargetPort","targetNode","getInIdFromOutId","closeEdit","newtb","handleChange","handleTypeChange","onSelectTableChange","onChangeFieldSelect","targetPortId","sourceField","getNodeById","dir","direactionNode","portInIdtoPortOut","linkModel","getFieldOption","optionName","setFieldOption","idField","fieldIndexof","newfieldOption","removeLinkbyPort","updateFieldOption","updateNodeName","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","row","component","scope","checked","removeFieldbyId","paddingBottom","paddingTop","colSpan","Collapse","timeout","unmountOnExit","Box","placeholder","disabled","minWidth","portid","portOutId","portIn","portOut","connectRealation","onSelectRelation","AddNewField","newField","SimpleContext","MySqlGenerate","isLastLine","newLineAndTab","getFields","getCreateTable","ShareActionType","projectToJson","projectName","ProjectName","projectDescription","ProjectDescription","projectDetail","ProjectDetail","user","UserId","visibleStatus","VisibleStatus","shareUrl","ShareUrl","ToggleLoading","TOGGLE_LOADING","payload","AuthActionType","ProjectActionType","Editor","projectId","useParams","AuthReducer","dispatch","useDispatch","saveSnack","setsaveSnack","update","setisLogin","diagram","settoggleFileMenu","Private","Id","initProject","currentProject","isExportOpen","setisExportOpen","setEdit","useSnackbar","ToggleEditor","token","Cookies","get","axios","defaults","headers","common","loaduserAndProject","isLogger","loadProjectDataApi","then","saveDataByString","saveProject","a","newproject","api","modelstr","put","filename","htmlToImage","dataUrl","createElement","href","download","click","catch","error","downloadFile","setAttribute","encodeURIComponent","body","appendChild","removeChild","doZoom","maxSnack","clearDiagram","newNode","Snackbar","message","action","exportPdf","codeGen","getAllTable","str","export","exportSelect","drawer","flexShrink","toolbar","justifyContent","mixins","drawerPaper","whiteSpace","transitions","create","easing","sharp","duration","enteringScreen","toolbarIcon","Sidebar","history","useHistory","changePath","paper","alt","List","ListItem","button","ListItemIcon","ListItemText","primary","jsonToUser","_id","UserName","userName","UserLastName","userlastname","UserEmail","userEmail","UserPassword","userPassword","SetUser","SET_USER","SetLoginState","SET_LOGIN","SetProject","SET_PROJECT","NewProject","NEW_PROJECT","DeleteProject","DELETE_PROJECT","signIn","login","post","status","access_token","set","register","paddingRight","appBar","leavingScreen","MainHead","onLogOut","noWrap","initApp","userUrl","baseUrl","projectUrl","all","spread","userrs","projectrs","projects","project","ConfrimDialog","onConfrim","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","FileList","isConfrimModal","setisConfrimModal","ProjectReducer","to","ListItemAvatar","ListItemSecondaryAction","url","delete","UserFrom","setuserName","setuserPassword","fullWidth","ProjectForm","setprojectName","setprojectDescription","TOGGLE_MODAL","newProjectAsync","ExTemplate","appBarSpacer","overflow","Document","addProjectModal","CssBaseline","maxWidth","Copyright","align","Link","Date","getFullYear","flexDirection","avatar","main","form","submit","SignIn","onLogin","loginParam","noValidate","required","autoComplete","FormControlLabel","control","Checkbox","xs","mt","SignUp","userLastname","setuserLastname","setuserEmail","App","Backdrop","exact","isLogin","initialState","err","confrimModal","projectSaveType","rootReducer","combineReducers","UPDATE_USER","TOGGLE_CONFRIM_MODAL","SET_PROJECT_SAVE_TYPE","store","createStore","applyMiddleware","thunkMiddleware","configureStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.13b40385.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\n//import { useSelector } from 'react-redux'\r\n\r\n\r\n\r\nexport interface DemoCanvasWidgetProps {\r\n\tcolor?: string;\r\n\tbackground?: string;\r\n}\r\n\r\nexport const CT = styled.div<{ color: string; background: string }>`\r\ndisplay : flex;\r\njustify-content: center;\r\nbackground-color: ${(p) => p.background};\r\n\r\n\r\n`;\r\n\r\n\texport const Container = styled.div<{ color: string; background: string }>`\r\n\r\n\t\tbackground-color: ${(p) => p.background};\r\n\t\tbackground-size: 50px 50px;\r\n\t\r\n\t\tbackground-image: linear-gradient(\r\n\t\t\t\t0deg,\r\n\t\t\t\ttransparent 24%,\r\n\t\t\t\t${(p) => p.color} 25%,\r\n\t\t\t\t${(p) => p.color} 26%,\r\n\t\t\t\ttransparent 27%,\r\n\t\t\t\ttransparent 74%,\r\n\t\t\t\t${(p) => p.color} 75%,\r\n\t\t\t\t${(p) => p.color} 76%,\r\n\t\t\t\ttransparent 77%,\r\n\t\t\t\ttransparent\r\n\t\t\t),\r\n\t\t\tlinear-gradient(\r\n\t\t\t\t90deg,\r\n\t\t\t\ttransparent 24%,\r\n\t\t\t\t${(p) => p.color} 25%,\r\n\t\t\t\t${(p) => p.color} 26%,\r\n\t\t\t\ttransparent 27%,\r\n\t\t\t\ttransparent 74%,\r\n\t\t\t\t${(p) => p.color} 75%,\r\n\t\t\t\t${(p) => p.color} 76%,\r\n\t\t\t\ttransparent 77%,\r\n\t\t\t\ttransparent\r\n\t\t\t);\r\n\t`;\r\n\r\n\r\nexport class DemoCanvasWidget extends React.Component<DemoCanvasWidgetProps> {\r\n\t//public schemax  = useSelector(getSchema)\r\n\trender() {\r\n\t\t//console.log(this.schemax)\r\n\t\treturn (\r\n\t\t\t<CT id=\"diagramcv\"\r\n\t\t\t\tbackground={this.props.background || 'rgb(60, 60, 60)'}\r\n\t\t\t\tcolor={this.props.color || 'rgba(255,255,255, 0.05)'}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</CT>\r\n\t\t);\r\n\t}\r\n}","import React, { useState, FunctionComponent } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\n\r\n\r\ninterface MenuListItem {\r\n    text: string,\r\n    id: string,\r\n    selectOption : boolean\r\n}\r\n\r\ninterface MenuProp {\r\n    menuName : string\r\n    defaultMenuText: string\r\n    items: MenuListItem[],\r\n    onSelectChange ?: (id : string , text : string) => void\r\n}\r\n\r\nexport const MenuSelect: FunctionComponent<MenuProp> = ({ items, defaultMenuText , menuName , onSelectChange}) => {\r\n\r\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n\r\n    const [currentSelect, setcurrentSelect] = useState(\"\")\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = (item : MenuListItem) => {\r\n        setAnchorEl(null);\r\n        if(item.selectOption){\r\n            setcurrentSelect(item.text)\r\n        }\r\n        \r\n        if(onSelectChange === null || onSelectChange === undefined) return \r\n        onSelectChange(item.id , item.text)\r\n\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}  endIcon={<KeyboardArrowDownIcon  />}>\r\n                {(currentSelect === \"\" ) ? defaultMenuText : currentSelect }\r\n            </Button>\r\n            <Menu\r\n                id={menuName}\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                elevation={0}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                  }}\r\n                  transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                  }}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                {items.map(item=>{\r\n                    return (\r\n                        <MenuItem onClick={()=>handleClose(item)} key={menuName + item.id}>{item.text}</MenuItem>\r\n                    )\r\n                })}\r\n\r\n            </Menu>\r\n\r\n        </React.Fragment>\r\n\r\n    )\r\n}","import React , {FunctionComponent} from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Redo from '@material-ui/icons/Redo';\r\nimport Undo from '@material-ui/icons/Undo';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\r\nimport ZoomOutIcon from '@material-ui/icons/ZoomOut';\r\nimport BookmarksIcon from '@material-ui/icons/Bookmarks';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport TableChartIcon from '@material-ui/icons/TableChart';\r\nimport Select from '@material-ui/core/Select';\r\nimport {MenuSelect} from './MenuSelect'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n\r\n      border: `1px solid ${theme.palette.divider}`,\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: '#F1F1F1',\r\n      color: theme.palette.text.secondary,\r\n      '& svg': {\r\n        margin: theme.spacing(1.0),\r\n      },\r\n      '& hr': {\r\n        margin: theme.spacing(0, 0.5),\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\ninterface ToolbarFunction{\r\n  onZoomIn : () => void,\r\n  onZoomOut : () => void,\r\n  onZoomFit : () => void,\r\n  onSave : () => void,\r\n  onLoad : () => void,\r\n  newTable: () => void\r\n}\r\n\r\nconst zoomLevel : any = [{\r\n  id : \"100%zoom\",\r\n  text : \"100%\",\r\n  selectOption : true\r\n},\r\n{\r\n  id : \"75%zoom\",\r\n  text : \"75%\",\r\n  selectOption : true\r\n},\r\n{\r\n  id : \"50%zoom\",\r\n  text : \"50%\",\r\n  selectOption : true\r\n},\r\n{\r\n  id : \"resetview\",\r\n  text : \"Reset View\",\r\n  selectOption : false\r\n}]\r\n\r\nexport const Toolbar: FunctionComponent<ToolbarFunction> = ({onSave , onLoad , onZoomIn , onZoomOut , onZoomFit , newTable }) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Grid container alignItems=\"center\" className={classes.root}>\r\n        \r\n        <TableChartIcon onClick={newTable} style={{display:\"block\"}} ></TableChartIcon>\r\n        <LaunchIcon></LaunchIcon>\r\n        <FileCopy></FileCopy>\r\n        <PrintIcon></PrintIcon>\r\n\r\n          \r\n            \r\n          <Divider orientation=\"vertical\" flexItem />\r\n        <Redo />\r\n        <Undo />\r\n        <Divider orientation=\"vertical\" flexItem />\r\n        <MenuSelect items={zoomLevel} defaultMenuText=\"100%\" menuName=\"zoomSelect\"></MenuSelect>\r\n  \r\n        <ZoomInIcon onClick={onZoomIn} />\r\n        <ZoomOutIcon  onClick={onZoomOut}/>\r\n        <ZoomOutIcon  onClick={onZoomFit}/>\r\n        <Divider orientation=\"vertical\" flexItem />\r\n        <BookmarksIcon onClick={onSave}></BookmarksIcon>\r\n        <DeleteIcon onClick={onLoad}></DeleteIcon>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","import React , {FunctionComponent} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\n\r\n\r\ninterface MenuProp{\r\n    menuName : string,\r\n    isOpen : boolean,\r\n    items : any[],\r\n    onClickMenu : (id : string) => void\r\n}\r\n\r\nexport const MenuButton: FunctionComponent<MenuProp> = ({isOpen , items , menuName , onClickMenu}) => {\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef<HTMLButtonElement>(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event: React.MouseEvent<EventTarget> , id : string) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n    onClickMenu(id)\r\n  };\r\n\r\n    return  (\r\n        <React.Fragment>\r\n        <span\r\n          style={{color : \"white\" , textTransform : \"capitalize\" , marginRight : 25 , cursor: \"pointer\"}}\r\n          ref={anchorRef}\r\n          aria-controls={open ? 'menu-list-grow' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleToggle}\r\n        >\r\n          {menuName}\r\n        </span>\r\n        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={(e)=>handleClose(e,\"\")}>\r\n                  <MenuList autoFocusItem={open} id=\"menu-list-grow\">\r\n                  {items.map(item=>{\r\n                    return (\r\n                        <MenuItem onClick={(e)=>handleClose(e,item.id)} key={menuName + item.id}>{item.text}</MenuItem>\r\n                    )\r\n                })}\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </React.Fragment>\r\n    )\r\n}","export const FileMenu : any = [{\r\n    id : \"openmenu\",\r\n    text : \"Open\"\r\n},\r\n{\r\n    id : \"importmenu\",\r\n    text : \"Import\"\r\n},\r\n{\r\n    id : \"savemenu\",\r\n    text : \"Save\"\r\n},\r\n{\r\n    id : \"exportmenu\",\r\n    text : \"Export\"\r\n}]\r\n\r\nexport const ViewMenu : any = [{\r\n    id : \"zoominmenu\",\r\n    text : \"ZoomIn\"\r\n},\r\n{\r\n    id : \"zoomoutmenu\",\r\n    text : \"ZoomOut\"\r\n},\r\n{\r\n    id : \"showgridmenu\",\r\n    text : \"Show Grid\"\r\n}]\r\n\r\nexport const ThemeMenu : any = [{\r\n    id : \"lightmenu\",\r\n    text : \"Light\"\r\n},\r\n{\r\n    id : \"darkmenu\",\r\n    text : \"Dark\"\r\n}]\r\n\r\nexport const EditMenu : any = [\r\n{\r\n    id : \"copymenu\",\r\n    text : \"Copy\",\r\n},\r\n{\r\n    id : \"cutmenu\",\r\n    text : \"Cut\",\r\n},\r\n{\r\n    id : \"deltemenu\",\r\n    text : \"Delete\",\r\n},\r\n{\r\n    id : \"duplicatemenu\",\r\n    text : \"Duplicate\",\r\n},\r\n{\r\n    id : \"undomenu\",\r\n    text : \"Undo\",\r\n},\r\n{\r\n    id : \"redomenu\",\r\n    text : \"Redo\",\r\n}\r\n]","const keywords = [\r\n    \"CREATE TABLE\",\r\n    \"ALTER TABLE\"\r\n]\r\n\r\nconst OnImport = (content : string)=>{\r\n    for (let i = 0; i < content.length; i++) {\r\n        const str = content.substr(i , content.length-1)\r\n        readUntilFoundKeyWord(str)\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction readUntilFoundKeyWord(content : string){\r\n    keywords.forEach(keyword => {\r\n        let index = content.indexOf(keyword)\r\n        if(index !== -1){ // found\r\n            \r\n        }\r\n    });\r\n}\r\n\r\nexport {OnImport}","\r\nimport React , {FunctionComponent} from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../store';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {MenuButton} from './MenuButton'\r\nimport {FileMenu , EditMenu, ThemeMenu} from '../data/menus'\r\n\r\nimport {OnImport} from '../api/import/sqlimport'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n\r\n    },\r\n    menu : {\r\n        marginRight : 10\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n  }),\r\n);\r\n\r\ninterface ToolbarFunction {\r\n  onExport : () => void,\r\n  onSave : () => void\r\n\r\n}\r\n\r\n\r\n\r\nexport const AppToolbar: FunctionComponent<ToolbarFunction> = ({onExport , onSave }) => {\r\n  const classes = useStyles();\r\n  \r\n  const isApiLoading = useSelector((state : RootState ) => state.ShareReducer.isLoading)\r\n\r\n  function loadOpenFile() {\r\n\t\tvar elem = document.getElementById(\"fileimport\");\r\n\t\tif (elem && document.createEvent) {\r\n\t\t\tvar evt = document.createEvent(\"MouseEvents\");\r\n\t\t\tevt.initEvent(\"click\", true, false);\r\n\t\t\telem.dispatchEvent(evt);\r\n\t\t}\r\n\t}\r\n\r\n  function onLoadFile(e: any) {\r\n\r\n\t\tvar input = e.target;\r\n\r\n\t\tvar reader = new FileReader();\r\n\t\treader.onload = (es) => {\r\n\t\t\tlet text = reader.result as string;\r\n\r\n      if(text === null){\r\n        text = \"\"\r\n      }\r\n\r\n      OnImport(text)\r\n\t\t\t\r\n\t\t\te.target.value = null\r\n\r\n\r\n\t\t};\r\n\t\treader.readAsText(input.files[0]);\r\n\t}\r\n\r\n  function onFileMenu(id:string){\r\n    alert(id)\r\n    switch (id) {\r\n      case \"importmenu\":\r\n        loadOpenFile()\r\n        break;\r\n    \r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AppBar position=\"static\" >\r\n    <Toolbar variant=\"dense\" style={{backgroundColor:\"#5661B3\"}}>\r\n    <Avatar variant=\"rounded\"  src=\"/img/erlogo.svg\" style={{width:25 , height:25 , backgroundColor:\"orange\" , marginRight : 20 , cursor: \"pointer\"}} />\r\n\r\n      <MenuButton isOpen={false} items={FileMenu} menuName=\"File\" onClickMenu={onFileMenu} />\r\n\r\n      <MenuButton isOpen={false} items={EditMenu} menuName=\"Edit\" onClickMenu={onFileMenu} />\r\n\r\n      <MenuButton isOpen={false} items={[]} menuName=\"Setting\" onClickMenu={onFileMenu} />\r\n\r\n      <MenuButton isOpen={false} items={ThemeMenu} menuName=\"Theme\" onClickMenu={onFileMenu} />\r\n   \r\n      <MenuButton isOpen={false} items={[]} menuName=\"Help\" onClickMenu={onFileMenu} />\r\n\r\n      <span className={classes.title}></span>\r\n\r\n      <input type=\"file\" id=\"fileimport\" style={{ display: \"none\" }} onChange={onLoadFile} />\r\n      \r\n      <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\" >\r\n              <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n      \r\n            <Button variant=\"outlined\" style={{marginLeft:15}} color=\"inherit\" \r\n            startIcon={(isApiLoading ? <CircularProgress style={{width:20,height:20}} color=\"inherit\" /> : <SaveIcon/> )} onClick={onSave}>Save</Button>\r\n                  <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n    </Toolbar>\r\n  </AppBar>\r\n  );\r\n}\r\n\r\n /*\r\n    <div className={classes.root}>\r\n      <div style={{height : 30,marginLeft : 20 }}>\r\n \r\n          <Typography variant=\"h6\" color=\"inherit\" >\r\n            Visual Draw\r\n            \r\n          </Typography>\r\n          \r\n      </div>\r\n      <div style={{height : 40}}>\r\n \r\n          \r\n      <Button>File</Button>\r\n          <Button onClick={onExport}>Export</Button>\r\n          <Button> Print</Button>\r\n          <Button>Help</Button>\r\n          <Typography className={classes.title}></Typography>\r\n\r\n          {isApiLoading ? <div>Saving....</div> : \"\"}\r\n   \r\n      </div>\r\n  \r\n    </div>\r\n    */\r\n\r\n","import React, { FunctionComponent, useEffect, useState } from 'react'\r\nimport Drawer from '@material-ui/core/Drawer';\r\n\r\nimport styled from '@emotion/styled';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n//mongodb+srv://topster:<password>@cluster0.hbfnd.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\r\n//aaebaYCK6opQGeRA\r\n\r\nexport interface TableEditorProp {\r\n  isOpen: boolean,\r\n  onclose: () => void\r\n}\r\n\r\n\r\nexport const LEFT = styled.div<{}>`\r\nwidth : 30%;\r\nheight: 100vh;\r\ncolor : white;\r\nfont-size : 20px;\r\nbackground-color: #005AA0;\r\n`;\r\n\r\nexport const MenuList = styled.div<{}>`\r\n\r\ncolor : white;\r\n\r\npadding : 15px;\r\nmargin-bottom : 10px;\r\n`;\r\n\r\nexport const Menu = styled.div<{}>`\r\n\r\ncolor : white;\r\nfont-size : 15px;\r\nmargin : 8px;\r\n\r\n`;\r\n\r\n\r\nexport const Right = styled.div<{}>`\r\nwidth : 70%;\r\nbackground-color: \"white\";\r\nmargin : 15px;\r\nfont-size : 20px;\r\n\r\n`;\r\n\r\n\r\n\r\n\r\nexport const SqlExport: FunctionComponent<ExportSqlProp> = ({ code, fileName, isRender, onDownloadClick , onInputChange }) => {\r\n  if (!isRender) {\r\n    return (<div></div>)\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div>Export sql</div>\r\n        <TextField label=\"file name\" variant=\"filled\" value={fileName} onChange={onInputChange} />\r\n        <TextField label=\"Filled\" variant=\"filled\" multiline\r\n          rowsMax={20} style={{ marginTop: 20, width: \"100%\", height: 400 }} value={code}  />\r\n        <Button variant=\"outlined\" color=\"primary\" style={{ marginRight: 10 }}>Copy</Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDownloadClick} >Download</Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport const ImageExport: FunctionComponent<ExportImageProp> = ({ fileName, isRender, imageType, onDownloadClick , onInputChange }) => {\r\n  if (!isRender) {\r\n    return (<div></div>)\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div>Export Image</div>\r\n        <TextField label=\"file name\" variant=\"filled\" value={fileName} onChange={onInputChange} />\r\n\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDownloadClick}  >Download</Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nenum MenuEnum {\r\n  Image,\r\n  MySql,\r\n  SqlServer,\r\n  Postresql,\r\n  Laravel\r\n}\r\n\r\n\r\ninterface ExportProp {\r\n  isOpen: boolean,\r\n  fileName : string,\r\n  onclose: () => void,\r\n  exportPng: (filename : string) => void,\r\n  exportPdf: (filename : string) => void,\r\n  exportSql: (filename : string) => void,\r\n  exportTest : (a : string) => void\r\n}\r\n\r\ninterface ExportEvent {\r\n  onclose: () => void,\r\n  exportPng: () => void,\r\n  exportPdf: (filename : string) => void,\r\n  exportSql: (filename : string) => void\r\n}\r\n\r\ninterface MenuExport {\r\n  isRender: boolean,\r\n  fileName: string,\r\n  onInputChange : (e : any) => void,\r\n  onDownloadClick: () => void\r\n}\r\n\r\ninterface ExportImageProp extends MenuExport {\r\n  imageType: string\r\n}\r\n\r\ninterface ExportSqlProp extends MenuExport {\r\n  code: string,\r\n}\r\n\r\nexport const ExportEditor: FunctionComponent<ExportProp> = ({ isOpen, onclose, exportPng,  exportSql , exportTest , fileName}) => {\r\n\r\n  const [currentMenu, setcurrentMenu] = useState(MenuEnum.Image)\r\n\r\n  const [currentFileName, setcurrentFileName] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    if(isOpen === false){\r\n      setcurrentFileName(fileName)\r\n    }\r\n    \r\n  }, [fileName])\r\n\r\n  const handleFileNameInput = (e : any) => setcurrentFileName(e.target.value)\r\n\r\n  const onExportSql = () => {\r\n    exportSql(currentFileName + \".sql\")\r\n  }\r\n\r\n  const onExportPng = () => {\r\n    exportPng(currentFileName + \".png\")\r\n  }\r\n\r\n  return (\r\n\r\n    <Drawer anchor={\"right\"} open={isOpen} style={{ width: 400 }} onClose={onclose}>\r\n      <div\r\n        style={{ width: 500, display: \"flex\" }}\r\n        role=\"presentation\"\r\n        className=\"\"\r\n      >\r\n\r\n        <LEFT>\r\n          <IconButton color=\"inherit\" size=\"medium\"><HighlightOffIcon></HighlightOffIcon></IconButton>\r\n          <MenuList>\r\n            <Menu onClick={() => setcurrentMenu(MenuEnum.MySql)}>Sql</Menu>\r\n            <Menu onClick={() => setcurrentMenu(MenuEnum.Image)}>Image</Menu>\r\n            <Menu onClick={() => exportTest('filename test')}>Pdf</Menu>\r\n\r\n            <Divider style={{ marginTop: 10, color: \"white\" }} light={true}></Divider>\r\n\r\n            <Menu>Laravel</Menu>\r\n            <Menu>Golang Gin</Menu>\r\n\r\n          </MenuList>\r\n        </LEFT>\r\n        <Right>\r\n          <SqlExport isRender={currentMenu == MenuEnum.MySql}\r\n          onInputChange={handleFileNameInput} code={\"\"} fileName={currentFileName} onDownloadClick={onExportSql} />\r\n          <ImageExport isRender={currentMenu == MenuEnum.Image} \r\n          onInputChange={handleFileNameInput} imageType=\"png\" fileName={currentFileName} onDownloadClick={onExportPng} />\r\n        </Right>\r\n\r\n      </div>\r\n    </Drawer>\r\n  )\r\n}\r\n","import React from 'react';\n\nconst Copy = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\" />\n    <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\" />\n  </svg>\n);\n\nexport default Copy;\n","import React from 'react';\n\nconst Cut = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"6\" cy=\"6\" r=\"3\" />\n    <circle cx=\"6\" cy=\"18\" r=\"3\" />\n    <line x1=\"20\" y1=\"4\" x2=\"8.12\" y2=\"15.88\" />\n    <line x1=\"14.47\" y1=\"14.48\" x2=\"20\" y2=\"20\" />\n    <line x1=\"8.12\" y1=\"8.12\" x2=\"12\" y2=\"12\" />\n  </svg>\n);\n\nexport default Cut;\n","import React from 'react';\n\nconst Delete = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <polyline points=\"3 6 5 6 21 6\" />\n    <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\" />\n    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\" />\n    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\" />\n  </svg>\n);\n\nexport default Delete;\n","import React from 'react';\n\nconst Duplicate = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={(size * 18) / 24}\n    viewBox=\"0 0 24 18\"\n    fill=\"none\"\n    stroke=\"none\"\n    strokeWidth=\"2\"\n  >\n    <g transform=\"translate(-678.000000, -2727.000000)\">\n      <g transform=\"translate(100.000000, 2626.000000)\">\n        <g transform=\"translate(578.000000, 98.000000)\">\n          <g transform=\"translate(0.000000, 0.000000)\">\n            <polygon points=\"0 0 24 0 24 24 0 24\" />\n            <path\n              d=\"M15,8 C14.45,8 14,8.45 14,9 L14,11 L12,11 C11.45,11 11,11.45 11,12 C11,12.55 11.45,13 12,13 L14,13 L14,15 C14,15.55 14.45,16 15,16 C15.55,16 16,15.55 16,15 L16,13 L18,13 C18.55,13 19,12.55 19,12 C19,11.45 18.55,11 18,11 L16,11 L16,9 C16,8.45 15.55,8 15,8 Z M2,12 C2,9.42 3.4,7.17 5.48,5.96 C5.8,5.77 6.01,5.45 6.01,5.08 C6.01,4.31 5.17,3.83 4.5,4.22 C1.82,5.78 0,8.68 0,12 C0,15.32 1.82,18.22 4.5,19.78 C5.17,20.17 6.01,19.69 6.01,18.92 C6.01,18.55 5.8,18.23 5.48,18.04 C3.4,16.83 2,14.58 2,12 Z M15,3 C10.04,3 6,7.04 6,12 C6,16.96 10.04,21 15,21 C19.96,21 24,16.96 24,12 C24,7.04 19.96,3 15,3 Z M15,19 C11.14,19 8,15.86 8,12 C8,8.14 11.14,5 15,5 C18.86,5 22,8.14 22,12 C22,15.86 18.86,19 15,19 Z\"\n              fill={color}\n            />\n          </g>\n        </g>\n      </g>\n    </g>\n  </svg>\n);\n\nexport default Duplicate;\n","import React from 'react';\n\nconst Paste = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    fill={color}\n    viewBox=\"0 0 512.001 512.001\"\n  >\n    <g>\n      <g>\n        <g>\n          <path\n            d=\"M481,371c11.046,0,20-8.954,20-20v-92c0-33.084-26.916-60-60-60h-39v-79c0-44.112-35.888-80-80-80h-47.533\n\t\t\t\tc-7.739-23.749-29.864-40-55.16-40h-25.614c-25.296,0-47.421,16.251-55.16,40H91c-44.112,0-80,35.888-80,80v312\n\t\t\t\tc0,44.112,35.888,80,80,80h88c11.046,0,20-8.954,20-20c0-11.046-8.954-20-20-20H91c-22.056,0-40-17.944-40-40V120\n\t\t\t\tc0-22.056,17.944-40,40-40h2v59c0,11.046,8.954,20,20,20h189c11.046,0,20-8.954,20-20V80c22.056,0,40,17.944,40,40v79h-65.007\n\t\t\t\tC263.914,199,237,225.913,237,258.993v193.015c0,33.08,26.916,59.993,60.01,59.993L441,511.926c33.084,0,60-26.913,60-59.992\n\t\t\t\tc0-11.046-8.954-20-20-20c-11.046,0-20,8.954-20,20c0,11.024-8.972,19.992-20.01,19.992L297,472c-11.028,0-20-8.969-20-19.993\n\t\t\t\tV258.993c0-11.024,8.969-19.993,19.993-19.993H441c11.028,0,20,8.972,20,20v92C461,362.046,469.955,371,481,371z M282,119H133V80\n\t\t\t\th21c9.177,0,17.177-6.246,19.403-15.149l2.798-11.194C178.211,45.616,185.404,40,193.693,40h25.614\n\t\t\t\tc8.289,0,15.481,5.616,17.492,13.657l2.798,11.194C241.823,73.754,249.823,80,259,80h23V119z\"\n          />\n          <path\n            d=\"M401,279h-64c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20h64c11.046,0,20-8.954,20-20\n\t\t\t\tC421,287.954,412.047,279,401,279z\"\n          />\n          <path\n            d=\"M401,349h-64c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20h64c11.046,0,20-8.954,20-20\n\t\t\t\tC421,357.954,412.047,349,401,349z\"\n          />\n        </g>\n      </g>\n    </g>\n  </svg>\n);\n\nexport default Paste;\n","import React from 'react';\n\nconst Redo = ({ size = 16, color = 'gray' }) => (\n  <svg width={size} height={size} viewBox=\"0 0 512 512\" fill={color}>\n    <path d=\"m431 481c0 11.046-8.954 20-20 20h-66c-11.046 0-20-8.954-20-20s8.954-20 20-20h66c11.046 0 20 8.954 20 20zm63.358-352.994-112.284-111.215c-7.848-7.773-20.511-7.713-28.284.135s-7.712 20.511.135 28.284l106.808 105.79h-285.733c-96.495 0-175 78.505-175 175s78.505 175 175 175h69c11.046 0 20-8.954 20-20s-8.954-20-20-20h-69c-74.439 0-135-60.561-135-135s60.561-135 135-135h284.836l-105.037 105.917c-7.778 7.843-7.725 20.506.118 28.284 3.9 3.868 8.992 5.799 14.083 5.799 5.146 0 10.292-1.975 14.202-5.917l111.225-112.157c11.332-11.332 17.573-26.4 17.573-42.426s-6.241-31.094-17.642-42.494z\" />\n  </svg>\n);\n\nexport default Redo;\n","import React from 'react';\n\nconst Settings = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"12\" cy=\"12\" r=\"3\" />\n    <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\" />\n  </svg>\n);\n\nexport default Settings;\n","import React from 'react';\n\nconst Undo = ({ size = 16, color = 'gray' }) => (\n  <svg width={size} height={size} viewBox=\"0 0 512 512\" fill={color}>\n    <path d=\"m 81,481 c 0,11.046 8.954,20 20,20 h 66 c 11.046,0 20,-8.954 20,-20 0,-11.046 -8.954,-20 -20,-20 h -66 c -11.046,0 -20,8.954 -20,20 z M 17.642,128.006 129.926,16.791 c 7.848,-7.773 20.511,-7.713 28.284,0.135 7.773,7.848 7.712,20.511 -0.135,28.284 L 51.267,151 H 337 c 96.495,0 175,78.505 175,175 0,96.495 -78.505,175 -175,175 h -69 c -11.046,0 -20,-8.954 -20,-20 0,-11.046 8.954,-20 20,-20 h 69 c 74.439,0 135,-60.561 135,-135 0,-74.439 -60.561,-135 -135,-135 H 52.164 l 105.037,105.917 c 7.778,7.843 7.725,20.506 -0.118,28.284 -3.9,3.868 -8.992,5.799 -14.083,5.799 -5.146,0 -10.292,-1.975 -14.202,-5.917 L 17.573,212.926 C 6.241,201.594 0,186.526 0,170.5 0,154.474 6.241,139.406 17.642,128.006 Z\" />\n  </svg>\n);\n\nexport default Undo;\n","import React from 'react';\n\nconst ZoomIn = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"11\" cy=\"11\" r=\"8\" />\n    <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\" />\n    <line x1=\"11\" y1=\"8\" x2=\"11\" y2=\"14\" />\n    <line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\" />\n  </svg>\n);\n\nexport default ZoomIn;\n","import React from 'react';\n\nconst ZoomOut = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"11\" cy=\"11\" r=\"8\" />\n    <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\" />\n    <line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\" />\n  </svg>\n);\n\nexport default ZoomOut;\n","import React from 'react';\r\n\r\nimport styled from '@emotion/styled';\r\n\r\nconst Container = styled.span`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  height: ${props => props.size}px;\r\n  padding: 0 ${props => props.size / 4}px;\r\n  margin: 2px ${props => props.size / 8}px;\r\n  font-size: ${props => props.size / 2}px;\r\n  font-family: monospace;\r\n  color: #000000c4;\r\n  background: #ececec;\r\n  border-radius: 4px;\r\n  border: 1px solid #ffffff17;\r\n  box-shadow: inset 0 0 ${props => props.size / 4}px #0000000a;\r\n`;\r\n\r\nconst Key = ({ children, size = 16 }) => (\r\n  <Container size={size}>{children}</Container>\r\n);\r\n\r\nexport default Key;","\r\nimport styled from '@emotion/styled';\r\nconst ContextMenuIconContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 16px;\r\n  height: 16px;\r\n  margin-right: 16px;\r\n`;\r\n\r\nexport default ContextMenuIconContainer;","import styled from '@emotion/styled';\r\n\r\nconst ContextMenuShortcutContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  justify-content: flex-end;\r\n  margin-left: 8px;\r\n`;\r\n\r\nexport default ContextMenuShortcutContainer;","import React , {FunctionComponent} from 'react';\r\n\r\nimport { Menu, Item, Separator } from 'react-contexify';\r\n\r\nimport {\r\n  Duplicate,\r\n  Copy,\r\n  Delete,\r\n  Paste,\r\n  Redo,\r\n  Settings,\r\n  Undo,\r\n  Cut,\r\n  ZoomIn,\r\n  ZoomOut,\r\n} from '../Icons';\r\nimport Key from './KeyMenu';\r\nimport ContextMenuIconContainer from './ContextMenuIconContainer';\r\nimport ContextMenuShortcutContainer from './ContextMenuShortcutContainer';\r\nimport {ComponentFunction} from './FunctionList'\r\n\r\n  export const ComponentContextMenu : FunctionComponent<ComponentFunction> = ({copyFunc , pasteFunc , deleteFunc , duplicateFunc , cutFunc , zoomIn , zoomOut} ) => (\r\n  <Menu id=\"component\">\r\n    <Item onClick={duplicateFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Duplicate />\r\n      </ContextMenuIconContainer>\r\n      Duplicate\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>D</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={cutFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Cut />\r\n      </ContextMenuIconContainer>\r\n      Cut\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>X</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={copyFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Copy />\r\n      </ContextMenuIconContainer>\r\n      Copy\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>C</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={pasteFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Paste />\r\n      </ContextMenuIconContainer>\r\n      Paste\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>V</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={deleteFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Delete />\r\n      </ContextMenuIconContainer>\r\n      Delete\r\n      <ContextMenuShortcutContainer>\r\n        <Key>Delete</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Separator />\r\n\r\n    <Item onClick={zoomIn}>\r\n      <ContextMenuIconContainer>\r\n        <ZoomIn />\r\n      </ContextMenuIconContainer>\r\n      Zoom in\r\n    </Item>\r\n\r\n    <Item onClick={zoomOut}>\r\n      <ContextMenuIconContainer>\r\n        <ZoomOut />\r\n      </ContextMenuIconContainer>\r\n      Zoom out\r\n    </Item>\r\n\r\n    <Separator />\r\n\r\n    <Item onClick={pasteFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Undo />\r\n      </ContextMenuIconContainer>\r\n      Undo\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>Z</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={pasteFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Redo />\r\n      </ContextMenuIconContainer>\r\n      Redo\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>SHIFT</Key>\r\n        <Key>Z</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Separator />\r\n\r\n    <Item\r\n     \r\n    >\r\n      <ContextMenuIconContainer>\r\n        <Settings />\r\n      </ContextMenuIconContainer>\r\n      Edit configurations...\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>E</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n  </Menu>\r\n);\r\n\r\nexport default ComponentContextMenu;","import React , {FunctionComponent} from 'react';\r\n\r\nimport { Menu, Item, Separator } from 'react-contexify';\r\n\r\nimport { Redo, Undo, Paste, ZoomIn, ZoomOut } from '../Icons';\r\nimport Key from './KeyMenu';\r\nimport ContextMenuIconContainer from './ContextMenuIconContainer';\r\nimport ContextMenuShortcutContainer from './ContextMenuShortcutContainer';\r\n\r\nimport {ContextFunction} from './FunctionList'\r\n\r\n\r\nexport const DiagramContextMenu : FunctionComponent<ContextFunction> = ({zoomIn , zoomOut , \r\n  pasteFunc , redoFunc , undoFunc} ) => (\r\n  <Menu id=\"diagram\">\r\n    <Item onClick={pasteFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Paste />\r\n      </ContextMenuIconContainer>\r\n      Paste\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>V</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Separator />\r\n\r\n    <Item onClick={zoomIn}>\r\n      <ContextMenuIconContainer>\r\n        <ZoomIn />\r\n      </ContextMenuIconContainer>\r\n      Zoom in\r\n    </Item>\r\n    <Item onClick={zoomOut}>\r\n      <ContextMenuIconContainer>\r\n        <ZoomOut />\r\n      </ContextMenuIconContainer>\r\n      Zoom out\r\n    </Item>\r\n\r\n    <Separator />\r\n\r\n    <Item onClick={undoFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Undo />\r\n      </ContextMenuIconContainer>\r\n      Undo\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>Z</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={redoFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Redo />\r\n      </ContextMenuIconContainer>\r\n      Redo\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>SHIFT</Key>\r\n        <Key>Z</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n  </Menu>\r\n);\r\n\r\nexport default DiagramContextMenu;","import React , {FunctionComponent} from 'react';\r\n\r\nimport {ComponentContextMenu} from './ComponentContextMenu';\r\nimport {DiagramContextMenu} from './DiagramContextMenu';\r\n\r\nimport 'react-contexify/dist/ReactContexify.min.css';\r\nimport {AllContextFunction} from './FunctionList'\r\n\r\n\r\n\r\nexport const ContextMenus: FunctionComponent<AllContextFunction> = ({copyFunc , deleteFunc , duplicateFunc , cutFunc , pasteFunc , zoomIn , zoomOut} ) => {\r\n\r\n  return (\r\n    <>\r\n    <DiagramContextMenu  pasteFunc={pasteFunc} zoomIn={zoomIn} zoomOut={zoomOut}  />\r\n    <ComponentContextMenu  copyFunc={copyFunc} pasteFunc={pasteFunc} \r\n    deleteFunc={deleteFunc} duplicateFunc={duplicateFunc} cutFunc={cutFunc} zoomIn={zoomIn} zoomOut={zoomOut} />\r\n  </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","\nimport {Action, InputType, BaseModel } from '@projectstorm/react-canvas-core';\n\n\n/**\n * Handles delete actions.\n */\nexport default class DeleteAction extends Action {\n  constructor(areShortcutsAllowed : boolean) {\n    super({\n      type: InputType.KEY_DOWN,\n      fire: ({ event }) => {\n        console.log(JSON.stringify(event))\n        //if (!areShortcutsAllowed) return;\n        if (this.engine.getModel().isLocked()) return;\n        \n        if (this.matchesInput(event)) {\n          event.preventDefault();\n          this.handleAction();\n        }\n      },\n    });\n  }\n\n  matchesInput(event : any) : boolean{\n    return event.ctrlKey && event.code === 'Delete'\n  }\n\n  handleAction = () => {\n    console.log(\"delete\")\n    const entities = this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(model => !model.isLocked());\n\n    //this.fireEvent(entities);\n\n    entities.forEach(model => model.remove());\n\n    this.engine.repaintCanvas();\n  };\n\n \n}\n","import { DefaultLinkModel, LabelModel } from '@projectstorm/react-diagrams';\r\nimport {  DeserializeEvent } from '@projectstorm/react-canvas-core';\r\nexport class SchemaLinkModel extends DefaultLinkModel {\r\n    \r\n    //ຕົວແປທີ່ກຳຫນົດວ່າ ref ທີ່ເປັນ belong to ແມ່ນມາຈາກ Port In ຫລື ຫນ້າ ຫລື ບໍ່\r\n    public RefInPort : boolean = false\r\n\r\n    setLabels(labelset : LabelModel[]){\r\n        alert(\"set label\")\r\n        this.labels = labelset\r\n    }\r\n\r\n}","import {\r\n\tLinkModel,\r\n\tPortModel,\r\n\tPortModelAlignment,\r\n\tPortModelGenerics,\r\n\tPortModelOptions\r\n} from '@projectstorm/react-diagrams-core';\r\n//import { DefaultLinkModel } from '@projectstorm/react-diagrams-defaults/src/link/DefaultLinkModel';\r\nimport {DefaultPortModel ,DefaultLinkModel } from '@projectstorm/react-diagrams-defaults'\r\nimport { AbstractModelFactory, DeserializeEvent } from '@projectstorm/react-canvas-core';\r\nimport { SchemaLinkModel } from '../link/SchemaLinkModel';\r\n\r\n\r\nexport interface SchemaPortModelOptions extends PortModelOptions {\r\n\tlabel?: string;\r\n\ttypename?: string,\r\n\tfk ?: boolean,\r\n\tpk ?: boolean,\r\n\tin?: boolean;\r\n}\r\n\r\nexport interface SchemaPortModelGenerics extends PortModelGenerics {\r\n\tOPTIONS: SchemaPortModelOptions;\r\n}\r\n\r\nexport interface DefaultPortModelOptions extends PortModelOptions {\r\n\tlabel?: string;\r\n\tin?: boolean;\r\n}\r\n\r\nexport interface DefaultPortModelGenerics extends PortModelGenerics {\r\n\tOPTIONS: DefaultPortModelOptions;\r\n}\r\n\r\nexport class SchemaPortModel extends DefaultPortModel {\r\n\tcreateLinkModel(): SchemaLinkModel  {\r\n\t\treturn new SchemaLinkModel();\r\n\t}\r\n}\r\n\r\n","import * as _ from 'lodash';\r\nimport { NodeModel, NodeModelGenerics, PortModel, PortModelAlignment } from '@projectstorm/react-diagrams-core';\r\nimport { SchemaPortModel } from '../port/SchemaPortModel';\r\nimport { BasePositionModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\r\nimport { DefaultLinkModel, DefaultPortModel, DiagramEngine, LinkModel, PathFindingLinkFactory } from '@projectstorm/react-diagrams';\r\nimport { TableData  } from '../../components/TableEditor';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nexport interface DefaultNodeModelOptions extends BasePositionModelOptions {\r\n\tname?: string;\r\n\tcolor?: string;\r\n}\r\n\r\nexport interface Field{\r\n\tinId ?: string,\r\n\toutId ?: string,\r\n\tfieldName : string,\r\n\tfieldType : string,\r\n\tfieldOption ?: FieldOption\r\n}\r\n\r\nexport interface FieldOption {\r\n\tportId : string,\r\n\tai ?: boolean\r\n\tpk ?: boolean,\r\n\tfk ?: boolean,\r\n\tfkTb ?: string,\r\n\tfkField ?: string\r\n}\r\n\r\nexport interface SchemaNodeModelGenerics extends NodeModelGenerics {\r\n\tOPTIONS: DefaultNodeModelOptions;\r\n}\r\n\r\nexport class SchemaNodeModel extends NodeModel<SchemaNodeModelGenerics> {\r\n\tprotected portsIn: SchemaPortModel[];\r\n\tprotected portsOut: SchemaPortModel[];\r\n\tprotected fieldOptions : FieldOption[]\t\r\n\r\n\tconstructor(name: string, color: string);\r\n\tconstructor(options?: DefaultNodeModelOptions);\r\n\tconstructor(options: any = {}, color?: string) {\r\n\t\tif (typeof options === 'string') {\r\n\t\t\toptions = {\r\n\t\t\t\tname: options,\r\n\t\t\t\tcolor: color\r\n\t\t\t};\r\n\t\t}\r\n\t\tsuper({\r\n\t\t\ttype: 'default',\r\n\t\t\tname: 'Untitled',\r\n\t\t\tcolor: 'rgb(0,192,255)',\r\n\t\t\t...options\r\n\t\t});\r\n\t\tthis.portsOut = [];\r\n\t\tthis.portsIn = [];\r\n\t\tthis.fieldOptions = []\r\n\t}\r\n\r\n\tperformanceTune() : boolean { return false}\r\n\r\n\tdoClone(lookupTable: {}, clone: SchemaNodeModel): void {\r\n\r\n\t\tconsole.log('original id : ' + this.getID())\r\n\t\tclone.portsIn = [];\r\n\t\tclone.portsOut = [];\r\n\t\t\r\n\t\tsuper.doClone(lookupTable, clone);\r\n\t\tlet fields = []\r\n\t\tfor (let i = 0; i < clone.portsIn.length; i++) {\r\n\t\t\tclone.fieldOptions[i].portId = clone.portsIn[i].getID()\r\n\t\t}\r\n\t}\r\n\r\n\tremoveFieldbyId(id : string): void{\r\n\t\t\r\n\t\tlet indexof = this.portsIn.findIndex(p=>p.getID() == id );\r\n\r\n\t\tlet fieldIndex = this.fieldOptions.findIndex(f=>f.portId == id)\r\n\r\n\t\tif(indexof === -1) return\r\n\r\n\t\tif(fieldIndex !== -1){\r\n\t\t\tthis.fieldOptions.splice(fieldIndex, 1);\r\n\t\t}\r\n\r\n\t\tthis.removeField(indexof)\r\n\t}\r\n\r\n\tremovePort(port: SchemaPortModel): void {\r\n\t\tsuper.removePort(port);\r\n\t\r\n\t\tif (port.getOptions().in) {\r\n\t\t\tthis.portsIn.splice(this.portsIn.indexOf(port), 1);\r\n\t\t} else {\r\n\t\t\tthis.portsOut.splice(this.portsOut.indexOf(port), 1);\r\n\t\t}\r\n\t}\r\n\r\n\tupdateNode(tb : TableData){\r\n\t\r\n\t\tlet fields_tb = tb.fields\r\n\t\tlet fields = this.getAllField()\r\n\t\tfor (let i = 0; i < fields_tb.length; i++) {\r\n\t\t\tif(fields[i].fieldName !== fields_tb[i].fieldName){\r\n\t\t\t\tthis.portsIn[i].getOptions().label = fields_tb[i].fieldName\r\n\t\t\t}\r\n\t\t\tif(fields[i].fieldType !== fields_tb[i].fieldType){\r\n\t\t\t\tthis.portsOut[i].getOptions().label = fields_tb[i].fieldType\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\r\n\taddField(field : Field) : SchemaPortModel[] {\r\n\t\t\r\n\t\tlet portin = this.addInPort(field.fieldName)\r\n\t\tlet portout = this.addOutPort(field.fieldType)\r\n\t\t\r\n\t\tlet add : FieldOption = {\r\n\t\t\tportId : portin.getID(),\r\n\t\t\tai : false,\r\n\t\t\tpk : false,\r\n\t\t\tfk : false,\r\n\t\t\tfkTb : \"\",\r\n\t\t\tfkField : \"\"\r\n\t\t}\r\n\r\n\t\tthis.fieldOptions.push(add)\r\n\r\n\t\treturn [portin , portout]\r\n\t}\r\n\r\n\tremoveField(i : number){\r\n\r\n\t\tthis.removePort(this.portsIn[i])\r\n\t\tthis.removePort(this.portsOut[i])\r\n\t}\r\n\r\n\tAddNewField(){\r\n\r\n\t\tlet field : Field = {\r\n\t\t\tfieldName : \"test\",\r\n\t\t\tfieldType : \"int\"\r\n\t\t}\r\n\t\tthis.addField(field)\r\n\r\n\t}\r\n\r\n\taddOrUpdateFieldOption(field : Field)  : void{\r\n\t\tlet fieldIndex = this.fieldOptions.findIndex(f=>f.portId === field.inId)\r\n\t\tif(fieldIndex === -1) return\r\n\t\t\r\n\t\tif(field.fieldOption === undefined) return \r\n\t\tthis.fieldOptions[fieldIndex] = field.fieldOption\r\n\t\tconsole.log(field.fieldOption)\r\n\r\n\t\t//fieldrs.\r\n\t\tlet fieldOption = field.fieldOption\r\n\t\tif(fieldOption == undefined) return\r\n\t\t\r\n\t\tlet targetNodeId = (fieldOption.fkTb === undefined) ? \"\" : fieldOption.fkTb\r\n\t\tlet targetPortId = (fieldOption.fkField === undefined) ? \"\" : fieldOption.fkField\r\n\t\tlet sourceIdPort = (field.inId === undefined) ? \"\" : field.inId\r\n\t\t\r\n\t\t//this.linkForeignKey(targetNodeId , targetPortId ,  sourceIdPort)\r\n\t}\r\n\r\n\tlinkForeignKey(targetPort : SchemaPortModel , sourcePort : SchemaPortModel , path : PathFindingLinkFactory): LinkModel | undefined{\r\n\r\n\t\tconsole.log(\"main field \" + sourcePort.getOptions().label + \" link with : \" + targetPort.getOptions().label)\r\n\r\n\t\tlet link =  targetPort.link(sourcePort )\r\n\r\n\t\ttargetPort.reportPosition()\r\n\t\tsourcePort.reportPosition()\r\n\t\treturn link\r\n\t}\r\n\r\n\tgetAllField() : Field[]{\r\n\t\tlet portins = this.portsIn\r\n\t\tlet portouts = this.portsOut\r\n\t\tlet rs : Field[] = []\r\n\t\t//console.log(\"get field lenght : \"+ portins.length)\r\n\r\n\t\t//console.log(this.fieldOptions)\r\n\r\n\t\tfor (let i = 0; i < portins.length; i++) {\r\n\t\t\t//console.log(\"check field \" + i )\r\n\t\t\t\r\n\t\t\tlet f = this.getField(i)\r\n\t\t\t//console.log(f)\r\n\t\t\trs.push(f)\r\n\t\t}\r\n\t\treturn rs\r\n\t}\r\n\r\n\tgetField(index : number) : Field{\r\n\r\n\t\tlet field = this.portsIn[index].getOptions().label\r\n\t\tlet type = this.portsOut[index].getOptions().label\r\n\t\tlet id = this.portsIn[index].getID()\r\n\t\t//console.log(\"check id : \" + id)\r\n\t\t\r\n\t\tlet fieldOptionIndex = this.fieldOptions.findIndex(f=>f.portId === id)\r\n\r\n\t\t//console.log(\"fieldopt index : \" + fieldOptionIndex)\r\n\r\n\t\tif(fieldOptionIndex === -1){\r\n\t\t\tlet r : Field = {\r\n\t\t\t\tinId : '',\r\n\t\t\toutId : '',\r\n\t\t\tfieldName : '',\r\n\t\t\tfieldType : '',\r\n\t\r\n\t\t\t}\r\n\t\t\treturn r\r\n\t\t}\r\n\r\n\t\tlet fieldOption = this.fieldOptions[fieldOptionIndex]\r\n\t\t//console.log(\"field name : \" + field + \" pk : \" + fieldOption.pk + \" fk : \" + fieldOption.fk)\r\n\r\n\t\tif(field === undefined) field = \"\"\r\n\t\tif(type === undefined) type = \"\"\r\n\r\n\t\t\r\n\t\tlet rs : Field = {\r\n\t\t\tinId : this.portsIn[index].getID(),\r\n\t\t\toutId : this.portsOut[index].getID(),\r\n\t\t\tfieldName : field,\r\n\t\t\tfieldType : type,\r\n\t\t\tfieldOption : fieldOption\r\n\t\t}\r\n\r\n\t\treturn rs\r\n\t}\r\n\r\n\tupdatePort(port: SchemaPortModel , index : number){\r\n\t\t\r\n\t}\r\n\r\n\taddPort<T extends SchemaPortModel>(port: T): T {\r\n\r\n\r\n\t\tsuper.addPort(port);\r\n\t\t\r\n\t\tif (port.getOptions().in) {\r\n\t\t\tif (this.portsIn.indexOf(port) === -1) {\r\n\t\t\t\tthis.portsIn.push(port);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.portsOut.indexOf(port) === -1) {\r\n\t\t\t\tthis.portsOut.push(port);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn port;\r\n\t}\r\n\r\n\tmirrorPort(port : SchemaPortModel){ // port in to port out || port out to port in\r\n\t\tlet portRs = (port.getOptions().in) ? this.getInPorts() : this.getOutPorts()\r\n\t\tlet index = portRs.findIndex(p=>p.getID() === port.getID())\r\n\t\tconsole.log(index)\r\n\t\tif(index === -1) return\r\n\t\treturn (port.getOptions().in) ? this.getOutPorts()[index] : this.getInPorts()[index]\r\n\t}\r\n\r\n\tportInIdtoPortOut(id : string) : SchemaPortModel {\r\n\t\tconst index =  this.getInPorts().findIndex(p=>p.getID() === id)\r\n\t\r\n\t\treturn this.getPortOutByIndex(index)\r\n\t}\r\n\r\n\tgetPortInByIndex(i:number){\r\n\t\treturn this.portsIn[i]\r\n\t}\r\n\r\n\tgetPortOutByIndex(i:number){\r\n\t\treturn this.portsOut[i]\r\n\t}\r\n\r\n\r\n\tsetNodeOption(id : string){\r\n\r\n\t\tlet port = this.getPortFromID(id) as SchemaPortModel\r\n\t\tlet isIn = port.getOptions().in\r\n\r\n\t\tif(isIn === undefined) return\r\n\r\n\t\tlet index = -1\r\n\r\n\t\tif(!isIn){\r\n\t\t\tindex = this.portsOut.findIndex(p=>p.getID() === id)\r\n\t\t\tif(index === -1) return\r\n\t\t}\r\n\r\n\t\tlet inId = (isIn) ? id : this.getPortInByIndex(index).getID()\r\n\r\n\t\tlet fieldIndex = this.fieldOptions.findIndex(f=>f.portId === inId)\r\n\r\n\t\tif(fieldIndex === -1) return\r\n\t\tthis.fieldOptions[fieldIndex].fk = true\r\n\t\t\r\n\t}\r\n\r\n\taddInPort(label: string, after = true): SchemaPortModel {\r\n\t\tlet uid = uuidv4()\r\n\t\tconst p = new SchemaPortModel({\r\n\t\t\tin: true,\r\n\t\t\tname: uid,\r\n\t\t\tlabel: label,\r\n\t\t\talignment: PortModelAlignment.LEFT\r\n\t\t});\r\n\t\tif (!after) {\r\n\t\t\tthis.portsIn.splice(0, 0, p);\r\n\t\t}\r\n\t\treturn this.addPort(p);\r\n\t}\r\n\r\n\taddOutPort(label: string, after = true): SchemaPortModel {\r\n\t\tlet uid = uuidv4()\r\n\t\tconst p = new SchemaPortModel({\r\n\t\t\tin: false,\r\n\t\t\tname: uid,\r\n\t\t\tlabel: label,\r\n\t\t\talignment: PortModelAlignment.RIGHT\r\n\t\t});\r\n\t\tif (!after) {\r\n\t\t\tthis.portsOut.splice(0, 0, p);\r\n\t\t}\r\n\t\treturn this.addPort(p);\r\n\t}\r\n\r\n\tgetOutIdFromInId(id : string){\r\n\t\tlet index  = this.getInPorts().findIndex(p=>p.getID() === id)\r\n\t\tif(index === -1) return \"\"\r\n\t\treturn this.getOutPorts()[index].getID()\r\n\t}\r\n\r\n\tgetInIdFromOutId(id : string){\r\n\t\tlet index  = this.getOutPorts().findIndex(p=>p.getID() === id)\r\n\t\tif(index === -1) return \"\"\r\n\t\treturn this.getInPorts()[index].getID()\r\n\t}\r\n\r\n\t//when convert back to model it is no function to add field and add fieldoption : \r\n\t//fix you need \r\n\r\n\tdeserialize(event: DeserializeEvent<this>) {\r\n\t\tsuper.deserialize(event);\r\n\r\n\t\tthis.options.name = event.data.name;\r\n\t\tthis.options.color = event.data.color;\r\n\t\tthis.fieldOptions = event.data.fields\r\n\r\n\t\tconsole.log(this.fieldOptions)\r\n\t\tthis.portsIn = _.map(event.data.portsInOrder, (id : any) => {\r\n\t\t\treturn this.getPortFromID(id);\r\n\t\t}) as SchemaPortModel[];\r\n\t\tthis.portsOut = _.map(event.data.portsOutOrder, (id : any) => {\r\n\t\t\treturn this.getPortFromID(id);\r\n\t\t}) as SchemaPortModel[];\r\n\r\n\t}\r\n\r\n\tserialize(): any {\r\n\r\n\t\tlet fields = []\r\n\r\n\t\tfor (let i = 0; i < this.portsIn.length; i++) {\r\n\t\t\t\r\n\t\t\tlet fieldOptionIndex = this.fieldOptions.findIndex(f=>f.portId === this.portsIn[i].getID())\r\n\t\t\t//console.log(\"fieldOptIndex : \" + fieldOptionIndex)\r\n\t\t\tif(fieldOptionIndex === -1) continue\r\n\t\t\tfields.push({\r\n\t\t\t\tportId : this.portsIn[i].getID(),\r\n\t\t\t\tai : this.fieldOptions[fieldOptionIndex].ai,\r\n\t\t\t\tpk : this.fieldOptions[fieldOptionIndex].pk,\r\n\t\t\t\tfk : this.fieldOptions[fieldOptionIndex].fk\r\n\t\t\t})\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\t\r\n\t\treturn {\r\n\t\t\t...super.serialize(),\r\n\t\t\tname: this.options.name,\r\n\t\t\tcolor: this.options.color,\r\n\t\t\tfields : fields,\r\n\t\t\tportsInOrder: _.map(this.portsIn, (port) => {\r\n\t\t\t\treturn port.getID();\r\n\t\t\t}),\r\n\t\t\tportsOutOrder: _.map(this.portsOut, (port) => {\r\n\t\t\t\treturn port.getID();\r\n\t\t\t})\r\n\t\t};\r\n\t}\r\n\r\n\ttoJson() : any{\r\n\t\t\r\n\t\tlet fields = []\r\n\t\tfor (let i = 0; i < this.portsIn.length; i++) {\r\n\t\t\tlet fieldOptionIndex = this.fieldOptions.findIndex(f=>f.portId === this.portsIn[i].getID())\r\n\t\t\tif(fieldOptionIndex === -1) continue\r\n\t\t\tlet field = {\r\n\t\t\t\tfieldName : this.portsIn[i].getOptions().label,\r\n\t\t\t\tfieldType : this.portsOut[i].getOptions().label,\r\n\t\t\t\tfieldOption : this.fieldOptions[fieldOptionIndex]\r\n\t\t\t}\r\n\t\t\tfields.push(field)\r\n\t\t}\r\n\t\tlet rs = {\r\n\t\t\tname : this.options.name,\r\n\t\t\tcolor : this.options.color,\r\n\t\t\tfields : fields\r\n\t\t}\r\n\t\treturn rs\r\n\t}\r\n\r\n\tgetInPorts(): SchemaPortModel[] {\r\n\t\treturn this.portsIn;\r\n\t}\r\n\r\n\tgetOutPorts(): SchemaPortModel[] {\r\n\t\treturn this.portsOut;\r\n\t}\r\n\r\n\t\r\n}","import { DiagramModel, LinkModel, NodeModel } from '@projectstorm/react-diagrams';\r\n\r\nimport { Action, InputType } from '@projectstorm/react-canvas-core';\r\n\r\nimport {BaseModel} from '@projectstorm/react-canvas-core';\r\nimport { SchemaNodeModel } from '../../schemanode/node/SchemaNodeModel';\r\n\r\n/**\r\n * Handle duplication (clone) actions.\r\n */\r\nexport default class NewNodeAction extends Action {\r\n  constructor(areShortcutsAllowed : boolean) {\r\n    super({\r\n      type: InputType.KEY_DOWN,\r\n      fire: ({ event }) => {\r\n        if (!areShortcutsAllowed) return;\r\n        if (this.engine.getModel().isLocked()) return;\r\n\r\n        if (this.matchesInput(event)) {\r\n          event.preventDefault();\r\n          this.handleAction();\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  matchesInput(event : any) : boolean{\r\n    return event.ctrlKey && event.code === 'KeyB'\r\n  }\r\n\r\n  handleAction = () => {\r\n     \r\n    let snode =  new SchemaNodeModel({\r\n\t\tname: 'Product',\r\n\t\tcolor: 'rgb(0,192,255)'\r\n\t});\r\n    snode.addField({fieldName : \"Id\" , fieldType : \"int\"})\r\n\r\n    snode.setPosition(100, 100);\r\n\r\n    let model = this.engine.getModel() as DiagramModel\r\n\r\n    model.addAll(snode)\r\n\r\n    //this.engine.fireEvent({ nodes: clones }, 'componentsAdded');\r\n\r\n    this.engine.repaintCanvas();\r\n  };\r\n}\r\n","import { DiagramModel, LinkModel, NodeModel } from '@projectstorm/react-diagrams';\n\nimport { Action, InputType } from '@projectstorm/react-canvas-core';\n\nimport {BaseModel} from '@projectstorm/react-canvas-core';\n\n/**\n * Handle duplication (clone) actions.\n */\nexport default class DuplicateAction extends Action {\n  constructor(areShortcutsAllowed : boolean) {\n    super({\n      type: InputType.KEY_DOWN,\n      fire: ({ event }) => {\n        if (!areShortcutsAllowed) return;\n        if (this.engine.getModel().isLocked()) return;\n\n        if (this.matchesInput(event)) {\n          event.preventDefault();\n          this.handleAction();\n        }\n      },\n    });\n  }\n\n  matchesInput(event : any) : boolean{\n    return event.ctrlKey && event.code === 'KeyD'\n  }\n\n  handleAction = () => {\n    const model = this.engine.getModel() as DiagramModel\n\n    const clones : BaseModel[] = model \n      .getSelectedEntities()\n      .filter(entity => entity instanceof BaseModel)\n      .filter(entity => !entity.isLocked())\n      .map(entity => entity.clone());\n\n    model.clearSelection();\n\n    clones.forEach(clone => {\n\n      if (clone instanceof NodeModel) {\n        model.addNode(clone)\n        clone.setSelected(true);\n      }\n      \n      \n    });\n\n    //this.engine.fireEvent({ nodes: clones }, 'componentsAdded');\n\n    this.engine.repaintCanvas();\n  };\n}\n","import { Action, InputType , DeserializeEvent } from '@projectstorm/react-canvas-core';\r\n\r\nimport {BaseModel} from '@projectstorm/react-canvas-core';\r\nimport { DiagramModel, NodeModel } from '@projectstorm/react-diagrams';\r\n\r\nimport { SchemaNodeModel } from '../../schemanode/node/SchemaNodeModel';\r\n\r\n\r\n/**\r\n * Handles clipboard actions.\r\n */\r\nexport default class ClipboardAction extends Action {\r\n  constructor(areShortcutsAllowed : boolean) {\r\n    super({\r\n      type: InputType.KEY_DOWN,\r\n      fire: ({ event }) => {\r\n        if (!areShortcutsAllowed) return;\r\n        if (this.engine.getModel().isLocked()) return;\r\n\r\n        if (this.matchesInput(event)) {\r\n          event.preventDefault();\r\n\r\n          const e : any = event;\r\n          if (e.code === 'KeyX') this.handleCut();\r\n          if (e.code === 'KeyC') this.handleCopy();\r\n          if (e.code === 'KeyV') this.handlePaste();\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  matchesInput(event : any) : boolean{\r\n        return event.ctrlKey && (event.code === 'KeyX' || event.code === \"KeyC\" || \r\n        event.code === \"KeyV\")     \r\n  }\r\n\r\n  getSelectedComponents = () =>\r\n    this.engine\r\n      .getModel()\r\n      .getSelectedEntities()\r\n      .filter(entity => entity instanceof SchemaNodeModel)\r\n      .filter(entity => !entity.isLocked());\r\n\r\n  /** Cut */\r\n  handleCut() {\r\n    let selectNodes = this.getSelectedComponents() as SchemaNodeModel[]\r\n    let clonenode = selectNodes[0].clone()\r\n    const copie = clonenode.serialize()\r\n\r\n    localStorage.setItem('clipboard', JSON.stringify(copie));\r\n\r\n    selectNodes.forEach(model => model.remove());\r\n\r\n    this.engine.repaintCanvas();\r\n\r\n  };\r\n\r\n  /** Copy */\r\n  handleCopy() {\r\n    let selectNodes = this.getSelectedComponents() as SchemaNodeModel[]\r\n    let clonenode = selectNodes[0].clone()\r\n    const copie = clonenode.serialize()\r\n\r\n\r\n    console.log(copie)\r\n\r\n    localStorage.setItem('clipboard', JSON.stringify(copie));\r\n  };\r\n\r\n  onPromise(id : string) {\r\n    return new Promise<BaseModel>((resolve, reject) => {\r\n      let rs = new SchemaNodeModel()\r\n      resolve(rs);\r\n    });\r\n  }\r\n\r\n\r\n  /** Paste */\r\n  handlePaste() {\r\n\r\n\r\n    let clipboardstr = localStorage.getItem('clipboard')\r\n\r\n    if(clipboardstr == null) clipboardstr = \"\"\r\n\r\n    const clipboard = JSON.parse(clipboardstr);\r\n    if (!clipboard) return;\r\n\r\n    console.log(clipboard)\r\n\r\n\r\n    let pastemodel = new SchemaNodeModel()\r\n \r\n    let deserializeData : any = {\r\n      data : clipboard,\r\n      engine : this.engine,\r\n      registerModel: () => {},\r\n    }\r\n\r\n    pastemodel.deserialize(deserializeData)\r\n    \r\n  \r\n    pastemodel.setPosition(100, 100);\r\n\r\n    console.log(pastemodel)\r\n    let model = this.engine.getModel() as DiagramModel\r\n    model.addAll(pastemodel)\r\n\r\n\r\n    //this.engine.fireEvent( nodes: models , 'componentsAdded');\r\n\r\n    this.engine.repaintCanvas();\r\n  };\r\n\r\n\r\n\r\n\r\n  \r\n}\r\n","import * as React from 'react';\r\nimport { DiagramEngine, PortWidget } from '@projectstorm/react-diagrams-core';\r\nimport { SchemaPortModel } from './SchemaPortModel';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { MenuProvider  } from 'react-contexify';\r\n\r\n\r\nexport interface DefaultPortLabelProps {\r\n\tport: SchemaPortModel;\r\n\tengine: DiagramEngine;\r\n\r\n}\r\n\r\n\r\n\texport const PortLabel = styled.div`\r\n\t\tdisplay: flex;\r\n\t\tmargin-top: 1px;\r\n\t\talign-items: center;\r\n\t\t&:hover {\r\n\t\t\tbackground: rgb(192, 255, 0);\r\n\t\t}\r\n\t`;\r\n\r\n\texport const Label = styled.div`\r\n\t\tpadding: 0 5px;\r\n\t\tflex-grow: 1;\r\n\t`;\r\n\r\n\texport const Port = styled.div`\r\n\t\twidth: 16px;\r\n\t\theight: 21px;\r\n\t\tbackground: rgba(255, 255, 244, 0.1);\r\n\t\t&:hover {\r\n\t\t\tbackground: rgb(192, 255, 0);\r\n\t\t}\r\n\t`;\r\n\r\n\r\nexport class SchemaPortLabel extends React.Component<DefaultPortLabelProps> {\r\n\trender() {\r\n\t\tconst port = (\r\n\t\t\t<PortWidget engine={this.props.engine} port={this.props.port}>\r\n\t\t\t\t<Port />\r\n\t\t\t</PortWidget>\r\n\t\t);\r\n\t\tconst label = <Label>{this.props.port.getOptions().label}</Label>;\r\n\r\n\t\treturn (\r\n\t\t\t<MenuProvider id=\"nodeedit\" storeRef={false} >\r\n\t\t\t\t<PortLabel>\r\n\t\t\t\t{this.props.port.getOptions().in ? port : label}\r\n\t\t\t\t{this.props.port.getOptions().in ? label : port}\r\n\t\t\t\t</PortLabel>\r\n\t\t\t</MenuProvider>\r\n\t\t\t\r\n\t\t);\r\n\t}\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\r\nimport { SchemaNodeModel } from './SchemaNodeModel';\r\nimport { SchemaPortLabel } from '../port/SchemaPortLabelWidget';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/core';\r\nimport { SchemaPortModel } from '../port/SchemaPortModel';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\n\texport const Node = styled.div<{ background ?: string; selected: boolean }>`\r\n\t\r\n\t\r\n\r\n\t\tborder-style: solid;\r\n\r\n\t\tborder-color : grey;\r\n\r\n\t\tborder-width: thin;\r\n\r\n\t\tcolor: white;\r\n\t\t\r\n\t\toverflow: visible;\r\n\t\tfont-size: 13px;\r\n\t\t\r\n\t`;\r\n\r\n\texport const Title = styled.div`\r\n\t\tbackground-color: #005AA0;\r\n\t\tdisplay: flex;\r\n\t\tfont-weight: 600;\r\n\t\twhite-space: nowrap;\r\n\t\tjustify-items: center;\r\n\t`;\r\n\r\n\texport const TitleName = styled.div`\r\n\t\tmargin-left : 10px;\r\n\t\tflex-grow: 1;\r\n\t\tpadding: 10px 5px;\r\n\t`;\r\n\r\n\texport const Ports = styled.div`\r\n\t\tdisplay: flex;\r\n\t\tcolor : #5E666E;\r\n\t\tfont-weight: 600;\r\n\t\tbackground-color: white;\r\n\t`;\r\n\r\n\texport const PortsContainer = styled.div`\r\n\t\tflex-grow: 1;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\t&:first-of-type {\r\n\t\t\tmargin-right: 10px;\r\n\t\t}\r\n\t\t&:only-child {\r\n\t\t\tmargin-right: 0px;\r\n\t\t}\r\n\t`;\r\n\r\n\r\nexport interface DefaultNodeProps {\r\n\tnode: SchemaNodeModel;\r\n\tengine: DiagramEngine;\r\n}\r\n\r\n/**\r\n * Default node that models the DefaultNodeModel. It creates two columns\r\n * for both all the input ports on the left, and the output ports on the right.\r\n */\r\n\r\n\r\nexport class SchemaNodeWidget extends React.Component<DefaultNodeProps> {\r\n\r\n\r\n\t  fireAction (event : any) {\r\n\t\tthis.props.engine.getActionEventBus().fireAction({\r\n\t\t  event: {\r\n\t\t\t...event,\r\n\t\t\tkey: '',\r\n\t\t\tpreventDefault: () => {},\r\n          stopPropagation: () => {},\r\n\t\t  },\r\n\t\t});\r\n\t  }\r\n\r\n\t  fireDeleteEvent(engine : DiagramEngine){\r\n\t\tlet e = { type: 'keydown', ctrlKey: true, code: 'Delete' }\r\n\t\tthis.fireAction(e);\r\n\t  }\r\n\r\n\tfireDoubleClick(engine : DiagramEngine){\r\n\t\tconsole.log(\"double click\")\r\n\t\tif(engine != undefined){\r\n\t\r\n\t\t\tengine.fireEvent({ }, 'onDoubleClick');\r\n\t\t}else{\r\n\t\t\tconsole.log(\"unid\")\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\r\n\tgeneratePort = (port : SchemaPortModel) => {\r\n\t\r\n\t\treturn <SchemaPortLabel engine={this.props.engine} port={port} key={port.getID()}  />;\r\n\t};\r\n\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Node\r\n\t\t\t\tdata-default-node-name={this.props.node.getOptions().name}\r\n\t\t\t\tselected={this.props.node.isSelected()}\r\n\t\t\t\tbackground={this.props.node.getOptions().color} onDoubleClick={() => this.fireDoubleClick(this.props.engine)}>\r\n\t\t\t\t<Title>\r\n\t\t\t\t\t<TitleName>{this.props.node.getOptions().name}</TitleName>\r\n\t\t\t\t\t<IconButton  onClick={()=> this.fireDeleteEvent(this.props.engine)} color=\"inherit\" size=\"small\">\r\n          \t\t\t\t<DeleteOutlineIcon/>\r\n        \t\t\t</IconButton>\r\n\r\n\t\t\t\t</Title>\r\n\t\t\t\t<Ports>\r\n\t\t\t\t\t<PortsContainer>{_.map(this.props.node.getInPorts(), this.generatePort)}</PortsContainer>\r\n\t\t\t\t\t<PortsContainer>{_.map(this.props.node.getOutPorts(), this.generatePort)}</PortsContainer>\r\n\t\t\t\t</Ports>\r\n\t\t\t</Node>\r\n\t\t);\r\n\t}\r\n}","import * as React from 'react';\r\nimport { SchemaNodeModel } from './SchemaNodeModel';\r\nimport { SchemaNodeWidget } from './SchemaNodeWidget';\r\nimport { AbstractReactFactory , GenerateWidgetEvent } from '@projectstorm/react-canvas-core';\r\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\r\nimport { MenuProvider  } from 'react-contexify';\r\n\r\nexport class SchemaNodeFactory extends AbstractReactFactory<SchemaNodeModel, DiagramEngine> {\r\n\r\n\tconstructor() {\r\n\t\tsuper('default');\r\n\t}\r\n\t\r\n\r\n\tgenerateReactWidget(event : any): JSX.Element {\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<MenuProvider id=\"component\" storeRef={false} data={event.model}>\r\n\t\t\t\t<SchemaNodeWidget engine={this.engine} node={event.model}  />\r\n\t\t\t</MenuProvider>\r\n\t\t\t)\r\n\t}\r\n\r\n\tgenerateModel(initialConfig : any) {\r\n\t\treturn new SchemaNodeModel('Node 2', 'rgb(192,255,0)');\r\n\t}\r\n}","import { SchemaPortModel } from './SchemaPortModel';\r\nimport { AbstractModelFactory } from '@projectstorm/react-canvas-core';\r\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\r\n\r\nexport class SchemaPortFactory extends AbstractModelFactory<SchemaPortModel, DiagramEngine> {\r\n\tconstructor() {\r\n\t\tsuper('default');\r\n\t}\r\n\r\n\tgenerateModel(): SchemaPortModel {\r\n\t\treturn new SchemaPortModel({\r\n\t\t\tname: 'unknown'\r\n\t\t});\r\n\t}\r\n}","import createEngine, { DefaultLinkModel, DefaultNodeModel , DiagramEngine,  DiagramModel , PathFindingLinkFactory } from \"@projectstorm/react-diagrams\";\r\n\r\n\r\nimport {SchemaNodeModel} from '../schemanode/node/SchemaNodeModel'\r\nimport {SchemaNodeFactory} from '../schemanode/node/SchemaNodeFactory'\r\n\r\nimport { SchemaPortFactory } from \"../schemanode/port/SchemaPortFactory\";\r\n\r\n\r\n\r\nfunction GetEngine() : DiagramEngine  {\r\n \r\n    let rs = createEngine({registerDefaultDeleteItemsAction: false,\r\n})\r\n\r\n    rs.getNodeFactories().registerFactory(new SchemaNodeFactory());\r\n\trs.getPortFactories().registerFactory(new SchemaPortFactory())\r\n\r\n\r\n    const model = new DiagramModel();\r\n\r\n\r\n    /*\r\n    var node1 = new DefaultNodeModel({\r\n\t\tname: 'Node 1',\r\n\t\tcolor: 'rgb(0,192,255)'\r\n\t});\r\n\tnode1.setPosition(100, 100);\r\n\tlet port1 = node1.addOutPort('id');\r\n    node1.addInPort('int');\r\n\r\n\t//3-B) create another default node\r\n\tvar node2 = new DefaultNodeModel('Node 2', 'rgb(192,255,0)');\r\n\tlet port2 = node2.addInPort('product_id');\r\n    node2.addOutPort('int');\r\n\tnode2.setPosition(400, 100);\r\n\r\n\t// link the ports\r\n\tlet link1 = port1.link<DefaultLinkModel>(port2);\r\n\tlink1.getOptions().testName = 'Test';\r\n\tlink1.addLabel('Hello World!');\r\n    */\r\n    \r\n    rs.setModel(model);\r\n\r\n    return rs\r\n}\r\n\r\n\r\n\r\nconst engine = GetEngine()\r\nexport {engine , GetEngine}","import { TableData } from \"../components/TableEditor\";\r\n\r\nexport const tables : TableData[] = [{\r\n    id : \"\",\r\n    tablename : \"Product\" ,\r\n    fields : [{\r\n      inId : \"\",\r\n      outId : \"\",\r\n      fieldName : \"Id\",\r\n      fieldType : \"int\",\r\n      fieldOption : {\r\n        ai : false,\r\n        portId : \"\",\r\n        pk : false,\r\n      }\r\n    },\r\n    {\r\n        inId : \"\",\r\n        outId : \"\",\r\n        fieldName : \"ProductName\",\r\n        fieldType : \"varchar\",\r\n        fieldOption : {\r\n          ai : false,\r\n          portId : \"\",\r\n          pk : false,\r\n        }\r\n      },\r\n      {\r\n        inId : \"\",\r\n        outId : \"\",\r\n        fieldName : \"ProductPrice\",\r\n        fieldType : \"int\",\r\n        fieldOption : {\r\n          ai : false,\r\n          portId : \"\",\r\n          pk : false,\r\n        }\r\n      }]\r\n  },\r\n  {\r\n    id : \"\",\r\n    tablename : \"Image\" ,\r\n    fields : [{\r\n      inId : \"\",\r\n      outId : \"\",\r\n      fieldName : \"Id\",\r\n      fieldType : \"int\",\r\n      fieldOption : {\r\n        ai : false,\r\n        portId : \"\",\r\n        pk : false,\r\n      }\r\n    },\r\n    {\r\n        inId : \"\",\r\n        outId : \"\",\r\n        fieldName : \"ProductId\",\r\n        fieldType : \"int\",\r\n        fieldOption : {\r\n          ai : false,\r\n          portId : \"\",\r\n          pk : false,\r\n        }\r\n      },\r\n      {\r\n        inId : \"\",\r\n        outId : \"\",\r\n        fieldName : \"Url\",\r\n        fieldType : \"varchar\",\r\n        fieldOption : {\r\n          ai : false,\r\n          portId : \"\",\r\n          pk : false,\r\n        }\r\n      }]\r\n  },\r\n  {\r\n    id : \"\",\r\n    tablename : \"User\" ,\r\n    fields : [{\r\n      inId : \"\",\r\n      outId : \"\",\r\n      fieldName : \"Id\",\r\n      fieldType : \"int\",\r\n      fieldOption : {\r\n        ai : false,\r\n        portId : \"\",\r\n        pk : false,\r\n      }\r\n    },\r\n    {\r\n        inId : \"\",\r\n        outId : \"\",\r\n        fieldName : \"UserName\",\r\n        fieldType : \"varchar\",\r\n        fieldOption : {\r\n          ai : false,\r\n          portId : \"\",\r\n          pk : false,\r\n        }\r\n      },\r\n      {\r\n        inId : \"\",\r\n        outId : \"\",\r\n        fieldName : \"UserPassword\",\r\n        fieldType : \"varchar\",\r\n        fieldOption : {\r\n          ai : false,\r\n          portId : \"\",\r\n          pk : false,\r\n        }\r\n      },\r\n      {\r\n        inId : \"\",\r\n        outId : \"\",\r\n        fieldName : \"UserEmail\",\r\n        fieldType : \"varchar\",\r\n        fieldOption : {\r\n          ai : false,\r\n          portId : \"\",\r\n          pk : false,\r\n        }\r\n      }]\r\n  },\r\n  {\r\n    id : \"\",\r\n    tablename : \"User\" ,\r\n    fields : [{\r\n      inId : \"\",\r\n      outId : \"\",\r\n      fieldName : \"Id\",\r\n      fieldType : \"int\",\r\n      fieldOption : {\r\n        ai : false,\r\n        portId : \"\",\r\n        pk : false,\r\n      }\r\n    },\r\n    {\r\n        inId : \"\",\r\n        outId : \"\",\r\n        fieldName : \"UserName\",\r\n        fieldType : \"varchar\",\r\n        fieldOption : {\r\n          ai : false,\r\n          portId : \"\",\r\n          pk : false,\r\n        }\r\n      },\r\n      {\r\n        inId : \"\",\r\n        outId : \"\",\r\n        fieldName : \"UserPassword\",\r\n        fieldType : \"varchar\",\r\n        fieldOption : {\r\n          ai : false,\r\n          portId : \"\",\r\n          pk : false,\r\n        }\r\n      },\r\n      {\r\n        inId : \"\",\r\n        outId : \"\",\r\n        fieldName : \"UserEmail\",\r\n        fieldType : \"varchar\",\r\n        fieldOption : {\r\n          ai : false,\r\n          portId : \"\",\r\n          pk : false,\r\n        }\r\n      }]\r\n  },\r\n  {\r\n    id : \"\",\r\n    tablename : \"User\" ,\r\n    fields : [{\r\n      inId : \"\",\r\n      outId : \"\",\r\n      fieldName : \"Id\",\r\n      fieldType : \"int\",\r\n      fieldOption : {\r\n        ai : false,\r\n        portId : \"\",\r\n        pk : false,\r\n      }\r\n    },\r\n    {\r\n        inId : \"\",\r\n        outId : \"\",\r\n        fieldName : \"UserName\",\r\n        fieldType : \"varchar\",\r\n        fieldOption : {\r\n          ai : false,\r\n          portId : \"\",\r\n          pk : false,\r\n        }\r\n      },\r\n      {\r\n        inId : \"\",\r\n        outId : \"\",\r\n        fieldName : \"UserPassword\",\r\n        fieldType : \"varchar\",\r\n        fieldOption : {\r\n          ai : false,\r\n          portId : \"\",\r\n          pk : false,\r\n        }\r\n      },\r\n      {\r\n        inId : \"\",\r\n        outId : \"\",\r\n        fieldName : \"UserEmail\",\r\n        fieldType : \"varchar\",\r\n        fieldOption : {\r\n          ai : false,\r\n          portId : \"\",\r\n          pk : false,\r\n        }\r\n      }]\r\n  },\r\n  {\r\n    id : \"\",\r\n    tablename : \"User\" ,\r\n    fields : [{\r\n      inId : \"\",\r\n      outId : \"\",\r\n      fieldName : \"Id\",\r\n      fieldType : \"int\",\r\n      fieldOption : {\r\n        ai : false,\r\n        portId : \"\",\r\n        pk : false,\r\n      }\r\n    },\r\n    {\r\n        inId : \"\",\r\n        outId : \"\",\r\n        fieldName : \"UserName\",\r\n        fieldType : \"varchar\",\r\n        fieldOption : {\r\n          ai : false,\r\n          portId : \"\",\r\n          pk : false,\r\n        }\r\n      },\r\n      {\r\n        inId : \"\",\r\n        outId : \"\",\r\n        fieldName : \"UserPassword\",\r\n        fieldType : \"varchar\",\r\n        fieldOption : {\r\n          ai : false,\r\n          portId : \"\",\r\n          pk : false,\r\n        }\r\n      },\r\n      {\r\n        inId : \"\",\r\n        outId : \"\",\r\n        fieldName : \"UserEmail\",\r\n        fieldType : \"varchar\",\r\n        fieldOption : {\r\n          ai : false,\r\n          portId : \"\",\r\n          pk : false,\r\n        }\r\n      }]\r\n  },\r\n  {\r\n    id : \"\",\r\n    tablename : \"User\" ,\r\n    fields : [{\r\n      inId : \"\",\r\n      outId : \"\",\r\n      fieldName : \"Id\",\r\n      fieldType : \"int\",\r\n      fieldOption : {\r\n        ai : false,\r\n        portId : \"\",\r\n        pk : false,\r\n      }\r\n    },\r\n    {\r\n        inId : \"\",\r\n        outId : \"\",\r\n        fieldName : \"UserName\",\r\n        fieldType : \"varchar\",\r\n        fieldOption : {\r\n          ai : false,\r\n          portId : \"\",\r\n          pk : false,\r\n        }\r\n      },\r\n      {\r\n        inId : \"\",\r\n        outId : \"\",\r\n        fieldName : \"UserPassword\",\r\n        fieldType : \"varchar\",\r\n        fieldOption : {\r\n          ai : false,\r\n          portId : \"\",\r\n          pk : false,\r\n        }\r\n      },\r\n      {\r\n        inId : \"\",\r\n        outId : \"\",\r\n        fieldName : \"UserEmail\",\r\n        fieldType : \"varchar\",\r\n        fieldOption : {\r\n          ai : false,\r\n          portId : \"\",\r\n          pk : false,\r\n        }\r\n      }]\r\n  }]","\r\nimport * as _ from 'lodash';\r\n\r\n//import ClipboardAction from './actions/ClipboardAction';\r\nimport DeleteAction from './actions/DeleteAction';\r\nimport NewNodeAction from './actions/NewNodeAction';\r\nimport DuplicateAction from './actions/DuplicateAction';\r\n//import UndoRedoAction from './actions/UndoRedoAction';\r\nimport ZoomAction from './actions/ZoomAction';\r\nimport ClipboardAction from './actions/Clipboard'\r\nimport { Action } from '@projectstorm/react-canvas-core';\r\n\r\nimport { DefaultLabelModel, DefaultLinkModel, DefaultPortModel , DiagramEngine, DiagramModel, LabelModel, LinkModel, PathFindingLinkFactory } from '@projectstorm/react-diagrams';\r\nimport { GetEngine } from '../libs/engine'\r\n\r\nimport { TableData } from '../components/TableEditor';\r\nimport { SchemaNodeModel, Field } from '../schemanode/node/SchemaNodeModel';\r\nimport { SchemaLinkModel } from '../schemanode/link/SchemaLinkModel';\r\nimport { SchemaPortModel } from '../schemanode/port/SchemaPortModel';\r\nimport { tables } from '../data/testdiagramdata';\r\n\r\nexport class DiagramController {\r\n\r\n  isLock: boolean;\r\n  engine: DiagramEngine\r\n\r\n  constructor() {\r\n    this.isLock = false\r\n    this.engine = GetEngine()\r\n\r\n    this.initActions()\r\n\r\n    console.log(this.getEngine().getModel().getZoomLevel())\r\n\r\n    let links = this.getEngine().getModel().getLinks()\r\n\r\n    let models = this.getEngine().getModel().getModels()\r\n\r\n    console.log(links)\r\n\r\n    \r\n\r\n    //let p1= links[0].getTargetPort()\r\n    //let nodemd = p1.getNode() as SchemaNodeModel\r\n\r\n    //links[0].remove()\r\n\r\n    //this.getEngine().repaintCanvas()\r\n\r\n    //alert(nodemd.getOptions().name)\r\n    //console.log(p1)\r\n  }\r\n\r\n\r\n\r\n  initActions() {\r\n\r\n\r\n    let actions: Action[] = [\r\n      new DeleteAction(true),\r\n      new NewNodeAction(true),\r\n      new DuplicateAction(true),\r\n      new ClipboardAction(true)\r\n\r\n    ]\r\n\r\n    actions.forEach(Action =>\r\n      this.engine\r\n        .getActionEventBus()\r\n        .registerAction(Action),\r\n    );\r\n\r\n  }\r\n\r\n  fireAction(event: any) {\r\n    this.engine.getActionEventBus().fireAction({\r\n      event: {\r\n        ...event,\r\n        key: '',\r\n        preventDefault: () => { },\r\n        stopPropagation: () => { },\r\n      },\r\n    });\r\n  }\r\n\r\n  removeLinkbyPort(inPort : SchemaPortModel , outPort : SchemaPortModel){\r\n\r\n    const linksIn = inPort.getLinks()\r\n    const linksOut = outPort.getLinks()\r\n\r\n    this.removeLink(linksIn , inPort)\r\n\r\n    this.removeLink(linksOut , outPort)\r\n\r\n  }\r\n\r\n  removeLink(links : {[id:string] : LinkModel} , port : SchemaPortModel){\r\n    let linkLenght = Object.keys(links).length;\r\n    if(linkLenght >= 1){\r\n      for (const key in links) {\r\n        if(links[key].getSourcePort().getID() === port.getID()){\r\n          links[key].remove()\r\n          this.getEngine().repaintCanvas()\r\n          break\r\n        }  \r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  currentNode(): SchemaNodeModel | undefined {\r\n    let entities = this.engine\r\n      .getModel()\r\n      .getSelectedEntities()\r\n      .filter(model => !model.isLocked());\r\n\r\n    if (entities.length == 0) return undefined\r\n\r\n    let node = entities[0]\r\n\r\n    if (node instanceof SchemaNodeModel === false) return undefined\r\n\r\n    let rs = node as SchemaNodeModel\r\n\r\n    return rs\r\n  }\r\n\r\n\r\n\r\n  findSourceLinkInPort(port : SchemaPortModel) : LinkModel | undefined {\r\n    let links = port.getLinks()\r\n    let portId = port.getID()\r\n    for (const key in links) {\r\n      if (Object.prototype.hasOwnProperty.call(links, key)) {\r\n        if(links[key].getSourcePort().getID() === portId){\r\n          return links[key]\r\n        }\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  findSourcesLinkInPort(port : SchemaPortModel) : LinkModel[]  {\r\n    let rs = []\r\n    let links = port.getLinks()\r\n    let portId = port.getID()\r\n    for (const key in links) {\r\n      if (Object.prototype.hasOwnProperty.call(links, key)) {\r\n        if(links[key].getSourcePort().getID() === portId){\r\n          rs.push(links[key])\r\n        }\r\n      }\r\n    }\r\n    return rs\r\n  }\r\n\r\n  connectRealation(selectPort : SchemaPortModel,selectPortOut : SchemaPortModel,relationName : string){\r\n\r\n    const linksIn = this.findSourcesLinkInPort(selectPort)\r\n\r\n    if(linksIn.length > 0){\r\n      this.setRelationLink(linksIn[0] as SchemaLinkModel , relationName)\r\n      return\r\n    }\r\n\r\n    const linksOut = this.findSourcesLinkInPort(selectPortOut)\r\n\r\n    if(linksOut.length > 0){\r\n      this.setRelationLink(linksOut[0] as SchemaLinkModel , relationName)\r\n      return\r\n    }\r\n    \r\n  }\r\n\r\n  setRelationLink(link : SchemaLinkModel,relationName : string){\r\n    link.setLabels([])   \r\n    link.addLabel(relationName)\r\n    this.getEngine().repaintCanvas()\r\n  }\r\n\r\n  saveDataByString(data : string){\r\n    const model2 = new DiagramModel()\r\n    const model = JSON.parse(data)\r\n    let obj: ReturnType<DiagramModel['serialize']> = model\r\n    model2.deserializeModel(obj, this.getEngine())\r\n\t\t\tif (model2 == null) {\r\n\t\t\t\tconsole.log(\"model null\")\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.getEngine().setModel(model2)\r\n\r\n      this.registerLinkEvent()\r\n  }\r\n\r\n  registerLinkEvent(){\r\n    this.getEngine().getModel().registerListener({\r\n      nodesUpdated: (e:any) => {console.log(e)},\r\n      linksUpdated: (e:any ) => this.isCompleteLink(e)\r\n    })\r\n  }\r\n\r\n  isCompleteLink(e:any){\r\n    console.log(\"create link\")\r\n    const link : DefaultLinkModel = e.link\r\n    let sourcePort = link.getSourcePort() as SchemaPortModel\r\n    let node = sourcePort.getNode() as SchemaNodeModel\r\n    let mirrorPort = node.mirrorPort(sourcePort)\r\n    if(mirrorPort === undefined) return\r\n    console.log(mirrorPort.getOptions().label)\r\n    let sourceLinkArr = this.findSourcesLinkInPort(mirrorPort)\r\n    console.log(sourceLinkArr)\r\n    if(sourceLinkArr.length > 0){\r\n      alert(\"error one field can have only one foreign key\")\r\n      link.remove()\r\n      this.getEngine().repaintCanvas()\r\n    }\r\n\r\n    link.registerListener({\r\n      targetPortChanged:(ev : any) => this.toggleFk(ev)\r\n    })\r\n\r\n    //let node = this.currentNode()\r\n    //if(node === undefined) return \r\n    //node.set\r\n  }\r\n\r\n  toggleFk(ev : any){\r\n    let linkmodel : DefaultLinkModel = ev.entity\r\n    let port = linkmodel.getSourcePort() as SchemaPortModel\r\n    let node = port.getNode() as SchemaNodeModel\r\n    let links = this.findSourcesLinkInPort(port)\r\n    if(links.length > 1 ){\r\n      links[0].remove()\r\n      this.getEngine().repaintCanvas()\r\n    }\r\n    node.setNodeOption(port.getID())\r\n  }\r\n\r\n  \r\n\r\n  direactionNode(node1 : SchemaNodeModel , node2 : SchemaNodeModel){\r\n    let x1 = node1.getPosition().x\r\n    let x2=  node2.getPosition().x\r\n    console.log(\"x1=\" + x1 +  \" x2=\" + x2) \r\n    const dir = (x1 <= x2) ? \"front\" : \"back\"\r\n    return dir\r\n  }\r\n\r\n  getNodeById(id : string){\r\n    return this.getEngine().getModel().getNode(id) as SchemaNodeModel\r\n  }\r\n\r\n  clearDiagram(){\r\n    const modelset = new DiagramModel()\r\n    this.getEngine().setModel(modelset)\r\n    this.registerLinkEvent()\r\n    this.getEngine().repaintCanvas()\r\n  }\r\n\r\n  linktest() {\r\n    this.linkNode()\r\n  }\r\n\r\n  linkNode() {\r\n    let nodes = this.getEngine().getModel().getNodes() as SchemaNodeModel[]\r\n    alert(nodes[1].getOptions().name)\r\n    let sourcePort = nodes[0].getOutPorts()[0]\r\n    let targetPort = nodes[1].getInPorts()[0]\r\n\r\n    let link = sourcePort.link(targetPort)\r\n\r\n    targetPort.reportPosition()\r\n    sourcePort.reportPosition()\r\n\r\n    this.getEngine().getModel().addAll(link);\r\n    this.getEngine().repaintCanvas()\r\n  }\r\n\r\n  updateNodeName(e: string) {\r\n    let node = this.currentNode()\r\n    if (node == undefined) return\r\n    node.getOptions().name = e\r\n    this.getEngine().repaintCanvas()\r\n  }\r\n\r\n  linkModel(sourcePort : SchemaPortModel , targetPort: SchemaPortModel) {\r\n\r\n    let sourceLink = this.findSourcesLinkInPort(sourcePort)\r\n\r\n    if(sourceLink.length > 0){\r\n      sourceLink[0].remove()\r\n    }\r\n\r\n    let link =  sourcePort.link<SchemaLinkModel>(targetPort )\r\n\t\tsourcePort.reportPosition()\r\n\t\ttargetPort.reportPosition()\r\n\r\n    this.engine.getModel().addAll(link)\r\n    this.engine.repaintCanvas()\r\n  }\r\n\r\n  setCurrentNode(node: SchemaNodeModel) {\r\n    this.engine.repaintCanvas()\r\n  }\r\n\r\n  updateNode(tb: TableData) {\r\n    let node = this.currentNode()\r\n\r\n    if (node == undefined) return\r\n\r\n    node.updateNode(tb)\r\n\r\n    this.getEngine().repaintCanvas()\r\n\r\n  }\r\n\r\n  testEdit() {\r\n\r\n    let node = this.currentNode()\r\n\r\n    let tb = {\r\n      tablename: \"top\",\r\n      fields: [{\r\n        fieldName: \"Id\",\r\n        fieldType: \"int\"\r\n      }, {\r\n        fieldName: \"ProductId\",\r\n        fieldType: \"varchar\"\r\n      }, {\r\n        fieldName: \"Id\",\r\n        fieldType: \"int\"\r\n      }\r\n      ]\r\n    }\r\n\r\n    if (node == undefined) return\r\n\r\n    node.updateNode(tb)\r\n\r\n    this.getEngine().repaintCanvas()\r\n\r\n  }\r\n\r\n  doZoom(value : number){\r\n    let model = this.getEngine().getModel()\r\n    let zoomLevel = model.getZoomLevel()\r\n    console.log(zoomLevel)\r\n    model.setZoomLevel(zoomLevel + value)\r\n    this.getEngine().repaintCanvas()\r\n  }\r\n\r\n  updateFieldOption(f: Field) {\r\n    let node = this.currentNode()\r\n    //if (node == undefined) return\r\n    node?.addOrUpdateFieldOption(f)\r\n  }\r\n\r\n  createDiagramWithSchemaTable(tables : TableData[]){\r\n    alert(\"hello\")\r\n    let model = new DiagramModel()\r\n    let nodes : SchemaNodeModel[] = []\r\n\r\n    let spaceCol = 250\r\n    let spaceRow = 200\r\n    let curCol = 0\r\n    let maxCol = 6\r\n    alert(spaceCol)\r\n    tables.forEach(tb => {\r\n      let node = new SchemaNodeModel()\r\n      node.getOptions().name = tb.tablename\r\n      let nodeTotal = nodes.length\r\n      let posX = 0\r\n      let posY = 50\r\n      if(nodeTotal > 0){\r\n        alert(nodeTotal + 1 + \"tb\")\r\n        let point = nodes[nodeTotal-1].getPosition()\r\n        posX = point.x\r\n        posX += spaceCol\r\n        posY = point.y\r\n        if(curCol === maxCol){\r\n          posX = 0\r\n          curCol = 0\r\n          posY += spaceRow\r\n        }\r\n        alert(\"current col : \" + curCol)\r\n        \r\n      }\r\n\r\n      alert(posX + \"and\" + posY)\r\n\r\n      node.setPosition(posX  , posY)\r\n      \r\n      this.createPorts(node,tb.fields)\r\n      \r\n      curCol += 1\r\n      nodes.push(node)\r\n    });\r\n    model.addAll(...nodes)\r\n    this.getEngine().setModel(model)\r\n    this.registerLinkEvent()\r\n    this.getEngine().repaintCanvas()\r\n  }\r\n\r\n\r\n  testCreateDiagram(){\r\n    let tbs = tables\r\n    alert(\"creating\" + tbs.length)\r\n    this.createDiagramWithSchemaTable(tbs)\r\n  }\r\n\r\n  \r\n  createPorts(node : SchemaNodeModel,fields : Field[]){\r\n    fields.forEach(field => {\r\n      node.addField({fieldName : field.fieldName , fieldType : field.fieldType })\r\n    });\r\n  }\r\n\r\n  allTable(){\r\n    let rs: TableData[] = []\r\n    let alltb = this.getEngine().getModel().getNodes() as SchemaNodeModel[]\r\n    alltb.forEach(tb => {\r\n      let add = this.nodeToTable(tb)\r\n      rs.push(add)\r\n    });\r\n    return rs\r\n  }\r\n\r\n  currentTable(){\r\n    let rs: TableData = {\r\n      id: \"\",\r\n      tablename: '',\r\n      fields: []\r\n    }\r\n    const node = this.currentNode()\r\n    if(node === undefined) return rs \r\n    if (node instanceof SchemaNodeModel) rs = this.nodeToTable(node as SchemaNodeModel)\r\n    return rs\r\n  }\r\n\r\n  nodeToTable(node : SchemaNodeModel) : TableData{\r\n    let name = node.getOptions().name\r\n    if (name == undefined) name = \"\"\r\n    return {\r\n      id : node.getID(),\r\n      tablename : name,\r\n      fields : node.getAllField()\r\n    }\r\n  }\r\n\r\n\r\n  copySelected = () => {\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyC' });\r\n\r\n  }\r\n\r\n  newNode() {\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyB' });\r\n  }\r\n\r\n  duplicateSelected = () => {\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyD' });\r\n  }\r\n\r\n  cutSelected = () =>\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyX' });\r\n\r\n\r\n  pasteSelected = () =>\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyV' });\r\n\r\n  deleteSelected = () =>\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'Delete' });\r\n\r\n  undo = () =>\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyZ' });\r\n\r\n  zoomIn(event: any) {\r\n    this.fireAction({\r\n      clientX: event.clientX,\r\n      clientY: event.clientY,\r\n      type: 'wheel',\r\n      deltaY: +1,\r\n    });\r\n  }\r\n\r\n  zoomOut(event: any) {\r\n    this.fireAction({\r\n      clientX: event.clientX,\r\n      clientY: event.clientY,\r\n      type: 'wheel',\r\n      deltaY: -1,\r\n    });\r\n  }\r\n\r\n\r\n\r\n  getEngine(): DiagramEngine {\r\n    return this.engine\r\n  }\r\n\r\n\r\n\r\n}","import React , {FunctionComponent, useState} from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 0,\r\n    },\r\n    inputEdit : {\r\n      backgroundColor : \"#3F51B5\",\r\n      padding : 8,\r\n      color : \"white\",\r\n      border: \"none\",\r\n      borderRadius: 4,\r\n      fontSize : 20\r\n\r\n \r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }),\r\n);\r\n\r\ninterface AppbarProp {\r\n  title : string,\r\n  onDelete : () => void,\r\n  onEndEdit : (e : string) => void\r\n}\r\n\r\nexport const  Appbar : FunctionComponent<AppbarProp> = ({ onDelete , title , onEndEdit }) => {\r\n  const classes = useStyles();\r\n\r\n  const [isEdit, setisEdit] = useState(false)\r\n\r\n  const [textInput, settextInput] = useState(\"\")\r\n\r\n  function handleChange(e : any){\r\n    settextInput(e.target.value)\r\n  }\r\n\r\n  function handleBlur(){\r\n    setisEdit(!isEdit)\r\n    \r\n    onEndEdit(textInput)\r\n  }\r\n\r\n\r\n\r\n  function handleOpenEdit(){\r\n    setisEdit(true)\r\n    settextInput(title)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" elevation={0}>\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {(isEdit) ? \r\n           <input value={textInput} onChange={handleChange} onBlur={ handleBlur} className={classes.inputEdit} />\r\n         \r\n          :\r\n          <Typography  variant=\"h6\" className={classes.title} onClick={handleOpenEdit}>\r\n            {title}\r\n          </Typography>\r\n          }\r\n          <IconButton color=\"inherit\" onClick={onDelete}><DeleteOutlineIcon/></IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React, { FunctionComponent, useEffect, useMemo, useState } from 'react'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { Appbar } from './Appbar'\r\nimport TableMat from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport { BaseModel } from '@projectstorm/react-canvas-core'\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport { DefaultPortModel, DiagramEngine, NodeModel, PathFindingLinkFactory } from '@projectstorm/react-diagrams';\r\nimport { SchemaNodeModel, Field } from '../schemanode/node/SchemaNodeModel';\r\nimport { DiagramController } from '../DiagramController/DiagramCtr';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport { Box, Collapse, Typography } from '@material-ui/core';\r\nimport { SchemaPortModel } from '../schemanode/port/SchemaPortModel';\r\nimport { truncateSync } from 'fs';\r\nimport { LiveTvTwoTone } from '@material-ui/icons';\r\n\r\nexport interface TableProps {\r\n  isOpen: boolean,\r\n  diagramctr: DiagramController,\r\n  forceUpdate: boolean,\r\n  onclose: () => void\r\n}\r\n\r\nexport interface TableData {\r\n  id?: string,\r\n  tablename: string,\r\n  fields: Field[]\r\n}\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    styledTable: {\r\n      \"borderCollapse\": \"collapse\",\r\n      \"margin\": \"25px 0\", \"fontSize\": \"0.9em\", \"fontFamily\": \"sans-serif\",\r\n      \"minWidth\": \"400px\", \"boxShadow\": \"0 0 20px rgba(0, 0, 0, 0.15)\"\r\n    },\r\n    cell: {\r\n      padding: 10\r\n    }\r\n\r\n  }),\r\n);\r\n\r\n\r\nexport const TableEditor: FunctionComponent<TableProps> = ({ isOpen, diagramctr, onclose, forceUpdate }) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [isOptionEdit, setisOptionEdit] = useState(\"\")\r\n\r\n  const [currentTable, setTable] = useState(getNodeData(diagramctr))\r\n\r\n  const [relationName, setrelationName] = useState(\"\")\r\n\r\n  const [otherTable, setotherTable] = useState(getOtherTable())\r\n\r\n  const [textInput, settextInput] = useState(\"\")\r\n\r\n\r\n  const [isEdit, setisEdit] = useState(false)\r\n\r\n  const [currentSelectTableId, setcurrentSelectTableId] = useState(\"\")\r\n\r\n  const [currentFieldId, setcurrentFieldId] = useState(\"\")\r\n\r\n  const currentField = useMemo(() => loadTableFieldSelect(), [currentSelectTableId]);\r\n\r\n  const [toggleUpdate, settoggleUpdate] = useState(false)\r\n\r\n  const [currentEdit, setcurrentEdit] = useState(\"\")\r\n\r\n  const [typeSelect, settypeSelect] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    setTable(getNodeData(diagramctr))\r\n    setotherTable(getOtherTable())\r\n    \r\n\r\n  }, [isOpen, toggleUpdate, forceUpdate])\r\n\r\n  function onBeforeClose(){\r\n    setcurrentSelectTableId(\"\")\r\n    setcurrentFieldId(\"\")\r\n    setcurrentEdit(\"\")\r\n    setisEdit(false)\r\n    onclose()\r\n  }\r\n\r\n  function getOtherTable(): TableData[] { return diagramctr.allTable() }\r\n\r\n  function getNodeData(diagramctr: DiagramController) { return diagramctr.currentTable() }\r\n\r\n  function setEditField(id: string | undefined, fieldName: string) {\r\n    if (id === undefined) id = \"\"\r\n    setisEdit(true)\r\n    settextInput(fieldName)\r\n    setcurrentEdit(id)\r\n    let node = diagramctr.currentNode()\r\n    if(node === undefined) return\r\n\r\n    let inId = id\r\n    let outId = node.getOutIdFromInId(inId)\r\n\r\n    let portSelectIn = node.getPortFromID(inId) as SchemaPortModel\r\n    let portSelectOut = node.getPortFromID(outId) as SchemaPortModel\r\n\r\n    let linkIn = diagramctr.findSourceLinkInPort(portSelectIn)\r\n\r\n    let linkOut = diagramctr.findSourceLinkInPort(portSelectOut)\r\n\r\n    if(linkIn !== undefined){\r\n      const targetPort = linkIn.getTargetPort() as SchemaPortModel\r\n      setcurrentSelectTableId(targetPort.getNode().getID())\r\n      let targetNode = targetPort.getNode() as SchemaNodeModel\r\n\r\n      setcurrentFieldId(targetNode.getInIdFromOutId(targetPort.getID()))\r\n      return\r\n    }\r\n\r\n    if(linkOut !== undefined){\r\n      \r\n      const targetPort = linkOut.getTargetPort() as SchemaPortModel\r\n      setcurrentSelectTableId(targetPort.getNode().getID())\r\n      setcurrentFieldId(targetPort.getID())\r\n      return\r\n    }\r\n\r\n\r\n  }\r\n\r\n  function closeEdit() {\r\n    setisEdit(true)\r\n    updateNode()\r\n    setcurrentEdit(\"\")\r\n  }\r\n\r\n  function updateNode() {\r\n    let newtb = currentTable\r\n\r\n    //let indexof = newtb.fields.findIndex(f => f.fieldName == currentEdit)\r\n\r\n    let indexof = newtb.fields.findIndex(f => f.inId == currentEdit)\r\n\r\n    if (indexof == -1) return\r\n\r\n    newtb.fields[indexof].fieldName = textInput\r\n\r\n    if (typeSelect != \"\") newtb.fields[indexof].fieldType = typeSelect\r\n    setTable(newtb)\r\n\r\n    diagramctr.updateNode(newtb)\r\n  }\r\n\r\n  function handleChange(e: any) {\r\n    settextInput(e.target.value)\r\n  }\r\n\r\n  function handleTypeChange(e: any) {\r\n    settypeSelect(e.target.value)\r\n  }\r\n\r\n  function onDelete() {\r\n    let node = diagramctr.currentNode()\r\n    if (node == undefined) return\r\n    diagramctr.deleteSelected()\r\n    onclose()\r\n  }\r\n\r\n  function newField() {\r\n    let node = diagramctr.currentNode()\r\n    if (node == undefined) return\r\n    node.AddNewField()\r\n\r\n    let newtb = currentTable\r\n    newtb.fields.push({\r\n      fieldName: \"test\",\r\n      fieldType: \"int\"\r\n    })\r\n    setTable(newtb)\r\n\r\n    settoggleUpdate(!toggleUpdate)\r\n\r\n    diagramctr.getEngine().repaintCanvas()\r\n  }\r\n\r\n  function removeField(id: string | undefined) {\r\n    if (id == undefined) return\r\n    let node = diagramctr.currentNode()\r\n    if (node == undefined) return\r\n    node.removeFieldbyId(id)\r\n    settoggleUpdate(!toggleUpdate)\r\n    diagramctr.getEngine().repaintCanvas()\r\n  }\r\n\r\n  function onSelectTableChange(e: any) {\r\n    setcurrentSelectTableId(e.target.value)\r\n  }\r\n\r\n  function loadTableFieldSelect(): Field[] {\r\n    if (currentSelectTableId == \"\") return []\r\n    let tb = otherTable.find(t => t.id === currentSelectTableId)\r\n    if (tb == undefined) return []\r\n    return tb.fields\r\n  }\r\n\r\n  function onChangeFieldSelect(e: any) {\r\n    if (e.target.value === \"\") {\r\n      return\r\n    }\r\n\r\n    let targetPortId = e.target.value\r\n    let sourceField = currentTable.fields.find(f => f.inId === currentEdit)\r\n\r\n    setcurrentFieldId(targetPortId)\r\n\r\n    const currentNode = diagramctr.currentNode()\r\n\r\n    if(currentNode === undefined) return\r\n\r\n    if (sourceField == undefined) return  // if link self table and selt field\r\n\r\n    let targetNode = diagramctr.getNodeById(currentSelectTableId)\r\n\r\n    const dir = diagramctr.direactionNode(currentNode , targetNode)\r\n\r\n    const sourcePort = (dir === \"front\") ? currentNode.portInIdtoPortOut(currentEdit) : currentNode.getPortFromID(currentEdit) as SchemaPortModel\r\n\r\n    const targetPort = (dir === \"front\") ? targetNode.getPortFromID(targetPortId) as SchemaPortModel : targetNode.portInIdtoPortOut(targetPortId)\r\n    //before link must remove link from source port :: INCOMPLETE TODO\r\n    diagramctr.linkModel(sourcePort, targetPort)\r\n\r\n  }\r\n\r\n\r\n  function onNameChange(e: string) {\r\n    let newtb = currentTable\r\n    newtb.tablename = e\r\n    setTable(newtb)\r\n\r\n    diagramctr.updateNodeName(e)\r\n\r\n    settoggleUpdate(!toggleUpdate)\r\n\r\n  }\r\n\r\n  function getFieldOption(f: Field, optionName: string): any {\r\n    let fieldOption = f.fieldOption\r\n    if (fieldOption == undefined) {\r\n      return false\r\n    }\r\n    if (optionName == \"pk\") return fieldOption.pk\r\n    if (optionName == \"fk\") return fieldOption.fk\r\n    if (optionName == \"ai\") return fieldOption.ai\r\n\r\n  }\r\n\r\n  function setFieldOption(e: any, idField: string | undefined, optionName: string) {\r\n\r\n    const val = e.target.value\r\n\r\n    if (idField == undefined) return\r\n\r\n    console.log(optionName)\r\n\r\n    let fieldIndexof = currentTable.fields.findIndex(f => f.inId == idField)\r\n\r\n    let tb = currentTable\r\n    let newfieldOption = tb.fields[fieldIndexof].fieldOption\r\n\r\n    if (fieldIndexof === -1 || newfieldOption === undefined) return\r\n\r\n    if (optionName === \"pk\") {\r\n      newfieldOption.pk = !newfieldOption.pk\r\n    }\r\n    if(optionName === \"ai\"){\r\n      newfieldOption.ai = !newfieldOption.ai\r\n    }\r\n    if (optionName === \"fk\") {\r\n      newfieldOption.fk = !newfieldOption.fk\r\n      //alert(newfieldOption.fk)\r\n      if (newfieldOption.fk === false) {\r\n        const node = diagramctr.currentNode()\r\n        if (node === undefined) return\r\n        diagramctr.removeLinkbyPort(node.getPortInByIndex(fieldIndexof), node.getPortOutByIndex(fieldIndexof))\r\n      }\r\n\r\n    }\r\n\r\n    tb.fields[fieldIndexof].fieldOption = newfieldOption\r\n    setTable(tb)\r\n\r\n    console.log(newfieldOption)\r\n    diagramctr.updateFieldOption(tb.fields[fieldIndexof])\r\n    settoggleUpdate(!toggleUpdate)\r\n  }\r\n\r\n  function onSelectRelation(portid: string | undefined, portOutId: string | undefined, relationName: string) {\r\n    if (portid === undefined || portOutId === undefined) return\r\n    const node = diagramctr.currentNode()\r\n    if (node === undefined) return\r\n    const portIn = node.getPortFromID(portid) as SchemaPortModel\r\n    const portOut = node.getPortFromID(portOutId) as SchemaPortModel\r\n    if (portIn === null || portOut === null) return\r\n    setrelationName(relationName)\r\n    diagramctr.connectRealation(portIn, portOut, relationName)\r\n\r\n    //update fk\r\n\r\n    /*\r\n\r\n    let fieldIndexof = currentTable.fields.findIndex(f => f.inId === portid)\r\n\r\n    let newtb = currentTable\r\n    let newfieldOption = newtb.fields[fieldIndexof].fieldOption\r\n    if (newfieldOption === undefined) return\r\n    newfieldOption.fk = true\r\n    newtb.fields[fieldIndexof].fieldOption = newfieldOption\r\n    setTable(newtb)\r\n\r\n    */\r\n\r\n  }\r\n\r\n  return <Drawer anchor={\"right\"} open={isOpen} style={{ width: 600 }} onClose={onBeforeClose}>\r\n    <div>\r\n      <Appbar onDelete={onDelete} title={currentTable.tablename} onEndEdit={onNameChange}></Appbar>\r\n      <TableContainer>\r\n        <TableMat aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell></TableCell>\r\n              <TableCell className={classes.cell}>Field Name</TableCell>\r\n              <TableCell className={classes.cell}>Type Name</TableCell>\r\n              <TableCell className={classes.cell}>PK</TableCell>\r\n              <TableCell className={classes.cell}>AI</TableCell>\r\n              <TableCell className={classes.cell}>Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {currentTable.fields.map((row: Field, index: number) => (\r\n              <React.Fragment key={row.inId}>\r\n\r\n                <TableRow className={classes.cell}>\r\n                  <TableCell >\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" >\r\n                      {(isEdit && currentEdit !== row.inId) ? <CreateIcon /> : <SaveAltIcon />}\r\n                    </IconButton>\r\n                  </TableCell>\r\n                  {(isEdit && currentEdit == row.inId) ?\r\n                    <>\r\n\r\n                      <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\r\n                        <input onBlur={() => closeEdit()}\r\n                          onChange={handleChange} value={textInput} />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\r\n                        <select onChange={handleTypeChange} value={typeSelect} >\r\n                          <option value=\"int\">Interger</option>\r\n                          <option value=\"varchar\">Varchar</option>\r\n                          <option value=\"float\">Float</option>\r\n                          <option value=\"bool\">Boolean</option>\r\n                        </select>\r\n                      </TableCell>\r\n\r\n                    </>\r\n                    :\r\n                    <>\r\n                      <TableCell className={classes.cell} component=\"th\" scope=\"row\" onClick={() => setEditField(row.inId, row.fieldName)}>\r\n                        {row.fieldName}\r\n                      </TableCell>\r\n\r\n                      <TableCell className={classes.cell} component=\"th\" scope=\"row\" onClick={() => setEditField(row.inId, row.fieldName)}>\r\n                        {row.fieldType}\r\n                      </TableCell>\r\n                    </>\r\n                  }\r\n\r\n                  <TableCell className={classes.cell}>\r\n                    <input type=\"checkbox\" checked={(getFieldOption(row, \"pk\"))}\r\n                      onChange={(e) => setFieldOption(e, row.inId, \"pk\")} key={`pk${row.inId}`} />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <input type=\"checkbox\" checked={(getFieldOption(row, \"ai\"))} onChange={(e) => setFieldOption(e, row.inId, \"ai\")} key={`ai${row.inId}`} />\r\n                  </TableCell>\r\n                  <TableCell className={classes.cell} >\r\n                    <IconButton onClick={() => removeField(row.inId)} size=\"small\">\r\n                      <DeleteOutlineIcon></DeleteOutlineIcon>\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n                    <Collapse in={(isEdit && currentEdit === row.inId)} timeout=\"auto\" unmountOnExit>\r\n                      <Box margin={1}>\r\n\r\n\r\n                        <TextField label=\"Default Value\" variant=\"outlined\" size=\"small\"></TextField>\r\n\r\n                        <TableCell>\r\n                          <input type=\"checkbox\" checked={(getFieldOption(row, \"fk\"))}\r\n                            onChange={(e) => setFieldOption(e, row.inId, \"fk\")} />\r\n                        </TableCell>\r\n                        {(getFieldOption(row, \"fk\")) ? <React.Fragment >\r\n\r\n                          <select placeholder=\"Select Table\" value={currentSelectTableId} onChange={onSelectTableChange}>\r\n                            <option disabled value=\"\"> -- Select Ref Table -- </option>\r\n                            {otherTable.map(tb => {\r\n                              const ele = currentTable.id !== tb.id ?\r\n                                <option key={\"option-\" + tb.id} value={tb.id}>{tb.tablename}</option> : \"\"\r\n                              return ele\r\n                            })}\r\n                          </select>\r\n\r\n                          <select placeholder=\"Select Field\" style={{ minWidth: 100 }} value={currentFieldId} onChange={onChangeFieldSelect}>\r\n\r\n                            <option style={{ display: \"none\" }} value=\"\"></option>\r\n                            {currentField.map(f => <option key={f.fieldName} value={f.inId}>{f.fieldName}</option>)}\r\n                          </select>\r\n\r\n                          <select placeholder=\"Select Relation\" value={relationName} onChange={(e) => onSelectRelation(row.inId, row.outId, e.target.value)}>\r\n                            <option value=\"1:1\">One to One</option>\r\n                            <option value=\"1:N\">One to Many</option>\r\n                          </select>\r\n\r\n                        </React.Fragment>\r\n                          : \"\"}\r\n\r\n\r\n                      </Box>\r\n                    </Collapse>\r\n                  </TableCell>\r\n                </TableRow>\r\n\r\n              </React.Fragment>\r\n\r\n            ))}\r\n          </TableBody>\r\n        </TableMat>\r\n      </TableContainer>\r\n      <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => newField()}>\r\n        <AddCircleOutlineIcon />\r\n      </IconButton>\r\n    </div>\r\n  </Drawer>\r\n}","import React , {FunctionComponent} from 'react';\r\n\r\nimport { Menu, Item, Separator } from 'react-contexify';\r\n\r\nimport { Redo, Undo, Paste, ZoomIn, ZoomOut } from '../Icons';\r\nimport Key from './KeyMenu';\r\nimport ContextMenuIconContainer from './ContextMenuIconContainer';\r\nimport ContextMenuShortcutContainer from './ContextMenuShortcutContainer';\r\n\r\nimport {ContextFunction} from './FunctionList'\r\n\r\n\r\nexport const SimpleContext : FunctionComponent = () => (\r\n  <Menu id=\"nodeedit\">\r\n  <Item>\r\n    <ContextMenuIconContainer>\r\n      <Paste />\r\n    </ContextMenuIconContainer>\r\n    Paste\r\n    <ContextMenuShortcutContainer>\r\n      <Key>CTRL</Key>\r\n      <Key>V</Key>\r\n    </ContextMenuShortcutContainer>\r\n  </Item>\r\n\r\n  <Separator />\r\n\r\n  <Item>\r\n    <ContextMenuIconContainer>\r\n      <ZoomIn />\r\n    </ContextMenuIconContainer>\r\n    Zoom in\r\n  </Item>\r\n  <Item>\r\n    <ContextMenuIconContainer>\r\n      <ZoomOut />\r\n    </ContextMenuIconContainer>\r\n    Zoom out\r\n  </Item>\r\n\r\n  <Separator />\r\n\r\n  <Item>\r\n    <ContextMenuIconContainer>\r\n      <Undo />\r\n    </ContextMenuIconContainer>\r\n    Undo\r\n    <ContextMenuShortcutContainer>\r\n      <Key>CTRL</Key>\r\n      <Key>Z</Key>\r\n    </ContextMenuShortcutContainer>\r\n  </Item>\r\n\r\n  <Item>\r\n    <ContextMenuIconContainer>\r\n      <Redo />\r\n    </ContextMenuIconContainer>\r\n    Redo\r\n    <ContextMenuShortcutContainer>\r\n      <Key>CTRL</Key>\r\n      <Key>SHIFT</Key>\r\n      <Key>Z</Key>\r\n    </ContextMenuShortcutContainer>\r\n  </Item>\r\n</Menu>\r\n);\r\n\r\nexport default SimpleContext;","import { TableData } from \"../../components/TableEditor\"\r\nimport { Field } from \"../../schemanode/node/SchemaNodeModel\"\r\nimport BaseGenerate from \"./BaseGenerate\"\r\n\r\nclass MySqlGenerate extends BaseGenerate {\r\n\r\n    getFields(field : Field , isLastLine : boolean = false) : string{\r\n        let newLineAndTab = \", \\n \\t\"\r\n\r\n        let ai = field.fieldOption?.ai\r\n\r\n        let rs = `${field.fieldName} ${field.fieldType}` \r\n\r\n        if(ai !== undefined && ai) rs += \" auto_increment\"\r\n\r\n        if(isLastLine == false) rs += newLineAndTab\r\n        return rs \r\n    }\r\n  \r\n    getCreateTable(tb : any) : string{\r\n        let fields = ``\r\n        tb.fields.forEach((f: any , i : number)=>{\r\n            let isLastLine = false\r\n            if(tb.fields.length-1 == i) isLastLine = true\r\n            fields += this.getFields(f , isLastLine)\r\n        })\r\n\r\n        return `CREATE TABLE ${tb.tablename} (\\n \\t${fields} \\n ) `\r\n    }\r\n\r\n    generateFieldOption(){\r\n\r\n    }\r\n\r\n    export(data : TableData[]) : any {\r\n\r\n       let rs = ``\r\n       data.forEach(d=>{\r\n          rs += this.getCreateTable(d)\r\n          rs += \"\\n \\n\"\r\n       })\r\n       return rs\r\n    }\r\n}\r\n\r\nexport default MySqlGenerate\r\n  ","class BaseGenerate {\r\n\r\n    getFields(field : any) : string{\r\n        return `` \r\n    }\r\n  \r\n    getCreateTable(tb : any) : string{\r\n        return ``\r\n    }\r\n\r\n    export(data : any[]) : any {\r\n    \r\n      return ''\r\n    }\r\n}\r\n\r\nexport default BaseGenerate\r\n  ","\r\n\r\nexport enum ShareActionType {\r\n    TOGGLE_LOADING = \"TOGGLE_LOADING\",\r\n}\r\n\r\ninterface ToggleAction {\r\n    type: typeof ShareActionType.TOGGLE_LOADING\r\n    payload: boolean\r\n}\r\n\r\n  \r\n\r\n  \r\nexport type ShareActionTypes = ToggleAction ","export interface Project{\r\n    Id ?: string;\r\n    ProjectName : string;\r\n    ProjectDescription : string;\r\n    UserId : string;\r\n    VisibleStatus : number;\r\n    ShareUrl : string;\r\n    ProjectDetail : string;\r\n}\r\n\r\nexport function defaultProject() : Project{\r\n    let rs : Project = {\r\n        Id : \"\",\r\n        ProjectName : \"\" ,\r\n        ProjectDescription : \"\",\r\n        UserId : \"\",\r\n        VisibleStatus : 1,\r\n        ShareUrl  : \"\",\r\n        ProjectDetail : \"\"\r\n    }\r\n    return rs\r\n}\r\n\r\nexport function defaultProjects() : Project[]{\r\n    return []\r\n}\r\n\r\nexport function jsonToProject(d : any) : Project{\r\n    let rs : Project = {\r\n            Id : d._id,\r\n\t\t    ProjectName : d.projectName,\r\n\t\t\tProjectDescription : d.projectDescription,\r\n\t\t\tProjectDetail : \"\",\r\n\t\t\tVisibleStatus :  d.visibleStatus,\r\n\t\t\tUserId :  d.user,\r\n\t\t\tShareUrl : \"\"\r\n    }\r\n    return rs\r\n}\r\n\r\nexport function projectToJson(p : Project) {\r\n    let rs : any = {\r\n        projectName : p.ProjectName,\r\n        projectDescription : p.ProjectDescription,\r\n        projectDetail : p.ProjectDetail,\r\n        user : p.UserId,\r\n        visibleStatus : p.VisibleStatus,\r\n        shareUrl : p.ShareUrl\r\n    }\r\n    return rs\r\n}","\r\nimport { ShareActionType, ShareActionTypes } from \"./type\";\r\n\r\nexport function ToggleLoading(data: boolean): ShareActionTypes {\r\n    return {\r\n      type: ShareActionType.TOGGLE_LOADING,\r\n      payload: data\r\n    }\r\n}","import React, { FunctionComponent, useEffect, useState } from 'react'\r\n\r\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\r\n\r\nimport { DemoCanvasWidget } from '../components/CanvasDiagram';\r\n\r\n\r\nimport { Toolbar } from '../components/Toolbar'\r\nimport { AppToolbar } from '../components/AppToolbar'\r\nimport { DiagramModel } from \"@projectstorm/react-diagrams\";\r\n\r\nimport { ExportEditor } from '../components/ExportEditor'\r\n\r\nimport { ContextMenus } from '../components/ContextMenus/ContextMenus'\r\nimport { MenuProvider } from 'react-contexify';\r\n\r\nimport { DiagramController } from '../DiagramController/DiagramCtr'\r\nimport { TableEditor } from '../components/TableEditor'\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport SimpleContext from '../components/ContextMenus/SimpleContext'\r\nimport * as htmlToImage from 'html-to-image';\r\nimport BaseGenerate from '../api/export/BaseGenerate';\r\nimport MySqlGenerate from '../api/export/MySqlGenerate';\r\n\r\nimport { getAllTable } from '../libs/tableUtil'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport Cookies from 'js-cookie'\r\n\r\nimport axios from 'axios'\r\n\r\nimport { Project, defaultProjects, jsonToProject, projectToJson } from '../interface/project'\r\nimport { useParams } from 'react-router';\r\nimport { RootState } from '../store';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ToggleLoading } from '../reducer/share/action';\r\nimport { SnackbarProvider, VariantType, useSnackbar } from 'notistack';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nenum VisibleStatus {\r\n\tPublic,\r\n\tPrivate,\r\n\tProtected\r\n}\r\n\r\ninterface EditorParamType {\r\n\tprojectId: string\r\n}\r\n\r\nexport const Editor: FunctionComponent = () => {\r\n\r\n\tlet { projectId } = useParams<EditorParamType>();\r\n\r\n\tconst user = useSelector((state: RootState) => state.AuthReducer.user)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst [saveSnack, setsaveSnack] = useState(false)\r\n\r\n\tconst [update, setupdate] = useState(false)\r\n\r\n\tconst [isLogin, setisLogin] = useState(true)\r\n\r\n\tconst [diagram, setDiagram] = useState(new DiagramController())\r\n\r\n\tconst [toggleFileMenu, settoggleFileMenu] = useState(true)\r\n\r\n\tconst [isApiLoading, setisApiLoading] = useState(false)\r\n\r\n\tconst [currentProject, setcurrentProject] = useState(initProject())\r\n\r\n\tconst [isExportOpen, setisExportOpen] = useState(false)\r\n\r\n\tconst [saveData, setsaveData] = useState(\"\")\r\n\r\n\tconst [isEdit, setEdit] = useState(false)\r\n\r\n\tconst snack = useSnackbar();\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tdiagram.getEngine().registerListener({\r\n\t\t\tonDoubleClick: () => ToggleEditor(),\t\t\t\r\n\t\t})\r\n\t\r\n\t\tisLogger()\r\n\t}, [])\r\n\r\n\r\n\tfunction isLogger() {\r\n\r\n\t\tlet token = Cookies.get(\"ertoken\")\r\n\t\tif (token === undefined || token === \"\") {\r\n\t\t\tsetisLogin(false)\r\n\t\t\tsettoggleFileMenu(true)\r\n\t\t} else {\r\n\t\t\taxios.defaults.headers.common['Authorization'] = \"Bearer \" + token\r\n\t\t\tloaduserAndProject()\r\n\t\t}\r\n\t}\r\n\r\n\tconst loaduserAndProject = () => {\r\n\r\n\t\tlet baseUrl = \"https://toperbackend.herokuapp.com/\"\r\n\t\tlet loadProjectDataApi = \"project/loadproject/\" + projectId\r\n\t\tlet userApi = \"user/getuser\"\r\n\t\tlet projectApi = \"project/getprojects\"\r\n\r\n\t\taxios.get(baseUrl + loadProjectDataApi).then(rs => {\r\n\t\t\tdiagram.saveDataByString(rs.data.projectDetail)\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tasync function saveProject() {\r\n\t\tconst newproject = currentProject\r\n\t\tlet baseUrl = \"https://toperbackend.herokuapp.com/\"\r\n\t\tlet api = \"project/update/\" + projectId\r\n\t\tconst model = diagram.getEngine().getModel().serialize()\r\n\t\tconst modelstr = JSON.stringify(model)\r\n\r\n\t\tnewproject.ProjectDetail = modelstr\r\n\t\tlet data = projectToJson(newproject)\r\n\t\tdispatch(ToggleLoading(true))\r\n\t\tconst rs = await axios.put(baseUrl + api, data)\r\n\t\tdispatch(ToggleLoading(false))\r\n\t\tsetsaveSnack(true)\r\n\t}\r\n\r\n\tfunction exportPng(filename: string) {\r\n\t\tlet node = document.getElementById('diagramcv');\r\n\t\tif (node == null) return\r\n\t\thtmlToImage.toPng(node)\r\n\t\t\t.then(function (dataUrl) {\r\n\t\t\t\tvar img = new Image();\r\n\t\t\t\timg.src = dataUrl;\r\n\t\t\t\tvar a = document.createElement('a');\r\n\t\t\t\t// toDataURL defaults to png, so we need to request a jpeg, then convert for file download.\r\n\t\t\t\ta.href = dataUrl\r\n\t\t\t\ta.download = filename;\r\n\t\t\t\ta.click();\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.error('oops, something went wrong!', error);\r\n\t\t\t});\r\n\t}\r\n\r\n\tfunction initProject(): Project {\r\n\t\tlet pid = uuidv4()\r\n\t\tlet project: Project = {\r\n\t\t\tProjectName: \"Projecttyu\",\r\n\t\t\tProjectDescription: \"hello world\",\r\n\t\t\tProjectDetail: \"\",\r\n\t\t\tVisibleStatus: VisibleStatus.Private,\r\n\t\t\tUserId: user.Id,\r\n\t\t\tShareUrl: \"xff\"\r\n\r\n\t\t}\r\n\t\treturn project\r\n\t}\r\n\r\n\tfunction openExport() { setisExportOpen(true) }\r\n\r\n\tfunction ToggleEditor() {\r\n\t\tsetEdit(!isEdit)\r\n\t}\r\n\r\n\tfunction onZoomFit() {\r\n\t\talert('zoom fit ')\r\n\t\tdiagram.getEngine().zoomToFit()\r\n\t}\r\n\r\n\tfunction newTable() {\r\n\t\tdiagram.newNode()\r\n\t}\r\n\r\n\tfunction saveSerial() {\r\n\t\tlet modelJson = diagram.getEngine().getModel().serialize()\r\n\t\tlet modelStr = JSON.stringify(modelJson)\r\n\t\t//new code\r\n\t\tlet rs: Project = {\r\n\t\t\tId: \"\",\r\n\t\t\tProjectName: currentProject.ProjectName,\r\n\t\t\tProjectDescription: currentProject.ProjectDescription,\r\n\t\t\tVisibleStatus: currentProject.VisibleStatus,\r\n\t\t\tShareUrl: \"\",\r\n\t\t\tUserId: currentProject.UserId,\r\n\t\t\tProjectDetail: modelStr\r\n\t\t}\r\n\t\tdownloadFile(rs.ProjectName + \".er\", JSON.stringify(rs))\r\n\t\t//\r\n\t\tsetsaveData(modelStr)\r\n\t\tconsole.log(modelJson)\r\n\t\tdownloadFile(\"someer.er\", modelStr)\r\n\t}\r\n\r\n\r\n\tfunction loadOpenFile() {\r\n\t\tvar elem = document.getElementById(\"fileinput\");\r\n\t\tif (elem && document.createEvent) {\r\n\t\t\tvar evt = document.createEvent(\"MouseEvents\");\r\n\t\t\tevt.initEvent(\"click\", true, false);\r\n\t\t\telem.dispatchEvent(evt);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction onLoadFile(e: any) {\r\n\t\talert(\"select\")\r\n\t\tvar input = e.target;\r\n\t\tconsole.log(e)\r\n\t\tvar reader = new FileReader();\r\n\t\treader.onload = (es) => {\r\n\t\t\tvar text: any = reader.result;\r\n\t\t\tlet model2 = new DiagramModel()\r\n\t\t\tlet obj: ReturnType<DiagramModel['serialize']> = JSON.parse(text);\r\n\t\t\tmodel2.deserializeModel(obj, diagram.engine)\r\n\t\t\tif (model2 == null) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\te.target.value = null\r\n\t\t\tdiagram.getEngine().setModel(model2)\r\n\r\n\t\t};\r\n\t\treader.readAsText(input.files[0]);\r\n\t}\r\n\r\n\tfunction loadSerial() {\r\n\r\n\t\tif (saveData == \"\") return\r\n\t\tlet str = saveData\r\n\t\tlet model2 = new DiagramModel()\r\n\t\tlet obj: ReturnType<DiagramModel['serialize']> = JSON.parse(str);\r\n\t\tmodel2.deserializeModel(obj, diagram.engine)\r\n\t\tif (model2 == null) {\r\n\t\t\tconsole.log(\"model null\")\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tdiagram.getEngine().setModel(model2)\r\n\t\ttogglePropUpdate()\r\n\t\tconsole.log(\"load sucess\")\r\n\t}\r\n\r\n\tfunction togglePropUpdate() {\r\n\t\tsetupdate(!update)\r\n\t}\r\n\r\n\tfunction downloadFile(fileName: string, content: string) {\r\n\t\tvar a = document.createElement('a');\r\n\t\ta.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(content));\r\n\t\ta.setAttribute('download', fileName);\r\n\r\n\t\ta.style.display = 'none';\r\n\t\tdocument.body.appendChild(a);\r\n\r\n\t\ta.click();\r\n\r\n\t\tdocument.body.removeChild(a);\r\n\t}\r\n\r\n\tfunction exportSelect(filename: string, codeGen: BaseGenerate) {\r\n\t\tlet tbs = getAllTable(diagram)\r\n\t\t//alert(JSON.stringify(tbs))\r\n\t\tlet str = codeGen.export(tbs)\r\n\t\talert(str)\r\n\r\n\t\tdownloadFile(filename, str)\r\n\t}\r\n\r\n\tfunction resetDiagram() {\r\n\t\tdiagram.clearDiagram()\r\n\t}\r\n\r\n\tfunction exportSql(filename: string) { exportSelect(filename, new MySqlGenerate()) }\r\n\r\n\tfunction zoomIn() { diagram.doZoom(20) }\r\n\r\n\tfunction zoomOut() { diagram.doZoom(-20) }\r\n\r\n\tfunction testEx(e: string) { alert(e) }\r\n\r\n\tfunction ontestcreate(){diagram.testCreateDiagram()}\r\n\r\n\tfunction saveCloud(){\r\n\r\n\t}\r\n\r\n\tfunction saveAsOffLine(){\r\n\r\n\t}\r\n\r\n\tfunction saveDevice() {\r\n\t\t\r\n\t}\r\n\r\n\treturn (\r\n\t\t<SnackbarProvider maxSnack={3}>\r\n\t\t\t<AppToolbar onExport={openExport} onSave={saveProject} />\r\n\t\t\t<Toolbar onZoomIn={zoomIn}\r\n\t\t\t\tonZoomOut={zoomOut} onZoomFit={resetDiagram} newTable={newTable} onSave={saveProject}\r\n\t\t\t\tonLoad={loadOpenFile} />\r\n\r\n\t\t\t<Snackbar\r\n\t\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n\t\t\t\topen={saveSnack}\r\n\t\t\t\tmessage=\"Save Project Success\"\r\n\t\t\t\tstyle={{ backgroundColor: \"green\", color: \"white\" }}\r\n\t\t\t\tkey={\"snack44\"}\r\n\t\t\t\taction={\r\n\t\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={() => setsaveSnack(false)}>\r\n\t\t\t\t\t\t<CloseIcon fontSize=\"small\" />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\r\n\t\t\t<ExportEditor\r\n\t\t\t\tisOpen={isExportOpen} onclose={() => setisExportOpen(false)} exportTest={testEx}\r\n\t\t\t\texportPng={exportPng} exportPdf={exportPng} exportSql={exportSql} fileName={currentProject.ProjectName}\r\n\t\t\t/>\r\n\r\n\t\t\t<input type=\"file\" id=\"fileinput\" style={{ display: \"none\" }} onChange={onLoadFile} />\r\n\r\n\t\t\t<TableEditor isOpen={isEdit} diagramctr={diagram}\r\n\t\t\t\tonclose={ToggleEditor} forceUpdate={update} />\r\n\r\n\t\t\t<MenuProvider id=\"diagram\" storeRef={false} >\r\n\t\t\t\t<DemoCanvasWidget background=\"#E9E9E9\" color=\"#808080\" >\r\n\t\t\t\t\t<CanvasWidget engine={diagram.engine} className=\"canvas\" />\r\n\t\t\t\t</DemoCanvasWidget>\r\n\t\t\t</MenuProvider>\r\n\r\n\t\t\t<SimpleContext />\r\n\r\n\t\t\t<ContextMenus copyFunc={diagram.copySelected} pasteFunc={diagram.pasteSelected} deleteFunc={diagram.deleteSelected}\r\n\t\t\t\tduplicateFunc={diagram.duplicateSelected} cutFunc={diagram.cutSelected}\r\n\t\t\t\tzoomIn={zoomIn} zoomOut={zoomOut} />\r\n\t\t</SnackbarProvider>\r\n\r\n\t);\r\n\r\n}\r\n\r\n\r\n\r\n","import { User } from \"../../interface/user\";\r\n\r\nexport enum AuthActionType {\r\n    SET_USER = \"SET_USER\",\r\n    UPDATE_USER = \"UPDATE_USER\",\r\n    SET_LOGIN = \"SET_LOGIN\"\r\n}\r\n\r\ninterface UpdatePayload {\r\n    Id : string,\r\n    user : User\r\n}\r\n\r\nexport interface SetUserAction {\r\n    type: typeof AuthActionType.SET_USER\r\n    payload: User\r\n}\r\n\r\nexport interface UpdatetUserAction {\r\n    type: typeof AuthActionType.UPDATE_USER\r\n    payload: UpdatePayload\r\n}\r\n\r\nexport interface SetLoginStateAction {\r\n    type: typeof AuthActionType.SET_LOGIN\r\n    payload: boolean\r\n}\r\n\r\n  \r\nexport type AuthActionTypes = SetUserAction | UpdatetUserAction | SetLoginStateAction","import { Project } from \"../../interface/project\";\r\n\r\nexport enum ProjectActionType {\r\n    SET_PROJECT = \"SET_PROJECT\",\r\n    UPDATE_PROJECT = \"UPDATE_PROJECT\",\r\n    NEW_PROJECT = \"NEW_PROJECT\",\r\n    DELETE_PROJECT = \"DELETE_PROJECT\",\r\n    TOGGLE_MODAL = \"TOGGLE_MODAL\",\r\n    TOGGLE_CONFRIM_MODAL = \"TOGGLE_CONFRIM_MODAL\",\r\n    SET_PROJECT_SAVE_TYPE = \"SET_PROJECT_SAVE_TYPE\"\r\n}\r\n\r\ninterface SetProjectAction {\r\n    type: typeof ProjectActionType.SET_PROJECT\r\n    payload: Project[]\r\n}\r\n\r\ninterface UpdateProjectAction {\r\n    type: typeof ProjectActionType.UPDATE_PROJECT\r\n    payload: Project\r\n}\r\n\r\ninterface NewProjectAction {\r\n    type : typeof ProjectActionType.NEW_PROJECT,\r\n    payload : Project\r\n}\r\n\r\ninterface DeleteProjectAction {\r\n    type : typeof ProjectActionType.DELETE_PROJECT,\r\n    payload : string\r\n}\r\n\r\ninterface ToggleAddModal{\r\n    type : typeof ProjectActionType.TOGGLE_MODAL,\r\n    payload : boolean\r\n}\r\n\r\ninterface ToggleConfrimModal{\r\n    type : typeof ProjectActionType.TOGGLE_CONFRIM_MODAL,\r\n    payload : boolean\r\n}\r\n\r\ninterface SetProjectSaveType{\r\n    type : typeof ProjectActionType.SET_PROJECT_SAVE_TYPE,\r\n    payload : string\r\n}\r\n\r\n\r\n\r\n  \r\nexport type ProjectActionTypes = SetProjectAction  | UpdateProjectAction | NewProjectAction | \r\nDeleteProjectAction | ToggleAddModal | ToggleConfrimModal | SetProjectSaveType","import { TableData } from \"../components/TableEditor\";\r\nimport { DiagramController } from \"../DiagramController/DiagramCtr\";\r\nimport { SchemaNodeModel } from \"../schemanode/node/SchemaNodeModel\";\r\n\r\nfunction getAllTable(diagram : DiagramController) : TableData[]{\r\n    let rs : TableData[] = []\r\n    let alltb = diagram.getEngine().getModel().getNodes() as SchemaNodeModel[]\r\n    alltb.forEach(tb => {\r\n      let name =tb.getOptions().name\r\n      if(name == undefined) name = \"\"\r\n      let add : TableData = {\r\n        id : tb.getID(),\r\n        tablename : name,\r\n        fields : tb.getAllField()\r\n      }\r\n      rs.push(add)\r\n    });\r\n    return rs\r\n}\r\n\r\nexport {getAllTable}","import { FunctionComponent } from \"react\";\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\n\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    \r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-center',\r\n    ...theme.mixins.toolbar\r\n  },\r\n\r\n    drawerPaper: {\r\n      backgroundColor : \"#5661B3\",\r\n    color : \"white\",\r\n\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n      },\r\n      toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n      },\r\n\r\n}));\r\n\r\nexport const Sidebar: FunctionComponent = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const history = useHistory();\r\n\r\n    const changePath = (p : string) => {\r\n      history.push(\"/document/\"+p)\r\n    }\r\n\r\n    return (\r\n        <Drawer\r\n        variant=\"permanent\"\r\n        className={classes.drawer}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n\r\n      >\r\n        <div className={classes.toolbar}>\r\n        <Avatar alt=\"Remy Sharp\" src=\"favicon.ico\"  style={{margin:10 }} />\r\n          <Typography style={{margin:18 , fontSize:20}}>Visual Draw</Typography>\r\n        </div>\r\n     \r\n        <List>\r\n        <div>\r\n        <ListItem button onClick={() => changePath(\"project\")}>\r\n            <ListItemIcon>\r\n              <AddCircleOutlineOutlinedIcon color=\"inherit\" style={{color:\"white\"}} />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"New Project\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => changePath(\"filelist\")}>\r\n            <ListItemIcon>\r\n              <DashboardIcon color=\"inherit\" style={{color:\"white\"}}  />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"File List\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => changePath(\"filelist\")}>\r\n            <ListItemIcon color=\"transparent\">\r\n              <ShoppingCartIcon style={{color:\"white\"}}  />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Template\"  />\r\n          </ListItem>\r\n          <ListItem button onClick={() => changePath(\"accout\")}>\r\n            <ListItemIcon>\r\n              <PeopleIcon style={{color:\"white\"}} />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Customers\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => changePath(\"accout\")}>\r\n            <ListItemIcon>\r\n              <BarChartIcon style={{color:\"white\"}} />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Setting\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => changePath(\"accout\")}>\r\n            <ListItemIcon>\r\n              <LayersIcon style={{color:\"white\"}} />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Logout\" />\r\n          </ListItem>\r\n        </div>\r\n        </List>\r\n  \r\n      </Drawer>\r\n        \r\n      )\r\n}","import Cookies from 'js-cookie'\r\n\r\nexport interface User{\r\n    Id : string,\r\n    UserName : string,\r\n    UserLastName : string,\r\n    UserEmail : string,\r\n    UserPassword : string\r\n}\r\n\r\nexport function defaultUser() : User{\r\n    \r\n    let rs : User = {\r\n        Id : \"\",\r\n        UserName : \"test\",\r\n        UserLastName :  \"\",\r\n        UserEmail : \"\",\r\n        UserPassword : \"\"\r\n    }\r\n    return rs\r\n}\r\n\r\nexport function isLogin() : boolean{\r\n    const token = Cookies.get(\"ertoken\")\r\n    alert(\"call login check in file :src/interface/user.isLogin\")\r\n        if(token !== \"\" && token !== undefined){\r\n            //pass login\r\n            return true\r\n        }\r\n    return false\r\n}\r\n\r\nexport function jsonToUser(d : any) : User{\r\n    const rs : User = {\r\n        Id : d._id,\r\n        UserName : d.userName,\r\n        UserLastName : d.userlastname,\r\n        UserEmail : d.userEmail,\r\n        UserPassword : d.userPassword\r\n    }\r\n    return rs\r\n}","import { User } from \"../../interface/user\";\r\nimport { AuthActionType, AuthActionTypes } from \"./type\";\r\n\r\nexport function SetUser(user: User): AuthActionTypes {\r\n    return {\r\n      type: AuthActionType.SET_USER,\r\n      payload: user\r\n    }\r\n}\r\n\r\nexport function SetLoginState(data:boolean): AuthActionTypes {\r\n  return {\r\n    type: AuthActionType.SET_LOGIN,\r\n    payload: data\r\n  }\r\n}","\r\nimport { Project } from \"../../interface/project\";\r\nimport { ProjectActionType, ProjectActionTypes } from \"./type\";\r\n\r\nexport function SetProject(data: Project[]): ProjectActionTypes {\r\n    return {\r\n      type: ProjectActionType.SET_PROJECT,\r\n      payload: data\r\n    }\r\n}\r\n\r\nexport function NewProject(data: Project): ProjectActionTypes {\r\n  return {\r\n    type: ProjectActionType.NEW_PROJECT,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport function DeleteProject(id : string) : ProjectActionTypes{\r\n  return {\r\n    type : ProjectActionType.DELETE_PROJECT,\r\n    payload : id\r\n  }\r\n}\r\n\r\nexport function ToggleModal(value : boolean) : ProjectActionTypes{\r\n  return {\r\n    type : ProjectActionType.TOGGLE_MODAL,\r\n    payload : value\r\n  }\r\n}\r\n\r\nexport function ToggleConfrimModal(value : boolean) : ProjectActionTypes{\r\n  return {\r\n    type : ProjectActionType.TOGGLE_CONFRIM_MODAL,\r\n    payload : value\r\n  }\r\n}\r\n\r\nexport function SetProjectSaveType(type : string) : ProjectActionTypes{\r\n  return {\r\n    type : ProjectActionType.SET_PROJECT_SAVE_TYPE,\r\n    payload : type\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { LoginPayload } from \"../../interface/loginpayload\"\r\nimport { User , defaultUser , jsonToUser } from \"../../interface/user\";\r\nimport {SetLoginState, SetUser} from './action'\r\nimport Cookies from \"js-cookie\"\r\nimport { SetProject } from \"../project/action\";\r\n\r\nexport const signIn = (login : LoginPayload) => {\r\n    return async (dispatch : Dispatch) => {\r\n      let url = \"https://toperbackend.herokuapp.com/auth/login\"\r\n      let rs = await axios.post(url , login)\r\n      console.log(rs)\r\n      if(rs.status === 200){\r\n        const data = rs.data\r\n        if(data.access_token !== \"\"){\r\n            console.log('set token ')\r\n            Cookies.set(\"ertoken\" , data.access_token)\r\n            const user : User = jsonToUser(data)\r\n            dispatch(SetUser(user))\r\n            dispatch(SetLoginState(true))\r\n  \r\n        }\r\n        \r\n      }\r\n      \r\n    };\r\n}\r\n\r\nexport const register = (user : any) => {\r\n  return async (dispatch : Dispatch) => {\r\n    let url = \"https://toperbackend.herokuapp.com/auth/register\"\r\n    alert(\"register\")\r\n    let rs = await axios.post(url , user)\r\n    if(rs.status === 200){\r\n      const data = rs.data\r\n      if(data.access_token !== \"\"){\r\n          Cookies.set(\"ertoken\" , data.access_token)\r\n          const user : User = jsonToUser(data)\r\n          dispatch(SetUser(user))\r\n          dispatch(SetLoginState(true))\r\n\r\n      }\r\n      \r\n    }\r\n    \r\n  };\r\n}\r\n\r\n\r\nexport const signOut = () => {\r\n  return async (dispatch : Dispatch) => {\r\n    Cookies.set(\"ertoken\" , \"\")\r\n    const user : User = defaultUser()\r\n    dispatch(SetUser(user))\r\n    dispatch(SetLoginState(false))\r\n    dispatch(SetProject([]))\r\n  };\r\n}\r\n\r\nexport const fetchPosts = (loginPayload : LoginPayload) => async (dispatch : any) => {\r\n\r\n    dispatch({ type: 'FETCH_POSTS', payload: \"\" })\r\n}\r\n\r\n","import React, { FunctionComponent } from 'react'\r\nimport {  useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { signOut } from '../../reducer/auth/thunkaction';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {RootState} from '../../store/index'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n\r\n\r\n}));\r\n\r\nexport const MainHead: FunctionComponent = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const user = useSelector((state: RootState) => state.AuthReducer.user);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const classes = useStyles();\r\n\r\n    const onLogOut = async () => {\r\n        await dispatch(signOut())\r\n        history.push(\"/login\")\r\n    }\r\n\r\n    return (\r\n      <AppBar  className={classes.appBar} elevation={0} position=\"fixed\" color=\"transparent\"  >\r\n      <Toolbar className={classes.toolbar} >\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          className={classes.menuButton}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n          Dashboard\r\n        </Typography>\r\n        <IconButton color=\"inherit\" onClick={onLogOut}>\r\n          \r\n            <ExitToAppIcon />\r\n        \r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default MainHead\r\n","import axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport Cookies from \"js-cookie\"\r\nimport { ToggleLoading } from \"./share/action\";\r\nimport { jsonToProject, Project } from \"../interface/project\";\r\nimport { jsonToUser } from \"../interface/user\";\r\nimport { SetLoginState, SetUser } from \"./auth/action\";\r\nimport { SetProject } from \"./project/action\";\r\n\r\nexport const initApp = () => {\r\n\r\n    return async (dispatch : Dispatch) => {\r\n\r\n      let baseUrl = \"https://toperbackend.herokuapp.com\"\r\n      let userUrl = baseUrl + \"/user/getuser\"\r\n      let projectUrl = baseUrl + \"/project/getprojects\"\r\n\r\n      let token = Cookies.get(\"ertoken\")\r\n\r\n      if(token === \"\" || token === undefined){\r\n            dispatch(ToggleLoading(false))\r\n            dispatch(SetLoginState(false))\r\n  \r\n            return\r\n      }\r\n\r\n      dispatch(ToggleLoading(true))\r\n\r\n      axios.defaults.headers.common['Authorization'] = \"Bearer \" + token\r\n\r\n      axios.all([\r\n        axios.get(userUrl), \r\n        axios.get(projectUrl)\r\n      ])\r\n      .then(axios.spread((userrs, projectrs) => {\r\n\r\n        dispatch(ToggleLoading(false))\r\n\r\n        if(userrs.data.length > 0){\r\n            let userdata = userrs.data[0]\r\n            const user = jsonToUser(userdata)\r\n            dispatch(SetUser(user))\r\n            dispatch(SetLoginState(true))\r\n        }\r\n        let projects : Project[] = []\r\n        projectrs.data.forEach((p : any) =>{\r\n            const project : Project = jsonToProject(p)\r\n            projects.push(project)\r\n        })\r\n\r\n        dispatch(SetProject(projects))\r\n\r\n      }));      \r\n      \r\n    };\r\n}","import React , { FunctionComponent } from \"react\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\ninterface ConfrimProp {\r\n    isOpen : boolean,\r\n    onClose : () => void,\r\n    onConfrim : () => void\r\n}\r\n\r\nexport const ConfrimDialog: FunctionComponent<ConfrimProp> = ({isOpen , onClose , onConfrim}) => {\r\n\r\n  const handleClose = () => {\r\n    onClose()\r\n  };\r\n\r\n  const handleConfrim = () => {\r\n    onConfrim()\r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Dialog\r\n        open={isOpen}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Are you want Delete this Project?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleConfrim} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React, { FunctionComponent, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Project } from '../../interface/project'\r\nimport { deleteProjectAsync } from '../../reducer/project/thunkaction'\r\nimport { RootState } from '../../store'\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport { ConfrimDialog } from \"../ConfrimDialog\"\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport CloudQueueIcon from '@material-ui/icons/CloudQueue';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AirplayIcon from '@material-ui/icons/Airplay';\r\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\r\n\r\nexport const FileList: FunctionComponent = () => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const [isConfrimModal, setisConfrimModal] = useState(false)\r\n\r\n  const [currentSelect, setcurrentSelect] = useState(\"\")\r\n\r\n  const projects = useSelector((state: RootState) => state.ProjectReducer.projects)\r\n\r\n  const selectRemove = (id: string | undefined) => {\r\n    if (id === undefined) id = \"\"\r\n    setisConfrimModal(true)\r\n    setcurrentSelect(id)\r\n  }\r\n\r\n  const confrimRemove = () => {\r\n    alert(currentSelect)\r\n    setisConfrimModal(false)\r\n    if (currentSelect === \"\") return\r\n    dispatch(deleteProjectAsync(currentSelect))\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <Box display=\"flex\">\r\n\r\n        <Box p={1} flexGrow={1} >\r\n          <h2>Open With</h2>\r\n          <List>\r\n          <ListItem button>\r\n          <ListItemIcon>\r\n            <CloudQueueIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Cloud\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AirplayIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Device\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <OpenInBrowserIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Browse\" />\r\n        </ListItem>\r\n          </List>\r\n\r\n        </Box>\r\n\r\n        <Divider orientation=\"vertical\" flexItem style={{height:\"80vh\"}} />\r\n\r\n        <Box p={1} flexGrow={1} > \r\n        <List>\r\n        {projects.map((p: Project) => (\r\n          <ListItem key={p.Id}>\r\n            <Link to={`/editor/${p.Id}`}>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <FolderIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n            </Link>\r\n\r\n            <ListItemText\r\n              primary={p.ProjectName}\r\n              secondary={'Update at 10min ago'}\r\n            />\r\n            <ListItemSecondaryAction>\r\n              <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => selectRemove(p.Id)}>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n\r\n        ))}\r\n        <ConfrimDialog isOpen={isConfrimModal} onClose={() => setisConfrimModal(false)} onConfrim={confrimRemove} />\r\n\r\n      </List>\r\n        </Box>\r\n\r\n      \r\n\r\n    </Box>\r\n\r\n\r\n\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default FileList","import axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { LoginPayload } from \"../../interface/loginpayload\"\r\nimport { Project, projectToJson } from \"../../interface/project\";\r\nimport { User , defaultUser , jsonToUser } from \"../../interface/user\";\r\nimport { ToggleLoading } from \"../share/action\";\r\nimport { DeleteProject, NewProject, ToggleModal } from \"./action\";\r\n\r\nexport const newProjectAsync = (project : Project) => {\r\n    return async (dispatch : Dispatch) => {\r\n        let url = \"https://toperbackend.herokuapp.com/project\"\r\n        let data = projectToJson(project)\r\n        alert(JSON.stringify(data))\r\n        dispatch(ToggleModal(false))\r\n        dispatch(ToggleLoading(true))\r\n        const rs = await axios.post(url , data)\r\n        if(rs.status === 200){\r\n            dispatch(NewProject(project))\r\n\r\n        }\r\n        dispatch(ToggleLoading(false))\r\n    };\r\n  }\r\n\r\n  export const deleteProjectAsync = (id : string) => {\r\n    return async (dispatch : Dispatch) => {\r\n        let url = \"https://toperbackend.herokuapp.com/project/delete/\" + id \r\n        dispatch(ToggleLoading(true))\r\n        const rs = await axios.delete(url)\r\n        if(rs.status === 200){\r\n            dispatch(DeleteProject(id))\r\n        }\r\n        dispatch(ToggleLoading(false))\r\n    };\r\n  }\r\n\r\nexport const fetchPosts = (loginPayload : LoginPayload) => async (dispatch : any) => {\r\n\r\n    dispatch({ type: 'FETCH_POSTS', payload: \"\" })\r\n}\r\n\r\n","import { TextField } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport React, { FunctionComponent, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store\";\r\n\r\nexport const UserFrom : FunctionComponent = () => {\r\n\r\n    const user = useSelector((state: RootState) => state.AuthReducer.user);\r\n\r\n    const [userName, setuserName] = useState(\"\")\r\n\r\n    const [userPassword, setuserPassword] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        setuserName(user.UserName)\r\n\r\n        setuserPassword(user.UserPassword)\r\n    }, [])\r\n\r\n    return (\r\n        <Box flexGrow={1}>\r\n\r\n            <TextField label=\"User Email\"  fullWidth style={{ margin: 8 }} />\r\n\r\n            <TextField label=\"User Name\" value={userName} \r\n                onChange={(e) => setuserName(e.target.value)} fullWidth style={{ margin: 8 }} />\r\n            \r\n            <TextField label=\"User Password\" value={userPassword} \r\n                onChange={(e) => setuserPassword(e.target.value)}  fullWidth style={{ margin: 8 }} />\r\n\r\n\r\n        </Box>\r\n    )\r\n}","import { Button, TextField } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport React, { FunctionComponent, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Project } from \"../interface/project\";\r\nimport { RootState } from \"../store\";\r\nimport { newProjectAsync } from \"../reducer/project/thunkaction\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const ProjectForm : FunctionComponent = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [projectName, setprojectName] = useState(\"\")\r\n\r\n    const [projectDescription, setprojectDescription] = useState(\"\")\r\n\r\n    const user = useSelector((state : RootState) => state.AuthReducer.user)\r\n\r\n    useEffect(() => {\r\n        \r\n    }, [])\r\n\r\n    const onSave = () => {\r\n        let project : Project = {\r\n            ProjectName : projectName,\r\n            ProjectDescription : projectDescription,\r\n            ProjectDetail : \"\",\r\n            VisibleStatus : 1,\r\n            UserId :  user.Id,\r\n            ShareUrl : \"\"\r\n        }\r\n        \r\n        dispatch(newProjectAsync(project))\r\n\r\n        history.push(\"/document/filelist\")\r\n    }\r\n\r\n    return (\r\n        <Box flexGrow={1}>\r\n            <TextField label=\"Project Name\" value={projectName} \r\n                onChange={(e) => setprojectName(e.target.value)} fullWidth style={{ margin: 8 }} />\r\n            <TextField label=\"Project Description\" value={projectDescription}\r\n                onChange={(e) => setprojectDescription(e.target.value)} fullWidth style={{ margin: 8 }} />\r\n            <TextField label=\"Create Date\" disabled fullWidth style={{ margin: 8 }} />\r\n            <TextField label=\"Update Date\" disabled fullWidth style={{ margin: 8 }} />\r\n            <Button onClick={onSave} style={{ margin: 8 }}>Save Project</Button>\r\n        </Box>\r\n    )\r\n}","import React, { FunctionComponent, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport {Sidebar} from '../components/Document/Sidebar'\r\n\r\nimport { MainHead } from \"../components/Document/MainHead\";\r\nimport { RootState } from \"../store\";\r\nimport { initApp } from \"../reducer/loadapp\";\r\n\r\nimport { FileList } from \"../components/Document/FileList\";\r\n\r\n//import { ProjectForm } from \"../components/Document/ProjectForm\";\r\nimport { UserFrom } from \"./userform\";\r\nimport { ProjectForm } from \"./projectform\";\r\n\r\nexport default function ExTemplate() {\r\n  return <div>Template</div>;\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nexport const Document: FunctionComponent = () => {\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  const addProjectModal = useSelector((state: RootState) => state.ProjectReducer.addProjectModal)\r\n\r\n  const isLoading = useSelector(\r\n    (state: RootState) => state.ShareReducer.isLoading\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(initApp());\r\n  }, []);\r\n\r\n  return (\r\n\r\n    <div className={classes.root}>\r\n\r\n      \r\n    <CssBaseline />\r\n    <Sidebar/>\r\n    <MainHead></MainHead>\r\n    <main className={classes.content}>\r\n      <div className={classes.appBarSpacer} />\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n    \r\n          {/* Chart */}\r\n          <Switch>\r\n              <Route path=\"/document/filelist\" component={FileList} />\r\n              <Route path=\"/document/template\" component={ExTemplate} />\r\n              <Route path=\"/document/accout\" component={UserFrom} />\r\n              <Route path=\"/document/project\" component={ProjectForm} />\r\n            </Switch>\r\n\r\n        \r\n      </Container>\r\n    </main>\r\n  </div>\r\n    \r\n\r\n  );\r\n};\r\n","import React ,  { FunctionComponent, useState } from \"react\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { useDispatch } from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport LinkMat from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { LoginPayload } from \"../interface/loginpayload\";\r\nimport { initApp } from \"../reducer/loadapp\";\r\nimport { signIn } from \"../reducer/auth/thunkaction\"\r\nimport { Link } from \"react-router-dom\";\r\nimport {ToggleLoading} from '../reducer/share/action'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <LinkMat color=\"inherit\" href=\"https://material-ui.com/\">\r\n          Your Website\r\n        </LinkMat>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n  \r\n\r\nexport const SignIn: FunctionComponent = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [userName, setuserName] = useState(\"\")\r\n\r\n    const [userPassword, setuserPassword] = useState(\"\")\r\n\r\n    const onLogin = async () => {\r\n        let loginParam: LoginPayload = {\r\n            userName: userName,\r\n            userPassword: userPassword\r\n        }\r\n        dispatch(ToggleLoading(true))\r\n        await dispatch(signIn(loginParam))\r\n        dispatch(ToggleLoading(false))\r\n        //dispatch(initApp())\r\n        history.push(\"/\")\r\n    }\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate >\r\n            \r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={(e) => setuserName(e.target.value)} value={userName}\r\n            />\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={(e) => setuserPassword(e.target.value)} value={userPassword}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={onLogin}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <LinkMat href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </LinkMat>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link to=\"/signup\">\r\n                <LinkMat href=\"#\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </LinkMat>\r\n                </Link>\r\n                \r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n}","import React ,  { FunctionComponent, useState } from \"react\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { useDispatch } from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport LinkMat from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { LoginPayload } from \"../interface/loginpayload\";\r\nimport { initApp } from \"../reducer/loadapp\";\r\nimport { register } from \"../reducer/auth/thunkaction\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <LinkMat color=\"inherit\" href=\"https://material-ui.com/\">\r\n          Your Website\r\n        </LinkMat>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n  \r\n\r\nexport const SignUp: FunctionComponent = () => {\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [userName, setuserName] = useState(\"\")\r\n\r\n    const [userLastname, setuserLastname] = useState(\"\")\r\n\r\n    const [userEmail, setuserEmail] = useState(\"\")\r\n\r\n    const [userPassword, setuserPassword] = useState(\"\")\r\n\r\n    const onLogin = async () => {\r\n        let user: any = {\r\n            userName,\r\n            userLastname,\r\n            userPassword,\r\n            userEmail\r\n        }\r\n        alert(JSON.stringify(user))\r\n        await dispatch(register(user))\r\n        dispatch(initApp())\r\n    }\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate >\r\n          <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"User name\"\r\n              name=\"user\"\r\n              autoFocus\r\n              onChange={(e) => setuserName(e.target.value)} value={userName}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"lastname\"\r\n              label=\"User Lastname\"\r\n              name=\"lastname\"\r\n              autoFocus\r\n              onChange={(e) => setuserLastname(e.target.value)} value={userLastname}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={(e) => setuserEmail(e.target.value)} value={userEmail}\r\n            />\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={(e) => setuserPassword(e.target.value)} value={userPassword}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={onLogin}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <LinkMat href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </LinkMat>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link to=\"/signup\">\r\n                <LinkMat href=\"#\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </LinkMat>\r\n                </Link>\r\n                \r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n}","import React, { FunctionComponent, useEffect, useState } from 'react'\r\n\r\n\r\n\r\nimport {BrowserRouter as Router, Redirect, Route, useHistory } from 'react-router-dom'\r\n\r\nimport { Editor } from './pages/editor'\r\n\r\nimport {Document} from './pages/document'\r\n\r\nimport {SignIn} from './pages/signin'\r\nimport Cookies from 'js-cookie'\r\nimport { SignUp } from './pages/signup'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from './store'\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport const App: FunctionComponent = () => {\r\n\r\n\tconst isLoading = useSelector((state: RootState) => state.ShareReducer.isLoading);\r\n\r\n\tconst isLogin = () => {\r\n\t\tconsole.log(\"check login from app\")\r\n\t\tlet token = Cookies.get(\"ertoken\")\r\n\t\tif(token === \"\" || token === undefined) return false\r\n\t\treturn true\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\r\n\t\t<Backdrop open={isLoading} >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n\t\t\t<Router>\r\n\r\n\t\t\t<Route exact path=\"/signup\" component={SignUp}/>\r\n\r\n\t\t\t<Route exact path=\"/login\" component={SignIn}/>\r\n\r\n\t\t\t<Route exact path=\"/\" component={Document} >\r\n\t\t\t\t{isLogin() ? <Redirect to=\"/document/filelist\" /> : <Redirect to=\"/login\" />}\r\n\t\t\t\t\r\n\t\t\t</Route>\r\n\t\t\t<Route  path=\"/document\" component={Document} />\r\n\t\t\t<Route exact path=\"/editor/:projectId\" component={Editor} />\r\n\r\n\t\t\t</Router>\r\n\r\n\t\t\t\r\n\r\n\t\t</React.Fragment>\r\n\r\n\t);\r\n\r\n}\r\n\r\n\r\n\r\n","import { User , defaultUser, isLogin } from \"../../interface/user\"\r\nimport { AuthActionType , AuthActionTypes} from './type'\r\n\r\n\r\nexport interface AuthState {\r\n    user : User,\r\n    isLogin : boolean,\r\n    err : string\r\n}\r\n\r\nconst initialState : AuthState = {\r\n    user : defaultUser(),\r\n    isLogin : true,\r\n    err : \"no err\"\r\n}\r\n\r\nexport const AuthReducer =  (state  = initialState, action : AuthActionTypes) => {\r\n    switch (action.type) {\r\n\r\n    case AuthActionType.SET_USER:\r\n        return { ...state, user : action.payload }\r\n    case AuthActionType.UPDATE_USER:\r\n        return { ...state, ...action.payload }\r\n    case AuthActionType.SET_LOGIN:\r\n        return { ...state, isLogin : action.payload }\r\n    \r\n    default:\r\n        return state\r\n    }\r\n}\r\n","\r\nimport { ShareActionTypes , ShareActionType } from './type'\r\n\r\ninterface ShareState {\r\n    error : string,\r\n    isLoading : boolean,\r\n}\r\n\r\nconst initialState : ShareState = {\r\n    error : \"\",\r\n    isLoading : false,\r\n}\r\n\r\nexport const ShareReducer =  (state = initialState, action : ShareActionTypes) => {\r\n    switch (action.type) {\r\n\r\n    case ShareActionType.TOGGLE_LOADING:\r\n        return { ...state, isLoading : action.payload }\r\n\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","\r\nimport { Project , defaultProjects  , defaultProject } from \"../../interface/project\"\r\nimport { ProjectActionTypes , ProjectActionType } from \"./type\"\r\n\r\ninterface ProjectState {\r\n    projects : Project[],\r\n    currentProject : Project,\r\n    addProjectModal : boolean,\r\n    confrimModal : boolean,\r\n    projectSaveType : string\r\n}\r\n\r\nconst initialState : ProjectState = {\r\n    projects : defaultProjects(),\r\n    currentProject : defaultProject(),\r\n    addProjectModal : false,\r\n    confrimModal : false,\r\n    projectSaveType : \"\"\r\n}\r\n\r\nexport const ProjectReducer = (state = initialState, action : ProjectActionTypes) => {\r\n    switch (action.type) {\r\n\r\n    case ProjectActionType.SET_PROJECT:\r\n        return { ...state, projects : action.payload }\r\n    case ProjectActionType.NEW_PROJECT:\r\n        state.projects.push(action.payload)\r\n        return { ...state }\r\n    case ProjectActionType.DELETE_PROJECT:\r\n        const indexof = state.projects.findIndex(p=>p.Id === action.payload)\r\n        if(indexof !== -1) state.projects.splice(indexof , 1)\r\n        return { ...state }\r\n    case ProjectActionType.TOGGLE_MODAL:\r\n        return { ...state , addProjectModal : action.payload }\r\n    case ProjectActionType.TOGGLE_CONFRIM_MODAL:\r\n        return { ...state , confrimModal : action.payload }\r\n    case ProjectActionType.SET_PROJECT_SAVE_TYPE:\r\n        return { ...state, projectSaveType : action.payload }\r\n\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import { createStore, combineReducers , applyMiddleware } from \"redux\";\r\n\r\nimport {AuthReducer} from \"../reducer/auth/auth\";\r\n\r\nimport {ShareReducer} from '../reducer/share/share'\r\n\r\nimport {ProjectReducer} from '../reducer/project/project'\r\n\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nconst rootReducer = combineReducers({\r\n\tAuthReducer,\r\n    ShareReducer,\r\n    ProjectReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nconst store = () => {\r\n\t return\tcreateStore(rootReducer , applyMiddleware(thunkMiddleware));\r\n}\r\n\r\nexport default store","\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App'\nimport './index.css';\n\nimport { Provider } from 'react-redux';\nimport configureStore from \"./store/index\";\n\nconst store = configureStore();\n\n\nReactDOM.render(   \n  <Provider store={store}>\n\t\t<App />\n\t</Provider>\n  \n,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}