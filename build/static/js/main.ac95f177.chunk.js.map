{"version":3,"sources":["components/CanvasDiagram.tsx","components/MenuSelect.tsx","components/Icons/Chevrons.jsx","components/Toolbar.tsx","components/MenuButton.tsx","data/menus.ts","api/import/sqlimport.ts","components/AppToolbar.tsx","components/Icons/Copy.tsx","components/Icons/Cut.tsx","components/Icons/Delete.jsx","components/Icons/Duplicate.jsx","components/Icons/Paste.jsx","components/Icons/Redo.jsx","components/Icons/Settings.jsx","components/Icons/Undo.jsx","components/Icons/ZoomIn.jsx","components/Icons/ZoomOut.jsx","components/ContextMenus/KeyMenu.jsx","components/ContextMenus/ContextMenuIconContainer.jsx","components/ContextMenus/ContextMenuShortcutContainer.jsx","components/ContextMenus/ComponentContextMenu.tsx","components/ContextMenus/DiagramContextMenu.tsx","components/ContextMenus/ContextMenus.tsx","DiagramController/actions/DeleteAction.ts","schemanode/link/SchemaLinkModel.ts","schemanode/port/SchemaPortModel.ts","schemanode/node/SchemaNodeModel.ts","DiagramController/actions/NewNodeAction.ts","DiagramController/actions/DuplicateAction.ts","DiagramController/actions/Clipboard.ts","schemanode/port/SchemaPortLabelWidget.tsx","schemanode/node/SchemaNodeWidget.tsx","schemanode/node/SchemaNodeFactory.tsx","schemanode/port/SchemaPortFactory.tsx","libs/engine.ts","DiagramController/DiagramCtr.tsx","components/Appbar.tsx","components/TableEditor.tsx","components/ContextMenus/SimpleContext.tsx","api/export/MySqlGenerate.ts","api/export/BaseGenerate.ts","reducer/share/type.ts","reducer/auth/type.ts","reducer/project/type.ts","interface/project.ts","reducer/share/action.ts","interface/user.ts","reducer/auth/action.ts","reducer/project/action.ts","reducer/loadapp.ts","pages/editor.tsx","reducer/project/thunkaction.ts","components/modal/modalprop.ts","components/modal/ShortCutMenu.tsx","components/modal/ShareModal.tsx","reducer/alert/type.ts","libs/tableUtil.ts","components/Document/Sidebar.tsx","reducer/alert/action.ts","reducer/auth/thunkaction.ts","components/Document/MainHead.tsx","components/ConfrimDialog.tsx","components/Document/FileList.tsx","pages/userform.tsx","pages/projectform.tsx","pages/document.tsx","pages/signin.tsx","reducer/theme/type.ts","reducer/auth/auth.ts","reducer/share/share.ts","reducer/project/project.ts","reducer/theme/theme.ts","reducer/alert/alert.ts","store/index.ts","api/nofication/index.ts","pages/signup.tsx","App.tsx","index.tsx"],"names":["CT","styled","div","p","isDark","background","color","DemoCanvasWidget","id","this","props","children","React","MenuSelect","items","defaultMenuText","menuName","onSelectChange","useState","anchorEl","setAnchorEl","currentSelect","setcurrentSelect","handleClose","item","selectOption","text","undefined","Fragment","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","endIcon","Menu","keepMounted","elevation","open","Boolean","onClose","map","MenuItem","Chevrons","size","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","useStyles","makeStyles","theme","createStyles","showBtn","position","transform","backgroundColor","border","palette","divider","justifyContent","right","hideBtn","root","secondary","margin","spacing","zoomLevel","Toolbar","onZoomSelectChange","onUndo","onRedo","isNodeSelect","onZoomIn","isRender","onZoomOut","onZoomFit","newTable","onCopy","onCut","onDup","onDel","isExpand","setisExpand","classes","style","zIndex","Grid","container","className","IconButton","Divider","orientation","flexItem","console","log","disabled","fontSize","display","flexGrow","MenuButton","isEnable","onClickMenu","setOpen","anchorRef","useRef","current","contains","target","textTransform","marginRight","cursor","ref","length","prevOpen","Popper","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","e","MenuList","autoFocusItem","isLine","FileMenu","ExportMenu","ThemeMenu","HelpMenu","EditMenu","keywords","readUntilFoundKeyWord","content","forEach","keyword","indexOf","ExportType","avatarIcon","title","menu","menuButton","AppToolbar","onOpenMenu","diagram","onExport","onSave","projectId","useParams","history","useHistory","isApiLoading","useLocation","useSelector","state","ShareReducer","isLoading","loadOpenFile","elem","document","getElementById","createEvent","evt","initEvent","dispatchEvent","useEffect","AppBar","variant","Avatar","src","push","copySelected","cutSelected","deleteSelected","duplicateSelected","darkstate","Cookies","set","alert","linkname","win","window","focus","openLink","type","onChange","input","reader","FileReader","onload","es","result","i","substr","OnImport","value","readAsText","files","href","marginLeft","startIcon","CircularProgress","edge","aria-label","Copy","x","y","rx","ry","d","Cut","SvgIcon","cx","cy","r","x1","y1","x2","y2","Delete","Duplicate","Paste","Redo","Settings","Undo","ZoomIn","ZoomOut","Container","span","Key","ContextMenuIconContainer","ContextMenuShortcutContainer","ComponentContextMenu","copyFunc","pasteFunc","deleteFunc","duplicateFunc","cutFunc","zoomIn","zoomOut","undoFunc","redoFunc","DiagramContextMenu","ContextMenus","DeleteAction","areShortcutsAllowed","InputType","KEY_DOWN","fire","JSON","stringify","engine","getModel","isLocked","matchesInput","preventDefault","handleAction","getSelectedEntities","filter","model","remove","repaintCanvas","ctrlKey","code","Action","SchemaLinkModel","RefInPort","labelset","labels","DefaultLinkModel","SchemaPortModel","DefaultPortModel","SchemaNodeModel","options","name","portsIn","portsOut","fieldOptions","lookupTable","clone","getID","portId","indexof","findIndex","fieldIndex","f","splice","removeField","port","getOptions","in","tb","fields_tb","fields","getAllField","fieldName","label","fieldType","field","portin","addInPort","portout","addOutPort","add","ai","pk","fk","fkTb","fkField","removePort","addField","inId","fieldOption","targetPort","sourcePort","path","link","reportPosition","portins","rs","getField","index","fieldOptionIndex","outId","getInPorts","getOutPorts","getPortOutByIndex","isIn","getPortFromID","getPortInByIndex","after","uid","uuidv4","alignment","PortModelAlignment","LEFT","addPort","RIGHT","data","_","portsInOrder","portsOutOrder","NodeModel","NewNodeAction","snode","setPosition","addAll","DuplicateAction","clones","entity","BaseModel","clearSelection","addNode","setSelected","ClipboardAction","handleCut","handleCopy","handlePaste","getSelectedComponents","selectNodes","copie","serialize","localStorage","setItem","Promise","resolve","reject","clipboardstr","getItem","clipboard","parse","pastemodel","deserializeData","registerModel","deserialize","PortLabel","Label","Port","SchemaPortLabel","storeRef","Node","selected","Title","TitleName","Ports","PortsContainer","SchemaNodeWidget","node","nodetheme","themeReducer","nodeTheme","generatePort","data-default-node-name","isSelected","bgcolor","onDoubleClick","fireEvent","getActionEventBus","fireAction","key","stopPropagation","SchemaNodeFactory","connect","initialConfig","AbstractReactFactory","SchemaPortFactory","AbstractModelFactory","GetEngine","createEngine","registerDefaultDeleteItemsAction","getNodeFactories","registerFactory","getPortFactories","DiagramModel","setModel","DiagramController","isLock","zoomFit","getEngine","zoomToFit","pasteSelected","undo","redo","initActions","getZoomLevel","links","getLinks","getModels","registerAction","inPort","outPort","linksIn","linksOut","removeLink","Object","keys","getSourcePort","entities","prototype","hasOwnProperty","call","selectPort","selectPortOut","relationName","findSourcesLinkInPort","setRelationLink","setLabels","addLabel","model2","obj","deserializeModel","registerLinkEvent","registerListener","linksUpdated","isCompleteLink","selectionChanged","mirrorPort","getNode","sourceLinkArr","targetPortChanged","ev","toggleFk","setNodeOption","node1","node2","getPosition","modelset","nodes","getNodes","currentNode","sourceLink","updateNode","setZoomLevel","addOrUpdateFieldOption","tables","curCol","tablename","nodeTotal","posX","posY","point","createPorts","targetField","mainField","getTargetPort","targetNode","sourceNode","mainFieldData","mirrorTargetPort","targetFieldData","mirrorSourcePort","mainTable","targetTable","allTable","tbData","tbid","findNodeById","fkData","getFkDataFromField","fieldData","count","tableName","targetPortFromLinkIn","getTargetInPortFromLink","targetPortFromLinkout","nodeToTable","clientX","clientY","deltaY","inputEdit","padding","borderRadius","Appbar","onDelete","onEndEdit","isEdit","setisEdit","textInput","settextInput","onBlur","Typography","borderBottom","styledTable","cell","marginTop","TableEditor","isOpen","diagramctr","onclose","forceUpdate","getNodeData","currentTable","setTable","setrelationName","getOtherTable","otherTable","setotherTable","currentSelectTableId","setcurrentSelectTableId","currentFieldId","setcurrentFieldId","currentField","useMemo","find","t","loadTableFieldSelect","toggleUpdate","settoggleUpdate","currentEdit","setcurrentEdit","typeSelect","settypeSelect","setEditField","getOutIdFromInId","portSelectIn","portSelectOut","linkIn","linkOut","getInIdFromOutId","closeEdit","newtb","handleChange","handleTypeChange","onSelectTableChange","onChangeFieldSelect","targetPortId","sourceField","getNodeById","dir","direactionNode","portInIdtoPortOut","linkModel","getFieldOption","optionName","setFieldOption","idField","fieldIndexof","newfieldOption","removeLinkbyPort","updateFieldOption","Drawer","anchor","updateNodeName","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","row","component","scope","checked","removeFieldbyId","paddingBottom","paddingTop","colSpan","Collapse","timeout","unmountOnExit","Box","flexDirection","TextField","FormControl","Select","displayEmpty","minWidth","portid","portOutId","portIn","portOut","connectRealation","onSelectRelation","AddNewField","newField","SimpleContext","MySqlGenerate","isLastLine","newLineAndTab","getFields","relationData","cmd","getCreateTable","generateRelation","ShareActionType","AuthActionType","ProjectActionType","jsonToProject","Id","_id","ProjectName","projectName","ProjectDescription","projectDescription","ProjectDetail","VisibleStatus","visibleStatus","UserId","user","ShareUrl","projectToJson","projectDetail","shareUrl","ToggleLoading","TOGGLE_LOADING","payload","SetFetchAction","SET_FETCH","jsonToUser","userName","userLastname","userlastname","userEmail","userPassword","SetUser","SET_USER","SetLoginState","SET_LOGIN","SetProject","SET_PROJECT","UpdateProject","UPDATE_PROJECT","NewProject","NEW_PROJECT","DeleteProject","DELETE_PROJECT","ToggleModal","TOGGLE_MODAL","SetProjectSaveType","SET_PROJECT_SAVE_TYPE","initApp","dispatch","a","userUrl","baseUrl","projectUrl","token","get","axios","defaults","headers","common","all","then","spread","userrs","projectrs","projects","project","newProjectAsync","post","status","DialogContent","withStyles","MuiDialogContent","DialogActions","MuiDialogActions","shortcutlist","ShortCutMenu","Dialog","aria-labelledby","DialogTitle","dividers","List","s","ListItem","button","ListItemText","primary","modalPaper","maxWidth","ShareModal","linkUrl","navigator","writeText","toast","success","error","paper","fullWidth","InputProps","endAdornment","InputAdornment","AlertActionType","Editor","AuthReducer","projectSaveType","ProjectReducer","isFetch","darkState","darkMode","palletType","useDispatch","isOnSelectNode","setisOnSelectNode","update","setexportDbModal","Private","initProject","currentProject","setcurrentProject","setsaveData","isShareProject","setisShareProject","setimageModal","setEdit","shortcutModal","setshortcutModal","shareModal","setshareModal","setlinkUrl","darkTheme","createMuiTheme","main","dark","addOnSelectListener","isSelectData","onSelectNode","ToggleEditor","edittype","location","pathname","split","loaduserAndProject","projectstr","projectRs","clonep","saveDataByString","loadLocalProject","isLogger","loadProjectDataApi","newproject","api","modelstr","put","exportPng","filename","htmlToImage","dataUrl","Image","createElement","download","click","catch","saveSerial","modelJson","modelStr","downloadFile","onLoadFile","fileName","setAttribute","encodeURIComponent","body","appendChild","removeChild","exportSelect","codeGen","tbs","getAllTable","getRelationData","export","doZoom","ThemeProvider","updateData","saveProject","menuname","linksplit","newNode","zoomPercent","drawer","flexShrink","toolbar","mixins","drawerPaper","whiteSpace","transitions","create","easing","sharp","duration","enteringScreen","toolbarIcon","alignItems","Sidebar","changePath","alt","ListItemIcon","SetErrorAction","err","SET_ERROR","signIn","login","access_token","register","response","message","paddingRight","appBar","leavingScreen","MainHead","onLogOut","noWrap","ConfrimDialog","onConfrim","aria-describedby","DialogContentText","autoFocus","FileList","isConfrimModal","setisConfrimModal","switchSaveType","projectsStr","to","ListItemAvatar","ListItemSecondaryAction","url","delete","UserFrom","setuserName","setuserEmail","setuserPassword","updateUser","ProjectForm","pid","setprojectId","userId","setProjectName","setProjectDescription","str","projectdata","updateProjectAsync","ExTemplate","appBarSpacer","overflow","Document","addProjectModal","CssBaseline","Copyright","align","Link","Date","getFullYear","ThemeActionType","avatar","form","submit","SignIn","userInfo","setuserInfo","onLogin","loginParam","isEmail","test","noValidate","required","autoComplete","FormControlLabel","control","Checkbox","xs","mt","initialState","isLogin","confrimModal","darkmode","getDefaultDarkMode","textcolor","rootReducer","combineReducers","action","UPDATE_USER","updateindex","TOGGLE_CONFRIM_MODAL","SET_NODE_THEME","alertReducer","HIDE_ERROR","rsStore","createStore","applyMiddleware","thunkMiddleware","NoficationIfError","fn","store","getState","SignUp","setuserLastname","App","autoClose","Backdrop","exact","ReactDOM","render"],"mappings":"wkDAWO,IAAMA,EAAKC,UAAOC,IAAV,KAGK,SAACC,GAAD,OAAQA,EAAEC,OAAS,UAAYD,EAAEE,cAO/C,SAACF,GAAD,OAAOA,EAAEG,SACT,SAACH,GAAD,OAAOA,EAAEG,SAGT,SAACH,GAAD,OAAOA,EAAEG,SACT,SAACH,GAAD,OAAOA,EAAEG,SAOT,SAACH,GAAD,OAAOA,EAAEG,SACT,SAACH,GAAD,OAAOA,EAAEG,SAGT,SAACH,GAAD,OAAOA,EAAEG,SACT,SAACH,GAAD,OAAOA,EAAEG,SAwCFC,GAhCaN,UAAOC,IAAV,KAED,SAACC,GAAD,OAAOA,EAAEE,cAMzB,SAACF,GAAD,OAAOA,EAAEG,SACT,SAACH,GAAD,OAAOA,EAAEG,SAGT,SAACH,GAAD,OAAOA,EAAEG,SACT,SAACH,GAAD,OAAOA,EAAEG,SAOT,SAACH,GAAD,OAAOA,EAAEG,SACT,SAACH,GAAD,OAAOA,EAAEG,SAGT,SAACH,GAAD,OAAOA,EAAEG,SACT,SAACH,GAAD,OAAOA,EAAEG,SAOf,uKAIE,OACC,cAACN,EAAD,CAAIQ,GAAG,YACNJ,OAAQK,KAAKC,MAAMN,OACnBC,WAAYI,KAAKC,MAAML,YAAc,kBACrCC,MAAOG,KAAKC,MAAMJ,OAAS,0BAH5B,SAIEG,KAAKC,MAAMC,eAThB,GAAsCC,c,6LC1DzBC,EAA0C,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,MAAOC,EAAiD,EAAjDA,gBAAkBC,EAA+B,EAA/BA,SAAWC,EAAoB,EAApBA,eAAoB,EAE9EC,mBAA6B,MAFiD,mBAEvGC,EAFuG,KAE7FC,EAF6F,OAIpEF,mBAAS,IAJ2D,mBAIvGG,EAJuG,KAIxFC,EAJwF,KAUxGC,EAAc,SAACC,GACjBJ,EAAY,MACTI,EAAKC,cACJH,EAAiBE,EAAKE,MAGJ,OAAnBT,QAA8CU,IAAnBV,GAE9BA,EAAeO,EAAKhB,GAAKgB,EAAKE,OAIlC,OACI,eAAC,IAAME,SAAP,WAEI,cAACC,EAAA,EAAD,CAAQC,gBAAc,cAAcC,gBAAc,OAAOC,QAnB7C,SAACC,GACjBb,EAAYa,EAAMC,gBAkBkEC,QAAS,cAAC,IAAD,IAAzF,SACwB,KAAlBd,EAAyBN,EAAkBM,IAEjD,cAACe,EAAA,EAAD,CACI5B,GAAIQ,EACJG,SAAUA,EACVkB,aAAW,EACXC,UAAW,EAEXC,KAAMC,QAAQrB,GACdsB,QAASlB,EAPb,SASKT,EAAM4B,KAAI,SAAAlB,GACP,OACI,cAACmB,EAAA,EAAD,CAAUX,QAAS,kBAAIT,EAAYC,IAAnC,SAAoEA,EAAKE,MAA1BV,EAAWQ,EAAKhB,a,6CCzCxEoC,EAhBE,SAAC,GAAD,QAAGC,YAAH,MAAU,GAAV,MAAcvC,aAAd,MAAsB,OAAtB,SACf,sBACEwC,MAAOD,EACPE,OAAQF,EACRG,QAAQ,YACRC,KAAK,OACLC,OAAQ5C,EACR6C,YAAY,IACZC,cAAc,QACdC,eAAe,QARjB,UAUE,0BAAUC,OAAO,oBACjB,0BAAUA,OAAO,yB,wCCefC,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CAEXC,QAAS,CACPC,SAAU,WAEVC,UAAW,iBACXC,gBAAiB,QACjBC,OAAO,aAAD,OAAeN,EAAMO,QAAQC,SACnCC,eAAgB,WAChBC,MAAO,GAGTC,QAAS,CACPP,UAAW,kBAGbQ,KAAM,CACJN,OAAO,aAAD,OAAeN,EAAMO,QAAQC,SACnC3D,MAAOmD,EAAMO,QAAQtC,KAAK4C,UAC1B,QAAS,CACPC,OAAQd,EAAMe,QAAQ,MAExB,OAAQ,CACND,OAAQd,EAAMe,QAAQ,EAAG,WAyB3BC,GAAiB,CAAC,CACtBjE,GAAI,WACJkB,KAAM,OACND,cAAc,GAEhB,CACEjB,GAAI,UACJkB,KAAM,MACND,cAAc,GAEhB,CACEjB,GAAI,UACJkB,KAAM,MACND,cAAc,GAEhB,CACEjB,GAAI,YACJkB,KAAM,aACND,cAAc,IAGHiD,GAA8C,SAAC,GACmB,IADlBC,EACiB,EADjBA,mBAAmBC,EACF,EADEA,OAASC,EACX,EADWA,OAASzE,EACpB,EADoBA,OAAQ0E,EAC5B,EAD4BA,aACxGC,GAA4E,EAD0CC,SAC1C,EAA5ED,UAAUE,EAAkE,EAAlEA,UAAWC,EAAuD,EAAvDA,UAAWC,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAAY,EAE5CrE,oBAAS,GAFmC,mBAErEsE,EAFqE,KAE3DC,EAF2D,KAItEC,EAAUnC,KAehB,OAEE,qBAAKoC,MAAO,CAAE/B,SAAU,WAAYd,MAAO,OAAQ8C,OAAQ,IAA3D,SACGJ,EACE,eAACK,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWL,EAAQrB,KAAMsB,MAAO,CAAC7B,gBAhB9C1D,EAAU,UAAY,SAgBzB,UAEG,cAAC4F,EAAA,EAAD,CAAYnD,KAAK,QAAQb,QAASmD,EAAlC,SACE,cAAC,IAAD,MAIF,cAACc,EAAA,EAAD,CAASC,YAAY,WAAWC,UAAQ,IACxC,cAACH,EAAA,EAAD,CAAYnD,KAAK,QAAQvC,MAAM,UAAU0B,QAAS6C,EAAlD,SACE,cAAC,IAAD,MAGF,cAACmB,EAAA,EAAD,CAAYnD,KAAK,QAAQb,QAAS4C,EAAlC,SACE,cAAC,IAAD,MAGF,cAACqB,EAAA,EAAD,CAASC,YAAY,WAAWC,UAAQ,IACxC,cAAC,EAAD,CAAYrF,MAAO2D,GAAW1D,gBAAgB,OAAOC,SAAS,aAAaC,eA9BrF,SAA0BT,EAAYkB,QAC1BC,IAAPnB,GAIH4F,QAAQC,IAAI7F,GACZmE,EAAmBjD,IAJjB0E,QAAQC,IAAI,eA8BN,cAACL,EAAA,EAAD,CAAYnD,KAAK,QAAQb,QAAS+C,EAAlC,SACE,cAAC,IAAD,MAGF,cAACiB,EAAA,EAAD,CAAYnD,KAAK,QAAQb,QAASiD,EAAlC,SACE,cAAC,IAAD,MAGF,cAACe,EAAA,EAAD,CAAYnD,KAAK,QAAQb,QAASkD,EAAlC,SACE,cAAC,IAAD,MAGF,cAACe,EAAA,EAAD,CAASC,YAAY,WAAWC,UAAQ,IAExC,cAACH,EAAA,EAAD,CAAYnD,KAAK,QAAQb,QAASoD,EAAQkB,UAAWxB,EAArD,SACE,cAAC,KAAD,CAAwBa,MAAO,CAACY,SAAS,QAE3C,cAACP,EAAA,EAAD,CAAYnD,KAAK,QAAQb,QAASqD,EAAOiB,UAAWxB,EAApD,SACE,cAAC,IAAD,CAAkBa,MAAO,CAACY,SAAS,QAGrC,cAACP,EAAA,EAAD,CAAYnD,KAAK,QAAQb,QAASsD,EAAOgB,UAAWxB,EAApD,SACE,cAAC,KAAD,CAA2Ba,MAAO,CAACY,SAAS,QAG9C,cAACP,EAAA,EAAD,CAAYnD,KAAK,QAAQb,QAASuD,EAAOe,UAAWxB,EAApD,SACE,cAAC,IAAD,CAAYa,MAAO,CAACY,SAAS,QAG/B,sBAAMZ,MAAO,CAAEa,QAAS,OAAQC,SAAU,KAE1C,cAACT,EAAA,EAAD,CAAYnD,KAAK,QAAQb,QAAS,kBAAMyD,GAAY,IAAQM,UAAWL,EAAQtB,QAA/E,SACE,cAAC,EAAD,CAASvB,KAAM,UAQlB,cAACmD,EAAA,EAAD,CAAYnD,KAAK,QAAQb,QAAS,kBAAMyD,GAAY,IAAOM,UAAWL,EAAQ/B,QAA9E,SACH,cAAC,EAAD,CAASd,KAAM,U,sJCpKV6D,GAA0C,SAAC,GAAyD,IAAxD1E,EAAuD,EAAvDA,QAAQ2E,EAA+C,EAA/CA,SAAW7F,EAAoC,EAApCA,MAAQE,EAA4B,EAA5BA,SAAW4F,EAAiB,EAAjBA,YAAiB,EAEtFhG,IAAMM,UAAS,GAFuE,mBAEvGqB,EAFuG,KAEjGsE,EAFiG,KAGxGC,EAAYlG,IAAMmG,OAA0B,MAY5CxF,EAAc,SAACU,EAAuCzB,GACtDsG,EAAUE,SAAWF,EAAUE,QAAQC,SAAShF,EAAMiF,UAI1DL,GAAQ,GACRD,EAAYpG,KAGZ,OACI,eAAC,IAAMoB,SAAP,WACA,sBACE+D,MAAO,CAACrF,MAAQ,QAAU6G,cAAgB,aAAeC,YAAc,GAAKC,OAAQ,WACpFC,IAAKR,EACLhF,gBAAeS,EAAO,sBAAmBZ,EACzCI,gBAAc,OACdC,QA1Ba,WACnB,GAAGlB,EAAMyG,OAAS,EAChBV,GAAQ,SAACW,GAAD,OAAeA,SACpB,CACH,QAAe7F,IAAZK,EAAuB,OAC1BA,MAgBE,SAOGhB,IAEH,cAACyG,GAAA,EAAD,CAAQ9B,MAAO,CAACC,OAAO,KAAOrD,KAAMA,EAAMpB,SAAU2F,EAAUE,QAASU,UAAM/F,EAAWgG,YAAU,EAACC,eAAa,EAAhH,SACG,gBAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,UAApB,OACC,cAACC,GAAA,EAAD,6BACMF,GADN,IAEElC,MAAO,CAAEqC,gBAA+B,WAAdF,EAAyB,aAAe,iBAFpE,SAIE,cAACG,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAmBC,YAAa,SAACC,GAAD,OAAK7G,EAAY6G,EAAE,KAAnD,SACE,cAACC,GAAA,EAAD,CAAUC,cAAe/F,EAAM/B,GAAG,iBAAlC,SACCM,EAAM4B,KAAI,SAAAlB,GACT,OACE,gCAEIA,EAAK+G,OAAW,cAACtC,EAAA,EAAD,IAAuB,GAEzC,cAACtD,EAAA,EAAD,CAAU2D,UAAWK,EAAU3E,QAAS,SAACoG,GAAD,OAAK7G,EAAY6G,EAAE5G,EAAKhB,KAAhE,SAA+FgB,EAAKE,MAA1BV,EAAWQ,EAAKhB,0BCrErGgI,GAAiB,CAAC,CAC3BhI,GAAK,WACLkB,KAAO,QAEX,CACIlB,GAAK,aACLkB,KAAO,UAEX,CACIlB,GAAK,UACLkB,KAAO,eAEX,CACIlB,GAAK,gBACLkB,KAAO,aAEX,CACIlB,GAAK,WACLkB,KAAO,QAEX,CACIlB,GAAK,YACLkB,KAAO,UAGE+G,GAAoB,CAAC,CAC9BjI,GAAK,SACLkB,KAAO,YAEX,CACIlB,GAAK,UACLkB,KAAO,aAGX,CACIlB,GAAK,WACLkB,KAAO,gBACP6G,QAAS,GAEb,CACI/H,GAAK,SACLkB,KAAO,aAEX,CACIlB,GAAK,eACLkB,KAAO,cA8BEgH,GAAkB,CAAC,CAC5BlI,GAAK,YACLkB,KAAO,SAEX,CACIlB,GAAK,WACLkB,KAAO,SAGEiH,GAAiB,CAAC,CAC3BnI,GAAK,YACLkB,KAAO,SAEX,CACIlB,GAAK,eACLkB,KAAO,gBAGX,CACIlB,GAAK,cACLkB,KAAO,cAGX,CACIlB,GAAK,YACLkB,KAAO,eAIEkH,GAAiB,CAC9B,CACIpI,GAAK,WACLkB,KAAO,QAEX,CACIlB,GAAK,UACLkB,KAAO,OAEX,CACIlB,GAAK,aACLkB,KAAO,UAEX,CACIlB,GAAK,gBACLkB,KAAO,aAEX,CACIlB,GAAK,WACLkB,KAAO,QAEX,CACIlB,GAAK,WACLkB,KAAO,SC/HLmH,GAAW,CACb,eACA,eAYJ,SAASC,GAAsBC,GAC3BF,GAASG,SAAQ,SAAAC,GACDF,EAAQG,QAAQD,M,ICqC/BE,G,yCA1BC5F,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXW,KAAM,CACJoC,SAAU,GAGZ2C,WAAa,CACX/B,OAAS,UACTvE,MAAQ,GACRC,OAAS,GACTe,gBAAkB,SAClBsD,YAAc,IAEhBiC,MAAO,CACL5C,SAAU,GAGZ6C,KAAO,CACHlC,YAAc,IAElBmC,WAAY,CACVnC,YAAa3D,EAAMe,QAAQ,U,SAK5B2E,K,wBAAAA,E,yBAAAA,Q,KAcE,IAAMK,GAAiD,SAAC,GAAoE,IAAnEpJ,EAAkE,EAAlEA,OAAOqJ,EAA2D,EAA3DA,WAAWC,EAAgD,EAAhDA,QAAQC,EAAwC,EAAxCA,SAAWC,EAA6B,EAA7BA,OAAQ3I,EAAqB,EAArBA,eACrGyE,EAAUnC,KAEVsG,EAAcC,cAAdD,UAEAE,EAAUC,cAMVC,GAJWC,cAIIC,cAAY,SAACC,GAAD,OAAwBA,EAAMC,aAAaC,cAM5E,SAASC,IACT,IAAIC,EAAOC,SAASC,eAAe,cACnC,GAAIF,GAAQC,SAASE,YAAa,CACjC,IAAIC,EAAMH,SAASE,YAAY,eAC/BC,EAAIC,UAAU,SAAS,GAAM,GAC7BL,EAAKM,cAAcF,IA6GpB,OAtHAG,qBAAU,cAEP,CAAC9J,IAqHF,cAAC+J,GAAA,EAAD,CAAQpH,SAAS,SAAStD,MAAQF,EAAU,YAAc,UAA1D,SACA,eAAC,KAAD,CAAS6K,QAAQ,QAAjB,UACA,cAACC,GAAA,EAAD,CAAQD,QAAQ,UAAUE,IAAI,kBAAkBpF,UAAWL,EAAQ0D,aAEjE,cAAC,GAAD,CAAYzC,UAAU,EAAM7F,MAAO0H,GAAUxH,SAAS,OAAO4F,YA5FjE,SAAoBpG,GAClB,OAAQA,GACN,IAAK,aACH+J,IACA,MACF,IAAK,WACHR,EAAQqB,KAAK,sBACb,MACF,IAAK,UACHrB,EAAQqB,KAAK,wBACb,MACF,IAAK,gBACHrB,EAAQqB,KAAK,yBAA2BvB,GACxC,MACF,IAAK,aAEH,MACF,IAAK,aAGL,IAAK,YACHJ,EAAWjJ,OAyEb,cAAC,GAAD,CAAYmG,SAAU1F,EAAgBH,MAAO8H,GAAU5H,SAAS,OAAO4F,YAjE3E,SAAoBpG,GAClB,OAAQA,GACN,IAAK,WACHkJ,EAAQ2B,eACR,MACF,IAAK,UACH3B,EAAQ4B,cACR,MACF,IAAK,aACH5B,EAAQ6B,iBACR,MACF,IAAK,gBACH7B,EAAQ8B,oBACR,MACF,IAAK,WAGL,IAAK,WACHjB,QAiDF,cAAC,GAAD,CAAY5D,UAAU,EAAM7F,MAAO2H,GAAYzH,SAAS,SAAS4F,YApGrE,SAAsBpG,GACpBmJ,EAASnJ,MAqGP,cAAC,GAAD,CAAYmG,UAAU,EAAM7F,MAAO4H,GAAW1H,SAAS,QAAQ4F,YA9BnE,SAAuB0C,GAErB,GAAY,KAATA,EAAH,CAEA,IAAImC,EAAsB,cAATnC,EAAwB,QAAU,OAEnDoC,KAAQC,IAAI,WAAaF,GAEzBG,MAAM,0CAwBJ,cAAC,GAAD,CAAYjF,UAAU,EAAM7F,MAAO6H,GAAU3H,SAAS,OAAO4F,YA9CjE,SAAoB0C,GAClB,GAAY,iBAATA,EAAH,EAyBF,SAAkBuC,GAChB,IAAIC,EAAMC,OAAOxJ,KAAKsJ,EAAU,UAChC,GAAW,OAARC,EAAc,OACjBA,EAAIE,QAlBJC,CANmB,CACjB,UAAc,oCACd,YAAgB,gDAChB,UAAc,iDAEK3C,SARnBG,EAAWH,MA+CX,sBAAMvD,UAAWL,EAAQ2D,QAEzB,uBAAO6C,KAAK,OAAO1L,GAAG,aAAamF,MAAO,CAAEa,QAAS,QAAU2F,SA3HnE,SAAoB/D,GACpB,IAAIgE,EAAQhE,EAAElB,OACVmF,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAACC,GAChB,IAAI9K,EAAO2K,EAAOI,OACH,OAAT/K,IACDA,EAAO,ID9FE,SAACqH,GACd,IAAK,IAAI2D,EAAI,EAAGA,EAAI3D,EAAQxB,OAAQmF,IAEhC5D,GADYC,EAAQ4D,OAAOD,EAAI3D,EAAQxB,OAAO,IC8FhDqF,CAASlL,GACZ0G,EAAElB,OAAO2F,MAAQ,MAElBR,EAAOS,WAAWV,EAAMW,MAAM,OAiH1B,mBAAG7F,OAAO,SAAS8F,KAAK,sCAAxB,SACA,cAACnL,EAAA,EAAD,CAAQoJ,QAAQ,WAAWtF,MAAO,CAACsH,WAAW,IAAK3M,MAAM,UACzD4M,UAAW,cAAC,KAAD,IADX,wBAMM,cAACrL,EAAA,EAAD,CAAQoJ,QAAQ,WAAWtF,MAAO,CAACsH,WAAW,IAAK3M,MAAM,UACzD4M,UAAYjD,EAAe,cAACkD,GAAA,EAAD,CAAkBxH,MAAO,CAAC7C,MAAM,GAAGC,OAAO,IACrEzC,MAAO,YAAgB,cAAC,KAAD,IAAe0B,QAAS4H,EAF/C,kBAGM,cAAC5D,EAAA,EAAD,CACJoH,KAAK,MACLC,aAAW,0BACX/M,MAAM,UAHF,SAKJ,cAAC,KAAD,Y,SCrNCgN,GAhBF,SAAC5M,GAAD,OACX,sBACEoC,MAAO,GACPC,OAAQ,GACRC,QAAQ,YACRC,KAAK,OACLC,OAAQ,OACRC,YAAY,IANd,UAQE,sBAAMoK,EAAE,IAAIC,EAAE,IAAI1K,MAAM,KAAKC,OAAO,KAAK0K,GAAG,IAAIC,GAAG,MACnD,sBAAMC,EAAE,gE,UCIGC,GAdH,SAAClN,GAAD,OACV,eAACmN,GAAA,EAAD,2BAAS7K,QAAQ,aAAgBtC,GAAjC,cAEF,wBAAQoN,GAAG,IAAIC,GAAG,IAAIC,EAAE,MACpB,wBAAQF,GAAG,IAAIC,GAAG,KAAKC,EAAE,MACzB,sBAAMC,GAAG,KAAKC,GAAG,IAAIC,GAAG,OAAOC,GAAG,UAClC,sBAAMH,GAAG,QAAQC,GAAG,QAAQC,GAAG,KAAKC,GAAG,OACvC,sBAAMH,GAAG,OAAOC,GAAG,OAAOC,GAAG,KAAKC,GAAG,YCQ1BC,GAhBA,SAAC,GAAD,QAAGxL,YAAH,MAAU,GAAV,MAAcvC,aAAd,MAAsB,OAAtB,SACb,sBACEwC,MAAOD,EACPE,OAAQF,EACRG,QAAQ,YACRC,KAAK,OACLC,OAAQ5C,EACR6C,YAAY,IANd,UAQE,0BAAUG,OAAO,iBACjB,sBAAMqK,EAAE,mFACR,sBAAMM,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OACjC,sBAAMH,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,WCatBE,GAzBG,SAAC,GAAD,QAAGzL,YAAH,MAAU,GAAV,MAAcvC,aAAd,MAAsB,OAAtB,SAChB,qBACEwC,MAAOD,EACPE,OAAgB,GAAPF,EAAa,GACtBG,QAAQ,YACRC,KAAK,OACLC,OAAO,OACPC,YAAY,IANd,SAQE,mBAAGU,UAAU,uCAAb,SACE,mBAAGA,UAAU,qCAAb,SACE,mBAAGA,UAAU,mCAAb,SACE,oBAAGA,UAAU,gCAAb,UACE,yBAASP,OAAO,wBAChB,sBACEqK,EAAE,2rBACF1K,KAAM3C,gBCmBLiO,GAnCD,SAAC,GAAD,QAAG1L,YAAH,MAAU,GAAV,MAAcvC,aAAd,MAAsB,OAAtB,SACZ,qBACEwC,MAAOD,EACPE,OAAQF,EACRI,KAAM3C,EACN0C,QAAQ,sBAJV,SAME,4BACE,4BACE,8BACE,sBACE2K,EAAE,y+BAUJ,sBACEA,EAAE,+HAGJ,sBACEA,EAAE,yICpBCa,GANF,SAAC,GAAD,QAAG3L,YAAH,MAAU,GAAV,MAAcvC,aAAd,MAAsB,OAAtB,SACX,qBAAKwC,MAAOD,EAAME,OAAQF,EAAMG,QAAQ,cAAcC,KAAM3C,EAA5D,SACE,sBAAMqN,EAAE,4kBCYGc,GAdE,SAAC,GAAD,QAAG5L,YAAH,MAAU,GAAV,MAAcvC,aAAd,MAAsB,OAAtB,SACf,sBACEwC,MAAOD,EACPE,OAAQF,EACRG,QAAQ,YACRC,KAAK,OACLC,OAAQ5C,EACR6C,YAAY,IANd,UAQE,wBAAQ2K,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAC1B,sBAAML,EAAE,uuBCJGe,GANF,SAAC,GAAD,QAAG7L,YAAH,MAAU,GAAV,MAAcvC,aAAd,MAAsB,OAAtB,SACX,qBAAKwC,MAAOD,EAAME,OAAQF,EAAMG,QAAQ,cAAcC,KAAM3C,EAA5D,SACE,sBAAMqN,EAAE,gsBCcGgB,GAhBA,SAAC,GAAD,QAAG9L,YAAH,MAAU,GAAV,MAAcvC,aAAd,MAAsB,OAAtB,SACb,sBACEwC,MAAOD,EACPE,OAAQF,EACRG,QAAQ,YACRC,KAAK,OACLC,OAAQ5C,EACR6C,YAAY,IANd,UAQE,wBAAQ2K,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAC1B,sBAAMC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QAAQC,GAAG,UACpC,sBAAMH,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,OAChC,sBAAMH,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,WCGrBQ,GAfC,SAAC,GAAD,QAAG/L,YAAH,MAAU,GAAV,MAAcvC,aAAd,MAAsB,OAAtB,SACd,sBACEwC,MAAOD,EACPE,OAAQF,EACRG,QAAQ,YACRC,KAAK,OACLC,OAAQ5C,EACR6C,YAAY,IANd,UAQE,wBAAQ2K,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAC1B,sBAAMC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QAAQC,GAAG,UACpC,sBAAMH,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,W,qXCTpC,IAAMS,GAAY5O,UAAO6O,KAAV,MAGH,SAAApO,GAAK,OAAIA,EAAMmC,QACZ,SAAAnC,GAAK,OAAIA,EAAMmC,KAAO,KACrB,SAAAnC,GAAK,OAAIA,EAAMmC,KAAO,KACvB,SAAAnC,GAAK,OAAIA,EAAMmC,KAAO,KAMX,SAAAnC,GAAK,OAAIA,EAAMmC,KAAO,KAOjCkM,GAJH,SAAC,GAAD,IAAGpO,EAAH,EAAGA,SAAH,IAAakC,YAAb,MAAoB,GAApB,SACV,cAAC,GAAD,CAAWA,KAAMA,EAAjB,SAAwBlC,K,2KClB1B,IAQeqO,GARkB/O,UAAOC,IAAV,M,0JCA9B,IAOe+O,GAPsBhP,UAAOC,IAAV,MCmBnBgP,GAA8D,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAWC,EAAb,EAAaA,UACtFC,EADyE,EACzEA,WAAaC,EAD4D,EAC5DA,cAAgBC,EAD4C,EAC5CA,QAAUC,EADkC,EAClCA,OAASC,EADyB,EACzBA,QAAUC,EADe,EACfA,SAAWC,EADI,EACJA,SADI,OAE3E,eAAC,QAAD,CAAMnP,GAAG,YAAT,UACE,eAAC,QAAD,CAAMwB,QAASsN,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,YAKE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,sBAIJ,eAAC,QAAD,CAAMtN,QAASuN,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,MAKE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,sBAIJ,eAAC,QAAD,CAAMvN,QAASmN,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,OAKE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,sBAIJ,eAAC,QAAD,CAAMnN,QAASoN,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,QAKE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,sBAIJ,eAAC,QAAD,CAAMpN,QAASqN,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,SAKE,cAAC,GAAD,UACE,cAAC,GAAD,0BAIJ,cAAC,aAAD,IAEA,eAAC,QAAD,CAAMrN,QAASwN,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,aAOA,eAAC,QAAD,CAAMxN,QAASyN,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,cAOA,cAAC,aAAD,IAEA,eAAC,QAAD,CAAMzN,QAAS0N,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,OAKE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,sBAIJ,eAAC,QAAD,CAAM1N,QAAS2N,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,OAKE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,oBACA,cAAC,GAAD,sBAIJ,cAAC,aAAD,IAEA,eAAC,QAAD,WAGE,cAAC,GAAD,UACE,cAAC,GAAD,MAJJ,yBAOE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,0BCtHKC,GAA0D,SAAC,GAAD,IAAEJ,EAAF,EAAEA,OAASC,EAAX,EAAWA,QAChFL,EADqE,EACrEA,UAAYO,EADyD,EACzDA,SAAWD,EAD8C,EAC9CA,SAD8C,OAErE,eAAC,QAAD,CAAMlP,GAAG,UAAT,UACE,eAAC,QAAD,CAAMwB,QAASoN,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,QAKE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,sBAIJ,cAAC,aAAD,IAEA,eAAC,QAAD,CAAMpN,QAASwN,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,aAMA,eAAC,QAAD,CAAMxN,QAASyN,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,cAOA,cAAC,aAAD,IAEA,eAAC,QAAD,CAAMzN,QAAS0N,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,OAKE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,sBAIJ,eAAC,QAAD,CAAM1N,QAAS2N,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,OAKE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,oBACA,cAAC,GAAD,0BCpDKE,I,OAAsD,SAAC,GACS,IADRH,EACO,EADPA,SAAWC,EACJ,EADIA,SAAUR,EACd,EADcA,SACxFE,EAA0E,EAA1EA,WAAaC,EAA6D,EAA7DA,cAAgBC,EAA6C,EAA7CA,QAAUH,EAAmC,EAAnCA,UAAYI,EAAuB,EAAvBA,OAASC,EAAc,EAAdA,QAE5D,OACE,qCACA,cAAC,GAAD,CAAqBL,UAAWA,EAAWI,OAAQA,EAAQC,QAASA,EAASC,SAAUA,EAAUC,SAAUA,IAC3G,cAAC,GAAD,CAAuBR,SAAUA,EAAUC,UAAWA,EAAWM,SAAUA,EAAUC,SAAUA,EAC/FN,WAAYA,EAAYC,cAAeA,EAAeC,QAASA,EAASC,OAAQA,EAAQC,QAASA,SCVhFK,G,kDACnB,WAAYC,GAAgC,IAAD,8BACzC,cAAM,CACJ7D,KAAM8D,YAAUC,SAChBC,KAAM,YAAgB,IAAbjO,EAAY,EAAZA,MACPmE,QAAQC,IAAI8J,KAAKC,UAAUnO,IAEvB,EAAKoO,OAAOC,WAAWC,YAEvB,EAAKC,aAAavO,KACpBA,EAAMwO,iBACN,EAAKC,oBAUbA,aAAe,WACbtK,QAAQC,IAAI,UACK,EAAKgK,OACnBC,WACAK,sBACAC,QAAO,SAAAC,GAAK,OAAKA,EAAMN,cAIjBvH,SAAQ,SAAA6H,GAAK,OAAIA,EAAMC,YAEhC,EAAKT,OAAOU,iBA/B6B,E,yDAgB9B9O,GACX,OAAOA,EAAM+O,SAA0B,WAAf/O,EAAMgP,S,GAlBQC,U,kECL7BC,GAAb,4MAGWC,WAAsB,EAHjC,wDAKcC,GACNzF,MAAM,aACNnL,KAAK6Q,OAASD,MAPtB,GAAqCE,qBCgCxBC,GAAb,gLAEE,OAAO,IAAIL,OAFb,GAAqCM,qB,UCAxBC,GAAb,kDAOC,aAAgD,IAAD,EAAnCC,EAAmC,uDAApB,GAAIrR,EAAgB,kEACvB,kBAAZqR,IACVA,EAAU,CACTC,KAAMD,EACNrR,MAAOA,KAGT,4BACC4L,KAAM,UACN0F,KAAM,WACNtR,MAAO,kBACJqR,KAjBKE,aAMqC,IALrCC,cAKqC,IAJrCC,kBAIqC,EAa9C,EAAKD,SAAW,GAChB,EAAKD,QAAU,GACf,EAAKE,aAAe,GAf0B,EAPhD,8DAyB+B,OAAO,IAzBtC,8BA2BSC,EAAiBC,GAExB7L,QAAQC,IAAI,iBAAmB5F,KAAKyR,SACpCD,EAAMJ,QAAU,GAChBI,EAAMH,SAAW,GAEjB,iEAAcE,EAAaC,GAE3B,IADA,IACSvF,EAAI,EAAGA,EAAIuF,EAAMJ,QAAQtK,OAAQmF,IACzCuF,EAAMF,aAAarF,GAAGyF,OAASF,EAAMJ,QAAQnF,GAAGwF,UApCnD,sCAwCiB1R,GAEf,IAAI4R,EAAU3R,KAAKoR,QAAQQ,WAAU,SAAAlS,GAAC,OAAEA,EAAE+R,SAAW1R,KAEjD8R,EAAa7R,KAAKsR,aAAaM,WAAU,SAAAE,GAAC,OAAEA,EAAEJ,QAAU3R,MAE5C,IAAb4R,KAEgB,IAAhBE,GACF7R,KAAKsR,aAAaS,OAAOF,EAAY,GAGtC7R,KAAKgS,YAAYL,MApDnB,iCAuDYM,GACV,oEAAiBA,GAEbA,EAAKC,aAAaC,GACrBnS,KAAKoR,QAAQW,OAAO/R,KAAKoR,QAAQ3I,QAAQwJ,GAAO,GAEhDjS,KAAKqR,SAASU,OAAO/R,KAAKqR,SAAS5I,QAAQwJ,GAAO,KA7DrD,iCAiEYG,GAIV,IAFA,IAAIC,EAAYD,EAAGE,OACfA,EAAStS,KAAKuS,cACTtG,EAAI,EAAGA,EAAIoG,EAAUvL,OAAQmF,IAClCqG,EAAOrG,GAAGuG,YAAcH,EAAUpG,GAAGuG,YACvCxS,KAAKoR,QAAQnF,GAAGiG,aAAaO,MAAQJ,EAAUpG,GAAGuG,WAEhDF,EAAOrG,GAAGyG,YAAcL,EAAUpG,GAAGyG,YACvC1S,KAAKqR,SAASpF,GAAGiG,aAAaO,MAAQJ,EAAUpG,GAAGyG,aA1EvD,+BAiFUC,GAER,IAAIC,EAAS5S,KAAK6S,UAAUF,EAAMH,WAC9BM,EAAU9S,KAAK+S,WAAWJ,EAAMD,WAEhCM,EAAoB,CACvBtB,OAASkB,EAAOnB,QAChBwB,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,KAAO,GACPC,QAAU,IAKX,OAFArT,KAAKsR,aAAa3G,KAAKqI,GAEhB,CAACJ,EAASE,KAjGnB,kCAoGa7G,GAEXjM,KAAKsT,WAAWtT,KAAKoR,QAAQnF,IAC7BjM,KAAKsT,WAAWtT,KAAKqR,SAASpF,MAvGhC,oCAgHEjM,KAAKuT,SAJe,CACnBf,UAAY,OACZE,UAAY,UA9Gf,6CAoHwBC,GACtB,IAAId,EAAa7R,KAAKsR,aAAaM,WAAU,SAAAE,GAAC,OAAEA,EAAEJ,SAAWiB,EAAMa,QACnE,IAAmB,IAAhB3B,QAEsB3Q,IAAtByR,EAAMc,YAAT,CACAzT,KAAKsR,aAAaO,GAAcc,EAAMc,YACtC9N,QAAQC,IAAI+M,EAAMc,aAGlB,IAAIA,EAAcd,EAAMc,YACxB,QAAkBvS,GAAfuS,OAEsCvS,IAArBuS,EAAYL,MAA2BK,EAAYL,UAC3BlS,IAAxBuS,EAAYJ,SAA8BI,EAAYJ,aACvCnS,IAAfyR,EAAMa,MAA2Bb,EAAMa,QAlI7D,qCAuIgBE,EAA+BC,EAA+BC,GAE5EjO,QAAQC,IAAI,cAAgB+N,EAAWzB,aAAaO,MAAQ,gBAAkBiB,EAAWxB,aAAaO,OAEtG,IAAIoB,EAAQH,EAAWG,KAAKF,GAI5B,OAFAD,EAAWI,iBACXH,EAAWG,iBACJD,IA/IT,oCA0JE,IAPA,IAAIE,EAAU/T,KAAKoR,QAEf4C,GADWhU,KAAKqR,SACD,IAKVpF,EAAI,EAAGA,EAAI8H,EAAQjN,OAAQmF,IAAK,CAGxC,IAAI6F,EAAI9R,KAAKiU,SAAShI,GAEtB+H,EAAGrJ,KAAKmH,GAET,OAAOkC,IAjKT,+BAoKUE,GAER,IAAIvB,EAAQ3S,KAAKoR,QAAQ8C,GAAOhC,aAAaO,MACzChH,EAAOzL,KAAKqR,SAAS6C,GAAOhC,aAAaO,MACzC1S,EAAKC,KAAKoR,QAAQ8C,GAAOzC,QAGzB0C,EAAmBnU,KAAKsR,aAAaM,WAAU,SAAAE,GAAC,OAAEA,EAAEJ,SAAW3R,KAInE,IAAyB,IAAtBoU,EAAwB,CAQ1B,MAPgB,CACfX,KAAO,GACRY,MAAQ,GACR5B,UAAY,GACZE,UAAY,IAMb,IAAIe,EAAczT,KAAKsR,aAAa6C,GAcpC,YAXajT,IAAVyR,IAAqBA,EAAQ,SACpBzR,IAATuK,IAAoBA,EAAO,IAEb,CAChB+H,KAAOxT,KAAKoR,QAAQ8C,GAAOzC,QAC3B2C,MAAQpU,KAAKqR,SAAS6C,GAAOzC,QAC7Be,UAAYG,EACZD,UAAYjH,EACZgI,YAAcA,KArMjB,8BA2MoCxB,GAYlC,OAXA,iEAAcA,GAEVA,EAAKC,aAAaC,IACe,IAAhCnS,KAAKoR,QAAQ3I,QAAQwJ,IACxBjS,KAAKoR,QAAQzG,KAAKsH,IAGkB,IAAjCjS,KAAKqR,SAAS5I,QAAQwJ,IACzBjS,KAAKqR,SAAS1G,KAAKsH,GAGdA,IAvNT,iCA0NYA,GACV,IACIiC,GADUjC,EAAKC,aAAaC,GAAMnS,KAAKqU,aAAerU,KAAKsU,eAC5C1C,WAAU,SAAAlS,GAAC,OAAEA,EAAE+R,UAAYQ,EAAKR,WAEnD,GADA9L,QAAQC,IAAIsO,IACE,IAAXA,EACH,OAAQjC,EAAKC,aAAaC,GAAMnS,KAAKsU,cAAcJ,GAASlU,KAAKqU,aAAaH,KA/NhF,wCAkOmBnU,GACjB,IAAMmU,EAASlU,KAAKqU,aAAazC,WAAU,SAAAlS,GAAC,OAAEA,EAAE+R,UAAY1R,KAE5D,OAAOC,KAAKuU,kBAAkBL,KArOhC,uCAwOkBjI,GAChB,OAAOjM,KAAKoR,QAAQnF,KAzOtB,wCA4OmBA,GACjB,OAAOjM,KAAKqR,SAASpF,KA7OvB,oCAiPelM,GAEb,IACIyU,EADOxU,KAAKyU,cAAc1U,GACdmS,aAAaC,GAE7B,QAAYjR,IAATsT,EAAH,CAEA,IAAIN,GAAS,EAEb,GAAIM,IAEW,KADdN,EAAQlU,KAAKqR,SAASO,WAAU,SAAAlS,GAAC,OAAEA,EAAE+R,UAAY1R,MADlD,CAKA,IAAIyT,EAAQgB,EAAQzU,EAAKC,KAAK0U,iBAAiBR,GAAOzC,QAElDI,EAAa7R,KAAKsR,aAAaM,WAAU,SAAAE,GAAC,OAAEA,EAAEJ,SAAW8B,MAE1C,IAAhB3B,IACH7R,KAAKsR,aAAaO,GAAYsB,IAAK,OApQrC,gCAwQWV,GAA+C,IAAhCkC,IAA+B,yDACnDC,EAAMC,eACJnV,EAAI,IAAIqR,GAAgB,CAC7BoB,IAAI,EACJhB,KAAMyD,EACNnC,MAAOA,EACPqC,UAAWC,sBAAmBC,OAK/B,OAHKL,GACJ3U,KAAKoR,QAAQW,OAAO,EAAG,EAAGrS,GAEpBM,KAAKiV,QAAQvV,KAnRtB,iCAsRY+S,GAA+C,IAAhCkC,IAA+B,yDACpDC,EAAMC,eACJnV,EAAI,IAAIqR,GAAgB,CAC7BoB,IAAI,EACJhB,KAAMyD,EACNnC,MAAOA,EACPqC,UAAWC,sBAAmBG,QAK/B,OAHKP,GACJ3U,KAAKqR,SAASU,OAAO,EAAG,EAAGrS,GAErBM,KAAKiV,QAAQvV,KAjStB,uCAoSkBK,GAChB,IAAImU,EAASlU,KAAKqU,aAAazC,WAAU,SAAAlS,GAAC,OAAEA,EAAE+R,UAAY1R,KAC1D,OAAc,IAAXmU,EAAqB,GACjBlU,KAAKsU,cAAcJ,GAAOzC,UAvSnC,uCA0SkB1R,GAChB,IAAImU,EAASlU,KAAKsU,cAAc1C,WAAU,SAAAlS,GAAC,OAAEA,EAAE+R,UAAY1R,KAC3D,OAAc,IAAXmU,EAAqB,GACjBlU,KAAKqU,aAAaH,GAAOzC,UA7SlC,kCAmTajQ,GAAgC,IAAD,OAC1C,qEAAkBA,GAElBxB,KAAKkR,QAAQC,KAAO3P,EAAM2T,KAAKhE,KAC/BnR,KAAKkR,QAAQrR,MAAQ2B,EAAM2T,KAAKtV,MAChCG,KAAKsR,aAAe9P,EAAM2T,KAAK7C,OAE/B3M,QAAQC,IAAI5F,KAAKsR,cACjBtR,KAAKoR,QAAUgE,OAAM5T,EAAM2T,KAAKE,cAAc,SAACtV,GAC9C,OAAO,EAAK0U,cAAc1U,MAE3BC,KAAKqR,SAAW+D,OAAM5T,EAAM2T,KAAKG,eAAe,SAACvV,GAChD,OAAO,EAAK0U,cAAc1U,QA/T7B,kCAwUE,IAJiB,IAAD,OAEZuS,EAAS,GAFG,WAIPrG,GAER,IAAIkI,EAAmB,EAAK7C,aAAaM,WAAU,SAAAE,GAAC,OAAEA,EAAEJ,SAAW,EAAKN,QAAQnF,GAAGwF,WAEnF,IAAyB,IAAtB0C,EAAyB,iBAC5B7B,EAAO3H,KAAK,CACX+G,OAAS,EAAKN,QAAQnF,GAAGwF,QACzBwB,GAAK,EAAK3B,aAAa6C,GAAkBlB,GACzCC,GAAK,EAAK5B,aAAa6C,GAAkBjB,GACzCC,GAAK,EAAK7B,aAAa6C,GAAkBhB,MATlClH,EAAI,EAAGA,EAAIjM,KAAKoR,QAAQtK,OAAQmF,IAAK,EAArCA,GAcT,OAAO,sGAENkF,KAAMnR,KAAKkR,QAAQC,KACnBtR,MAAOG,KAAKkR,QAAQrR,MACpByS,OAASA,EACT+C,aAAcD,OAAMpV,KAAKoR,SAAS,SAACa,GAClC,OAAOA,EAAKR,WAEb6D,cAAeF,OAAMpV,KAAKqR,UAAU,SAACY,GACpC,OAAOA,EAAKR,eA/VhB,mCAqWE,OAAOzR,KAAKoR,UArWd,oCAyWE,OAAOpR,KAAKqR,aAzWd,GAAqCkE,cCxBhBC,G,kDACnB,WAAYlG,GAAgC,IAAD,8BACzC,cAAM,CACJ7D,KAAM8D,YAAUC,SAChBC,KAAM,YAAgB,IAAbjO,EAAY,EAAZA,MACF8N,IACD,EAAKM,OAAOC,WAAWC,YAEvB,EAAKC,aAAavO,KACpBA,EAAMwO,iBACN,EAAKC,qBAUbA,aAAe,WAEb,IAAIwF,EAAS,IAAIxE,GAAgB,CACnCE,KAAM,UACNtR,MAAO,mBAEL4V,EAAMlC,SAAS,CAACf,UAAY,KAAOE,UAAY,QAE/C+C,EAAMC,YAAY,IAAK,KAEX,EAAK9F,OAAOC,WAElB8F,OAAOF,GAIb,EAAK7F,OAAOU,iBAnC6B,E,yDAe9B9O,GACX,OAAOA,EAAM+O,SAA0B,SAAf/O,EAAMgP,S,GAjBSC,UCDtBmF,G,kDACnB,WAAYtG,GAAgC,IAAD,8BACzC,cAAM,CACJ7D,KAAM8D,YAAUC,SAChBC,KAAM,YAAgB,IAAbjO,EAAY,EAAZA,MACF8N,IACD,EAAKM,OAAOC,WAAWC,YAEvB,EAAKC,aAAavO,KACpBA,EAAMwO,iBACN,EAAKC,qBAUbA,aAAe,WACb,IAAMG,EAAQ,EAAKR,OAAOC,WAEpBgG,EAAuBzF,EAC1BF,sBACAC,QAAO,SAAA2F,GAAM,OAAIA,aAAkBC,eACnC5F,QAAO,SAAA2F,GAAM,OAAKA,EAAOhG,cACzB7N,KAAI,SAAA6T,GAAM,OAAIA,EAAOtE,WAExBpB,EAAM4F,iBAENH,EAAOtN,SAAQ,SAAAiJ,GAETA,aAAiB+D,eACnBnF,EAAM6F,QAAQzE,GACdA,EAAM0E,aAAY,OAQtB,EAAKtG,OAAOU,iBA1C6B,E,yDAe9B9O,GACX,OAAOA,EAAM+O,SAA0B,SAAf/O,EAAMgP,S,GAjBWC,UCExB0F,G,kDACnB,WAAY7G,GAAgC,IAAD,8BACzC,cAAM,CACJ7D,KAAM8D,YAAUC,SAChBC,KAAM,YAAgB,IAAbjO,EAAY,EAAZA,MACP,GAAK8N,IACD,EAAKM,OAAOC,WAAWC,YAEvB,EAAKC,aAAavO,GAAQ,CAC5BA,EAAMwO,iBAEN,IAAMrI,EAAUnG,EACD,SAAXmG,EAAE6I,MAAiB,EAAK4F,YACb,SAAXzO,EAAE6I,MAAiB,EAAK6F,aACb,SAAX1O,EAAE6I,MAAiB,EAAK8F,mBAWpCC,sBAAwB,kBACtB,EAAK3G,OACFC,WACAK,sBACAC,QAAO,SAAA2F,GAAM,OAAIA,aAAkB7E,MACnCd,QAAO,SAAA2F,GAAM,OAAKA,EAAOhG,eA7Ba,E,yDAmB9BtO,GACP,OAAOA,EAAM+O,UAA2B,SAAf/O,EAAMgP,MAAkC,SAAfhP,EAAMgP,MACzC,SAAfhP,EAAMgP,Q,kCAYV,IAAIgG,EAAcxW,KAAKuW,wBAEjBE,EADUD,EAAY,GAAGhF,QACPkF,YAExBC,aAAaC,QAAQ,YAAalH,KAAKC,UAAU8G,IAEjDD,EAAYjO,SAAQ,SAAA6H,GAAK,OAAIA,EAAMC,YAEnCrQ,KAAK4P,OAAOU,kB,mCAMZ,IAEMmG,EAFYzW,KAAKuW,wBACK,GAAG/E,QACPkF,YAGxB/Q,QAAQC,IAAI6Q,GAEZE,aAAaC,QAAQ,YAAalH,KAAKC,UAAU8G,M,gCAGzC1W,GACR,OAAO,IAAI8W,SAAmB,SAACC,EAASC,GAEtCD,EADS,IAAI7F,S,oCAUf,IAAI+F,EAAeL,aAAaM,QAAQ,aAErB,MAAhBD,IAAsBA,EAAe,IAExC,IAAME,EAAYxH,KAAKyH,MAAMH,GAC7B,GAAKE,EAAL,CAEAvR,QAAQC,IAAIsR,GAGZ,IAAIE,EAAa,IAAInG,GAEjBoG,EAAwB,CAC1BlC,KAAO+B,EACPtH,OAAS5P,KAAK4P,OACd0H,cAAe,cAGjBF,EAAWG,YAAYF,GAGvBD,EAAW1B,YAAY,IAAK,KAE5B/P,QAAQC,IAAIwR,GACApX,KAAK4P,OAAOC,WAClB8F,OAAOyB,GAKbpX,KAAK4P,OAAOU,qB,GApG6BG,U,mhBCIrC,IAAM+G,GAAYhY,UAAOC,IAAV,MASTgY,GAAQjY,UAAOC,IAAV,MAKLiY,GAAOlY,UAAOC,IAAV,MAULkY,GAAb,uKAEE,IAAM1F,EACL,cAAC,cAAD,CAAYrC,OAAQ5P,KAAKC,MAAM2P,OAAQqC,KAAMjS,KAAKC,MAAMgS,KAAxD,SACC,cAACyF,GAAD,MAGIjF,EAAQ,cAACgF,GAAD,UAAQzX,KAAKC,MAAMgS,KAAKC,aAAaO,QAEnD,OACC,cAAC,gBAAD,CAAc1S,GAAG,WAAW6X,UAAU,EAAtC,SACC,eAACJ,GAAD,WACCxX,KAAKC,MAAMgS,KAAKC,aAAaC,GAAKF,EAAOQ,EACzCzS,KAAKC,MAAMgS,KAAKC,aAAaC,GAAKM,EAAQR,WAb/C,GAAqC9R,a,27BCrB7B,IAAM0X,GAAOrY,UAAOC,IAAV,MACI,SAACC,GAAD,OAAQA,EAAEoY,SAAW,iBAAmB,UAMhDC,GAAQvY,UAAOC,IAAV,MACG,SAACC,GAAD,OAAOA,EAAEE,cAOjBoY,GAAYxY,UAAOC,IAAV,MAMTwY,GAAQzY,UAAOC,IAAV,MAOLyY,GAAiB1Y,UAAOC,IAAV,MAkCf0Y,GAA8C,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,KAAOxI,EAAwB,EAAxBA,OAASyI,EAAe,EAAfA,UAEtErV,EAAQ0G,cAAY,SAACC,GAAD,OAAqBA,EAAM2O,aAAaC,aAwB5DC,EAAe,SAACvG,GACrB,OAAO,cAAC,GAAD,CAAiBrC,OAAQA,EAAQqC,KAAMA,GAAWA,EAAKR,UAI/D,OACC,eAACoG,GAAD,CACEY,yBAAwBL,EAAKlG,aAAaf,KAC1C2G,SAAUM,EAAKM,aACf9Y,WAAYoD,EAAM2V,QAASC,cAfN,gBACV1X,GAAV0O,GACFA,EAAOiJ,UAAU,GAAK,kBAUvB,UAIE,eAACd,GAAD,CAAOnY,WAAYoD,EAAM2V,QAAzB,UACC,eAACX,GAAD,WAAYI,EAAKlG,aAAaf,KAA9B,WAAqCkH,QAArC,IAAqCA,OAArC,EAAqCA,EAAWM,WAEhD,cAACpT,EAAA,EAAD,CAAahE,QAxBQ,WACxB,IAZmBC,IAYX,CAAEiK,KAAM,UAAW8E,SAAS,EAAMC,KAAM,UAXhDZ,EAAOkJ,oBAAoBC,WAAW,CACpCvX,MAAM,6BACJA,GADG,IAENwX,IAAK,GACLhJ,eAAgB,aACTiJ,gBAAiB,kBA6BiBpZ,MAAM,UAAUuC,KAAK,QAA5D,SACS,cAAC,KAAD,SAGV,eAAC6V,GAAD,WACC,cAACC,GAAD,UAAiB9C,OAAMgD,EAAK/D,aAAcmE,KAC1C,cAACN,GAAD,UAAiB9C,OAAMgD,EAAK9D,cAAekE,YCtHnCU,ID4HEC,cAxDS,SAACxP,GAAD,MAAuB,CAC9C0O,UAAW1O,EAAM2O,aAAaC,aAuDhBY,CAAyBhB,IC5HxC,kDAEC,aAAe,uCACR,WAHR,gEAOqB3W,GAEnB,OACC,cAAC,gBAAD,CAAczB,GAAG,YAAY6X,UAAU,EAAOzC,KAAM3T,EAAM4O,MAA1D,SACC,cAAC,GAAD,CAAkBR,OAAQ5P,KAAK4P,OAAQwI,KAAM5W,EAAM4O,YAXvD,oCAgBegJ,GACb,OAAO,IAAInI,GAAgB,SAAU,sBAjBvC,GAAuCoI,yBCH1BC,GAAb,kDACC,aAAe,uCACR,WAFR,4DAME,OAAO,IAAIvI,GAAgB,CAC1BI,KAAM,gBAPT,GAAuCoI,wBCMvC,SAASC,KAEL,IAAIxF,EAAKyF,KAAa,CAACC,kCAAkC,IAGzD1F,EAAG2F,mBAAmBC,gBAAgB,IAAIV,IAC7ClF,EAAG6F,mBAAmBD,gBAAgB,IAAIN,IAGvC,IAAMlJ,EAAQ,IAAI0J,gBA0BlB,OAFA9F,EAAG+F,SAAS3J,GAEL4D,EAKIwF,KAAf,IC7BaQ,GAAb,WAKE,aAAe,IAAD,gCAHdC,YAGc,OAFdrK,YAEc,OAqRdsK,QAAU,WACRvU,QAAQC,IAAI,YACZ,EAAKuU,YAAYC,aAvRL,KA2edxP,aAAe,WACb,EAAKmO,WAAW,CAAEtN,KAAM,UAAW8E,SAAS,EAAMC,KAAM,UA5e5C,KAofdzF,kBAAoB,WAClB,EAAKgO,WAAW,CAAEtN,KAAM,UAAW8E,SAAS,EAAMC,KAAM,UArf5C,KAwfd3F,YAAc,kBACZ,EAAKkO,WAAW,CAAEtN,KAAM,UAAW8E,SAAS,EAAMC,KAAM,UAzf5C,KA4fd6J,cAAgB,kBACd,EAAKtB,WAAW,CAAEtN,KAAM,UAAW8E,SAAS,EAAMC,KAAM,UA7f5C,KA+fd1F,eAAiB,kBACf,EAAKiO,WAAW,CAAEtN,KAAM,UAAW8E,SAAS,EAAMC,KAAM,YAhgB5C,KAkgBd8J,KAAO,WACLnP,MAAM,2CAngBM,KAugBdoP,KAAO,WACLpP,MAAM,2CAvgBNnL,KAAKia,QAAS,EACdja,KAAK4P,OAAS4J,KAEdxZ,KAAKwa,cAEL7U,QAAQC,IAAI5F,KAAKma,YAAYtK,WAAW4K,gBAExC,IAAIC,EAAQ1a,KAAKma,YAAYtK,WAAW8K,WAE3B3a,KAAKma,YAAYtK,WAAW+K,YAEzCjV,QAAQC,IAAI8U,GAjBhB,0DA8BiB,IAAD,OAEY,CACtB,IAAIrL,IAAa,GACjB,IAAImG,IAAc,GAClB,IAAII,IAAgB,GACpB,IAAIO,IAAgB,IAId5N,SAAQ,SAAAkI,GAAM,OACpB,EAAKb,OACFkJ,oBACA+B,eAAepK,QA3CxB,iCAgDajP,GACTxB,KAAK4P,OAAOkJ,oBAAoBC,WAAW,CACzCvX,MAAM,6BACDA,GADA,IAEHwX,IAAK,GACLhJ,eAAgB,aAChBiJ,gBAAiB,mBAtDzB,uCA2DmB6B,EAA2BC,GAC1C,IAAMC,EAAUF,EAAOH,WACjBM,EAAWF,EAAQJ,WACzB3a,KAAKkb,WAAWF,EAAUF,GAC1B9a,KAAKkb,WAAWD,EAAWF,KA/D/B,iCAkEaL,EAAoCzI,GAE7C,GADiBkJ,OAAOC,KAAKV,GAAO5T,QACnB,EACf,IAAK,IAAMkS,KAAO0B,EAChB,GAAGA,EAAM1B,GAAKqC,gBAAgB5J,UAAYQ,EAAKR,QAAQ,CACrDiJ,EAAM1B,GAAK3I,SACXrQ,KAAKma,YAAY7J,gBACjB,SAzEV,oCAgFI,IAAIgL,EAAWtb,KAAK4P,OACjBC,WACAK,sBACAC,QAAO,SAAAC,GAAK,OAAKA,EAAMN,cAE1B,GAAuB,GAAnBwL,EAASxU,OAAb,CAEA,IAAIsR,EAAOkD,EAAS,GAEpB,GAAIlD,aAAgBnH,MAAoB,EAIxC,OAFSmH,KA3Fb,4CAgGwBnG,GACpB,IAAI+B,EAAK,GACL0G,EAAQzI,EAAK0I,WACbjJ,EAASO,EAAKR,QAClB,IAAK,IAAMuH,KAAO0B,EACZS,OAAOI,UAAUC,eAAeC,KAAKf,EAAO1B,IAC3C0B,EAAM1B,GAAKqC,gBAAgB5J,UAAYC,GACxCsC,EAAGrJ,KAAK+P,EAAM1B,IAIpB,OAAOhF,IA3GX,uCA8GmB0H,EAA6BC,EAAgCC,GAE5E,IAAMZ,EAAUhb,KAAK6b,sBAAsBH,GAE3C,GAAGV,EAAQlU,OAAS,EAClB9G,KAAK8b,gBAAgBd,EAAQ,GAAwBY,OADvD,CAKA,IAAMX,EAAWjb,KAAK6b,sBAAsBF,GAEzCV,EAASnU,OAAS,GACnB9G,KAAK8b,gBAAgBb,EAAS,GAAwBW,MA1H5D,sCAgIkB/H,EAAuB+H,GACrC/H,EAAKkI,UAAU,IACflI,EAAKmI,SAASJ,GACd5b,KAAKma,YAAY7J,kBAnIrB,uCAsImB6E,GACf,IAAM8G,EAAS,IAAInC,gBACnB,GAAY,KAAT3E,EAAY,CACb,IACI+G,EADUxM,KAAKyH,MAAMhC,GAGvB,GADF8G,EAAOE,iBAAiBD,EAAKlc,KAAKma,aAClB,MAAV8B,EAEF,YADAtW,QAAQC,IAAI,cAKnB5F,KAAKma,YAAYJ,SAASkC,GAEvBjc,KAAKoc,sBApJX,0CAuJsB,IAAD,OACjBpc,KAAKma,YAAYtK,WAAWwM,iBAAiB,CAC3CC,aAAc,SAAC3U,GAAD,OAAY,EAAK4U,eAAe5U,IAC9C6U,iBAAmB,SAAC7U,GAAWhC,QAAQC,IAAI+B,QA1JjD,qCA+JiBA,GAAO,IAAD,OACnBhC,QAAQC,IAAI,eACZ,IAAMiO,EAA0BlM,EAAEkM,KAC9BF,EAAaE,EAAKwH,gBAElBoB,EADO9I,EAAW+I,UACAD,WAAW9I,GACjC,QAAkBzS,IAAfub,EAAH,CACA9W,QAAQC,IAAI6W,EAAWvK,aAAaO,OACpC,IAAIkK,EAAgB3c,KAAK6b,sBAAsBY,GAC/C9W,QAAQC,IAAI+W,GACTA,EAAc7V,OAAS,IACxBqE,MAAM,iDACN0I,EAAKxD,SACLrQ,KAAKma,YAAY7J,iBAGnBuD,EAAKwI,iBAAiB,CACpBO,kBAAkB,SAACC,GAAD,OAAc,EAAKC,SAASD,SAhLpD,+BAwLWA,GACP,IACI5K,EAD+B4K,EAAG/G,OACjBuF,gBACjBjD,EAAOnG,EAAKyK,UACZhC,EAAQ1a,KAAK6b,sBAAsB5J,GACpCyI,EAAM5T,OAAS,IAChB4T,EAAM,GAAGrK,SACTrQ,KAAKma,YAAY7J,iBAEnB8H,EAAK2E,cAAc9K,EAAKR,WAjM5B,qCAoMiBuL,EAA0BC,GACvC,IAAIzP,EAAKwP,EAAME,cAAcpQ,EACzBY,EAAKuP,EAAMC,cAAcpQ,EAG7B,OAFAnH,QAAQC,IAAI,MAAQ4H,EAAM,OAASE,GACtBF,GAAME,EAAM,QAAU,SAxMvC,kCA4Mc3N,GACV,OAAOC,KAAKma,YAAYtK,WAAW6M,QAAQ3c,KA7M/C,qCAiNI,IAAMod,EAAW,IAAIrD,gBACrB9Z,KAAKma,YAAYJ,SAASoD,GAC1Bnd,KAAKoc,oBACLpc,KAAKma,YAAY7J,kBApNrB,iCAwNI,IAAI8M,EAAQpd,KAAKma,YAAYtK,WAAWwN,WACxClS,MAAMiS,EAAM,GAAGlL,aAAaf,MAC5B,IAAIwC,EAAayJ,EAAM,GAAG9I,cAAc,GACpCZ,EAAa0J,EAAM,GAAG/I,aAAa,GAEnCR,EAAOF,EAAWE,KAAKH,GAE3BA,EAAWI,iBACXH,EAAWG,iBAEX9T,KAAKma,YAAYtK,WAAW8F,OAAO9B,GACnC7T,KAAKma,YAAY7J,kBAnOrB,qCAsOiB3I,GACb,IAAIyQ,EAAOpY,KAAKsd,mBACJpc,GAARkX,IACJA,EAAKlG,aAAaf,KAAOxJ,EACzB3H,KAAKma,YAAY7J,mBA1OrB,gCA6OYqD,EAA+BD,GAEvC,IAAI6J,EAAavd,KAAK6b,sBAAsBlI,GAEzC4J,EAAWzW,OAAS,GACrByW,EAAW,GAAGlN,SAGhB,IAAIwD,EAAQF,EAAWE,KAAsBH,GAC/CC,EAAWG,iBACXJ,EAAWI,iBAET9T,KAAK4P,OAAOC,WAAW8F,OAAO9B,GAC9B7T,KAAK4P,OAAOU,kBA1PhB,qCA6PiB8H,GACbpY,KAAK4P,OAAOU,kBA9PhB,iCAiQa8B,GACT,IAAIgG,EAAOpY,KAAKsd,mBAEJpc,GAARkX,IAEJA,EAAKoF,WAAWpL,GAEhBpS,KAAKma,YAAY7J,mBAxQrB,kCA4QclE,GACEpM,KAAKma,YAAYtK,WACvB4N,aAAarR,GACnBpM,KAAKma,YAAY7J,kBA/QrB,6BAkRSlE,GACL,IAAIgE,EAAQpQ,KAAKma,YAAYtK,WACzB7L,EAAYoM,EAAMqK,eACtB9U,QAAQC,IAAI,gBAAgB5B,GAC5BoM,EAAMqN,aAAazZ,EAAYoI,GAC/BpM,KAAKma,YAAY7J,kBAvRrB,wCA+RoBwB,GAChB,IAAIsG,EAAOpY,KAAKsd,cAEZ,OAAJlF,QAAI,IAAJA,KAAMsF,uBAAuB5L,KAlSjC,mDAqS+B6L,GAAsB,IAAD,OAC5CvN,EAAQ,IAAI0J,gBACZsD,EAA4B,GAI5BQ,EAAS,EAEbzS,MAJe,KAKfwS,EAAOpV,SAAQ,SAAA6J,GACb,IAAIgG,EAAO,IAAInH,GACfmH,EAAKlG,aAAaf,KAAOiB,EAAGyL,UAC5B,IAAIC,EAAYV,EAAMtW,OAClBiX,EAAO,EACPC,EAAO,GACX,GAAGF,EAAY,EAAE,CACf3S,MAAM2S,EAAY,EAAI,MACtB,IAAIG,EAAQb,EAAMU,EAAU,GAAGZ,cAC/Ba,EAAOE,EAAMnR,EACbiR,GAfW,IAgBXC,EAAOC,EAAMlR,EAbJ,IAcN6Q,IACDG,EAAO,EACPH,EAAS,EACTI,GAnBS,KAqBX7S,MAAM,iBAAmByS,GAI3BzS,MAAM4S,EAAO,MAAQC,GAErB5F,EAAK1C,YAAYqI,EAAQC,GAEzB,EAAKE,YAAY9F,EAAKhG,EAAGE,QAEzBsL,GAAU,EACVR,EAAMzS,KAAKyN,MAEbhI,EAAMuF,OAAN,MAAAvF,EAAgBgN,GAChBpd,KAAKma,YAAYJ,SAAS3J,GAC1BpQ,KAAKoc,oBACLpc,KAAKma,YAAY7J,kBA/UrB,wCAmVI,IAAI0D,EAAa,GAuCjB,OAtCYhU,KAAKma,YAAYtK,WAAW8K,WAClCpS,SAAQ,SAAAsL,GACZ,IAAIsK,EAAc,GACdC,EAAY,GACZzK,EAAaE,EAAKwH,gBAClB3H,EAAaG,EAAKwK,gBAClBC,EAAa5K,EAAWgJ,UACxB6B,EAAa5K,EAAW+I,UAE5B,GAAG/I,EAAWzB,aAAaC,GAAG,CAC5B,IAAIqM,EAAgB7K,EAAWzB,aAAaO,MAC5C2L,OAA+Bld,IAAlBsd,EAA+BA,EAAgB,GAC5D,IAAIC,EAAmBH,EAAW7B,WAAW/I,GAC7C,QAAwBxS,IAArBud,EAA+B,CAChC,IAAIC,EAAkBD,EAAiBvM,aAAaO,MACpD0L,OAAmCjd,IAApBwd,EAAiCA,EAAkB,IAItE,IAAkC,IAA/B/K,EAAWzB,aAAaC,GAAa,CACtC,IAAIuM,EAAkBhL,EAAWxB,aAAaO,MAC9C0L,OAAmCjd,IAApBwd,EAAiCA,EAAkB,GAElE,IAAIC,EAAmBJ,EAAW9B,WAAW9I,GAC7C,QAAwBzS,IAArByd,EAA+B,CAChC,IAAIH,EAAgBG,EAAiBzM,aAAaO,MAClD2L,OAA+Bld,IAAlBsd,EAA+BA,EAAgB,IAIhE,IAAIxL,EAAY,CACd4L,UAAYL,EAAWrM,aAAaf,KACpC0N,YAAcP,EAAWpM,aAAaf,KACtCiN,YACAD,eAEFnK,EAAGrJ,KAAKqI,MAEHgB,IA1XX,kCA8XcoE,EAAuB9F,GACjCA,EAAO/J,SAAQ,SAAAoK,GACbyF,EAAK7E,SAAS,CAACf,UAAYG,EAAMH,UAAYE,UAAYC,EAAMD,iBAhYrE,2CAoYuB,IAAD,OACdsB,EAAW,GAiBf,OAhBahU,KAAK8e,WACXvW,SAAQ,SAAA6J,GACb,IAAI2M,EAAe3M,EACf4M,EAAO5M,EAAGrS,QACFmB,IAAT8d,IAAoBA,EAAO,IAE9B,IADA,IAAI5G,EAAO,EAAK6G,aAAaD,GACpB/S,EAAI,EAAGA,EAAImG,EAAGE,OAAOxL,OAAQmF,IAAK,CACzC,IAAI0G,EAAQP,EAAGE,OAAOrG,GAClBiT,EAAS,EAAKC,mBAAmB/G,EAAKzF,GAC1ChN,QAAQC,IAAIsZ,GACZ,IAAIE,EAAgB,6BAAKzM,GAAWuM,GACpCH,EAAOzM,OAAOrG,GAAKmT,EAGrBpL,EAAGrJ,KAAKoU,MAEH/K,IAtZX,mCAyZejU,GACX,OAAOC,KAAKma,YAAYtK,WAAW6M,QAAQ3c,KA1Z/C,yCA6ZqBqY,EAAwBzF,GAAe,IAAD,EACvDhN,QAAQ0Z,MAAM,kBACd,IAAIrL,EAAW,CACbxB,UAAY,GACZ8M,UAAY,IAEVnM,EAAE,UAAGR,EAAMc,mBAAT,aAAG,EAAmBN,GAC5B,QAAUjS,IAAPiS,IAAqBA,EAAI,OAAOa,EACnC,IAAI8G,EAAS1C,EAAK3D,cAAc9B,EAAMa,MAClCuH,EAAU3C,EAAKqE,WAAW3B,GAE1BE,EAAWhb,KAAK6b,sBAAsBf,GAEtCyE,EAAuBvf,KAAKwf,wBAAwBxE,GAExD,QAA4B9Z,IAAzBqe,EAAmC,CACpC,IAAIjB,EAAaiB,EAAqB7C,UAGtC,OAFA1I,EAAGxB,UAAY+M,EAAqBrN,aAAaO,MACjDuB,EAAGsL,UAAYhB,EAAWpM,aAAaf,KAChC6C,EAGT,IAAIiH,EAAWjb,KAAK6b,sBAAsBd,GAEtC0E,EAAwBzf,KAAKwf,wBAAwBvE,GAEzD,QAA6B/Z,IAA1Bue,EAAsC,CACvC,IAAInB,EAAamB,EAAsB/C,UAGvC,OAFA1I,EAAGxB,UAAYiN,EAAsBvN,aAAaO,MAClDuB,EAAGsL,UAAYhB,EAAWpM,aAAaf,KAChC6C,KA3bb,8CAgc0B0G,GACtB,GAAGA,EAAM5T,OAAS,EAAE,CAClB,IAAI4M,EAAagH,EAAM,GAAG2D,gBAC1B,OAAkC,IAA/B3K,EAAWxB,aAAaC,GACRuB,EAAWgJ,UACED,WAAW/I,GAGlCA,KAxcf,iCA8ca,IAAD,OACJM,EAAkB,GAMtB,OALYhU,KAAKma,YAAYtK,WAAWwN,WAClC9U,SAAQ,SAAA6J,GACZ,IAAIY,EAAM,EAAK0M,YAAYtN,GAC3B4B,EAAGrJ,KAAKqI,MAEHgB,IArdX,qCAydI,IAAIA,EAAgB,CAClBjU,GAAI,GACJ8d,UAAW,GACXvL,OAAQ,IAEJ8F,EAAOpY,KAAKsd,cAClB,YAAYpc,IAATkX,GACCA,aAAgBnH,KAAiB+C,EAAKhU,KAAK0f,YAAYtH,IAD7BpE,IA/dlC,kCAqecoE,GACV,IAAIjH,EAAOiH,EAAKlG,aAAaf,KAE7B,YADYjQ,GAARiQ,IAAmBA,EAAO,IACvB,CACLpR,GAAKqY,EAAK3G,QACVoM,UAAY1M,EACZmB,OAAS8F,EAAK7F,iBA3epB,gCAsfIvS,KAAK+Y,WAAW,CAAEtN,KAAM,UAAW8E,SAAS,EAAMC,KAAM,WAtf5D,6BAkhBShP,GAELxB,KAAK+Y,WAAW,CACd4G,QAASne,EAAMme,QACfC,QAASpe,EAAMoe,QACfnU,KAAM,QACNoU,OAAQ,MAxhBd,8BA4hBUre,GACNxB,KAAK+Y,WAAW,CACd4G,QAASne,EAAMme,QACfC,QAASpe,EAAMoe,QACfnU,KAAM,QACNoU,QAAS,MAjiBf,kCAwiBI,OAAO7f,KAAK4P,WAxiBhB,K,wCCVM9M,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXW,KAAM,CACJoC,SAAU,GAEZ8Z,UAAY,CACVzc,gBAAkB,UAClB0c,QAAU,EACVlgB,MAAQ,QACRyD,OAAQ,OACR0c,aAAc,EACdla,SAAW,IAIbgD,WAAY,CACVnC,YAAa3D,EAAMe,QAAQ,IAE7B6E,MAAO,CACL5C,SAAU,QAWFia,GAAyC,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,SAAWtX,EAAwB,EAAxBA,MAAQuX,EAAgB,EAAhBA,UACrElb,EAAUnC,KAD2E,EAG/DrC,oBAAS,GAHsD,mBAGpF2f,EAHoF,KAG5EC,EAH4E,OAKzD5f,mBAAS,IALgD,mBAKpF6f,EALoF,KAKzEC,EALyE,KAwB3F,OACE,qBAAKjb,UAAWL,EAAQrB,KAAxB,SACE,cAAC2G,GAAA,EAAD,CAAQpH,SAAS,SAAStB,UAAW,EAArC,SACE,eAAC,KAAD,WACE,cAAC0D,EAAA,EAAD,CAAYoH,KAAK,QAAQrH,UAAWL,EAAQ6D,WAAYjJ,MAAM,UAAU+M,aAAW,OAAnF,SACE,cAAC,KAAD,MAEAwT,EACD,uBAAOhU,MAAOkU,EAAW5U,SAzBlC,SAAsB/D,GACpB4Y,EAAa5Y,EAAElB,OAAO2F,QAwBkCoU,OArB1D,WACEH,GAAWD,GAEXD,EAAUG,IAkBmEhb,UAAWL,EAAQ6a,YAG1F,cAACW,GAAA,EAAD,CAAajW,QAAQ,KAAKlF,UAAWL,EAAQ2D,MAAOrH,QAhB5D,WACE8e,GAAU,GACVE,EAAa3X,IAcP,SACGA,IAGH,cAACrD,EAAA,EAAD,CAAY1F,MAAM,UAAU0B,QAAS2e,EAArC,SAA+C,cAAC,KAAD,c,6KC/BnDpd,IAReC,YAAW,CAC9Ba,KAAM,CACJ,QAAS,CACP8c,aAAc,YAKF3d,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX0d,YAAa,CACX,eAAkB,WAClB,OAAU,SAAU,SAAY,QAAS,WAAc,aACvD,SAAY,QAAS,UAAa,gCAEpCC,KAAM,CACJb,QAAS,IAEX/e,aAAe,CACb6f,UAAU,UAOHC,GAA6C,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,OAAQC,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAElFjc,EAAUnC,KAF0F,EAIlErC,mBAAS,IAJyD,gCAMzEA,mBAAS0gB,GAAYH,KANoD,mBAMnGI,EANmG,KAMrFC,EANqF,OAQlE5gB,mBAAS,IARyD,mBAQnGmb,EARmG,KAQrF0F,EARqF,OAUtE7gB,mBAAS8gB,MAV6D,mBAUnGC,EAVmG,KAUvFC,EAVuF,OAYxEhhB,mBAAS,IAZ+D,mBAYnG6f,EAZmG,KAYxFC,EAZwF,OAe9E9f,oBAAS,GAfqE,mBAenG2f,EAfmG,KAe3FC,EAf2F,OAiBlD5f,mBAAS,IAjByC,mBAiBnGihB,EAjBmG,KAiB7EC,EAjB6E,OAmB9DlhB,mBAAS,IAnBqD,mBAmBnGmhB,EAnBmG,KAmBnFC,EAnBmF,KAqBpGC,EAAeC,mBAAQ,kBAqI7B,WACE,GAA4B,IAAxBL,EAA4B,MAAO,GACvC,IAAItP,EAAKoP,EAAWQ,MAAK,SAAAC,GAAC,OAAIA,EAAEliB,KAAO2hB,KACvC,YAAUxgB,GAANkR,EAAwB,GACrBA,EAAGE,OAzIuB4P,KAAwB,CAACR,IArB8C,EAuBlEjhB,oBAAS,GAvByD,mBAuBnG0hB,EAvBmG,KAuBrFC,EAvBqF,OAyBpE3hB,mBAAS,IAzB2D,mBAyBnG4hB,EAzBmG,KAyBtFC,EAzBsF,OA2BtE7hB,mBAAS,IA3B6D,mBA2BnG8hB,EA3BmG,KA2BvFC,GA3BuF,KA4C1G,SAASjB,KAA+B,OAAOP,EAAWlC,WAE1D,SAASqC,GAAYH,GAAiC,OAAOA,EAAWI,eAExE,SAASqB,GAAa1iB,EAAwByS,QACjCtR,IAAPnB,IAAkBA,EAAK,IAC3BsgB,GAAU,GACVE,EAAa/N,GACb8P,EAAeviB,GACf,IAAIqY,EAAO4I,EAAW1D,cACtB,QAAYpc,IAATkX,EAAH,CAEA,IAAI5E,EAAOzT,EACPqU,EAAQgE,EAAKsK,iBAAiBlP,GAE9BmP,EAAevK,EAAK3D,cAAcjB,GAClCoP,EAAgBxK,EAAK3D,cAAcL,GAEnCyO,EAAS7B,EAAWnF,sBAAsB8G,GAE1CG,EAAU9B,EAAWnF,sBAAsB+G,GAE/C,GAAGC,EAAO/b,OAAS,EAAnB,CACE,IAAM4M,EAAamP,EAAO,GAAGxE,gBAC7BsD,EAAwBjO,EAAWgJ,UAAUjL,SAC7C,IAAI6M,EAAa5K,EAAWgJ,UAE5BmF,EAAkBvD,EAAWyE,iBAAiBrP,EAAWjC,eAI3D,GAAGqR,EAAQhc,OAAS,EAAE,CAEpB,IAAM4M,EAAaoP,EAAQ,GAAGzE,gBAG9B,OAFAsD,EAAwBjO,EAAWgJ,UAAUjL,cAC7CoQ,EAAkBnO,EAAWjC,WAOjC,SAASuR,KACP3C,GAAU,GAKZ,WACE,IAAI4C,EAAQ7B,EAIRzP,EAAUsR,EAAM3Q,OAAOV,WAAU,SAAAE,GAAC,OAAIA,EAAE0B,MAAQ6O,KAEpD,IAAgB,GAAZ1Q,EAAe,OAEnBsR,EAAM3Q,OAAOX,GAASa,UAAY8N,EAEhB,IAAdiC,IAAkBU,EAAM3Q,OAAOX,GAASe,UAAY6P,GACxDlB,EAAS4B,GAETjC,EAAWxD,WAAWyF,GAlBtBzF,GACA8E,EAAe,IAoBjB,SAASY,GAAavb,GACpB4Y,EAAa5Y,EAAElB,OAAO2F,OAGxB,SAAS+W,GAAiBxb,GACxB6a,GAAc7a,EAAElB,OAAO2F,OAoCzB,SAASgX,GAAoBzb,GAC3Bga,EAAwBha,EAAElB,OAAO2F,OAUnC,SAASiX,GAAoB1b,GAC3B,GAAuB,KAAnBA,EAAElB,OAAO2F,MAAb,CAIA,IAAIkX,EAAe3b,EAAElB,OAAO2F,MACxBmX,EAAcnC,EAAa9O,OAAO0P,MAAK,SAAAlQ,GAAC,OAAIA,EAAE0B,OAAS6O,KAE3DR,EAAkByB,GAElB,IAAMhG,EAAc0D,EAAW1D,cAE/B,QAAmBpc,IAAhBoc,QAEgBpc,GAAfqiB,EAAJ,CAEA,IAAIjF,EAAa0C,EAAWwC,YAAY9B,GAElC+B,EAAMzC,EAAW0C,eAAepG,EAAcgB,GAE9C3K,EAAsB,UAAR8P,EAAmBnG,EAAYqG,kBAAkBtB,GAAe/E,EAAY7I,cAAc4N,GAExG3O,EAAsB,UAAR+P,EAAmBnF,EAAW7J,cAAc6O,GAAmChF,EAAWqF,kBAAkBL,GAEhItC,EAAW4C,UAAUjQ,EAAYD,KAgBnC,SAASmQ,GAAe/R,EAAUgS,GAChC,IAAIrQ,EAAc3B,EAAE2B,YACpB,YAAmBvS,GAAfuS,IAGc,MAAdqQ,EAA2BrQ,EAAYP,GACzB,MAAd4Q,EAA2BrQ,EAAYN,GACzB,MAAd2Q,EAA2BrQ,EAAYR,QAA3C,GAIF,SAAS8Q,GAAepc,EAAQqc,EAA6BF,GAE/Cnc,EAAElB,OAAO2F,MAErB,QAAelL,GAAX8iB,EAAJ,CAEAre,QAAQC,IAAIke,GAEZ,IAAIG,EAAe7C,EAAa9O,OAAOV,WAAU,SAAAE,GAAC,OAAIA,EAAE0B,MAAQwQ,KAE5D5R,EAAKgP,EACL8C,EAAiB9R,EAAGE,OAAO2R,GAAcxQ,YAE7C,IAAsB,IAAlBwQ,QAA0C/iB,IAAnBgjB,EAA3B,CAQA,GANmB,OAAfJ,IACFI,EAAehR,IAAMgR,EAAehR,IAEpB,OAAf4Q,IACDI,EAAejR,IAAMiR,EAAejR,IAEnB,OAAf6Q,IACFI,EAAe/Q,IAAM+Q,EAAe/Q,IAEV,IAAtB+Q,EAAe/Q,IAAc,CAC/B,IAAMiF,EAAO4I,EAAW1D,cACxB,QAAapc,IAATkX,EAAoB,OACxB4I,EAAWmD,iBAAiB/L,EAAK1D,iBAAiBuP,GAAe7L,EAAK7D,kBAAkB0P,IAK5F7R,EAAGE,OAAO2R,GAAcxQ,YAAcyQ,EACtC7C,EAASjP,GAETzM,QAAQC,IAAIse,GACZlD,EAAWoD,kBAAkBhS,EAAGE,OAAO2R,IACvC7B,GAAiBD,KA8BnB,OA1PA7X,qBAAU,WACR+W,EAASF,GAAYH,IACrBS,EAAcF,QAGb,CAACR,EAAQoB,EAAcjB,IAqPnB,cAACmD,GAAA,EAAD,CAAQC,OAAQ,QAASxiB,KAAMif,EAAQ7b,MAAO,CAAE7C,MAAO,KAAOL,QAnPrE,WACE2f,EAAwB,IACxBE,EAAkB,IAClBS,EAAe,IACfjC,GAAU,GACVY,KA8OK,SACL,gCACE,cAAC,GAAD,CAAQf,SApKZ,gBAEchf,GADD8f,EAAW1D,gBAEtB0D,EAAWlW,iBACXmW,MAgK8BrY,MAAOwY,EAAavD,UAAWsC,UA3F/D,SAAsBxY,GACpB,IAAIsb,EAAQ7B,EACZ6B,EAAMpF,UAAYlW,EAClB0Z,EAAS4B,GAETjC,EAAWuD,eAAe5c,GAE1Bya,GAAiBD,MAqFf,cAACqC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAU7X,aAAW,eAArB,UACE,cAAC8X,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,IACA,cAACA,GAAA,EAAD,CAAWtf,UAAWL,EAAQ2b,KAA9B,wBACA,cAACgE,GAAA,EAAD,CAAWtf,UAAWL,EAAQ2b,KAA9B,uBACA,cAACgE,GAAA,EAAD,CAAWtf,UAAWL,EAAQ2b,KAA9B,gBACA,cAACgE,GAAA,EAAD,CAAWtf,UAAWL,EAAQ2b,KAA9B,gBACA,cAACgE,GAAA,EAAD,CAAWtf,UAAWL,EAAQ2b,KAA9B,yBAGJ,cAACiE,GAAA,EAAD,UACGzD,EAAa9O,OAAOrQ,KAAI,SAAC6iB,EAAY5Q,GAAb,OACvB,eAAC,IAAM/S,SAAP,WAEE,eAACwjB,GAAA,EAAD,CAAUrf,UAAWL,EAAQ2b,KAA7B,UACE,cAACgE,GAAA,EAAD,UACE,cAACrf,EAAA,EAAD,CAAYqH,aAAW,aAAaxK,KAAK,QAAzC,SACIge,GAAUiC,IAAgByC,EAAItR,KAAQ,cAAC,KAAD,IAAkB,cAAC,KAAD,QAG5D4M,GAAUiC,GAAeyC,EAAItR,KAC7B,qCAEE,cAACoR,GAAA,EAAD,CAAWG,UAAU,KAAKC,MAAM,MAAM1f,UAAWL,EAAQ2b,KAAzD,SACE,uBAAOJ,OAAQ,kBAAMwC,MACnBtX,SAAUwX,GAAc9W,MAAOkU,MAEnC,cAACsE,GAAA,EAAD,CAAWG,UAAU,KAAKC,MAAM,MAAM1f,UAAWL,EAAQ2b,KAAzD,SACE,yBAAQlV,SAAUyX,GAAkB/W,MAAOmW,EAA3C,UACE,wBAAQnW,MAAM,MAAd,sBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,6BAMN,qCACE,cAACwY,GAAA,EAAD,CAAWtf,UAAWL,EAAQ2b,KAAMmE,UAAU,KAAKC,MAAM,MAAMzjB,QAAS,kBAAMkhB,GAAaqC,EAAItR,KAAMsR,EAAItS,YAAzG,SACGsS,EAAItS,YAGP,cAACoS,GAAA,EAAD,CAAWtf,UAAWL,EAAQ2b,KAAMmE,UAAU,KAAKC,MAAM,MAAMzjB,QAAS,kBAAMkhB,GAAaqC,EAAItR,KAAMsR,EAAItS,YAAzG,SACGsS,EAAIpS,eAKX,cAACkS,GAAA,EAAD,CAAWtf,UAAWL,EAAQ2b,KAA9B,SACE,uBAAOnV,KAAK,WAAWwZ,QAAUpB,GAAeiB,EAAK,MACnDpZ,SAAU,SAAC/D,GAAD,OAAOoc,GAAepc,EAAGmd,EAAItR,KAAM,QAD/C,YACgEsR,EAAItR,SAEtE,cAACoR,GAAA,EAAD,UACE,uBAAOnZ,KAAK,WAAWwZ,QAAUpB,GAAeiB,EAAK,MAAQpZ,SAAU,SAAC/D,GAAD,OAAOoc,GAAepc,EAAGmd,EAAItR,KAAM,QAA1G,YAA2HsR,EAAItR,SAEjI,cAACoR,GAAA,EAAD,CAAWtf,UAAWL,EAAQ2b,KAA9B,SACE,cAACrb,EAAA,EAAD,CAAYhE,QAAS,kBAxMvC,SAAqBxB,GACnB,QAAUmB,GAANnB,EAAJ,CACA,IAAIqY,EAAO4I,EAAW1D,mBACVpc,GAARkX,IACJA,EAAK8M,gBAAgBnlB,GACrBqiB,GAAiBD,GACjBnB,EAAW7G,YAAY7J,kBAkMoB0B,CAAY8S,EAAItR,OAAOpR,KAAK,QAAvD,SACE,cAAC,KAAD,WAIN,cAACuiB,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAW1f,MAAO,CAAEigB,cAAe,EAAGC,WAAY,GAAKC,QAAS,EAAhE,SACE,cAACC,GAAA,EAAD,CAAUnT,GAAKiO,GAAUiC,IAAgByC,EAAItR,KAAO+R,QAAQ,OAAOC,eAAa,EAAhF,SACE,eAACC,GAAA,EAAD,CAAK3hB,OAAQ,EAAGiC,QAAQ,OAAO2f,cAAc,SAA7C,UAGE,cAACC,GAAA,EAAD,CAAWlT,MAAM,gBAAgBjI,QAAQ,WAAWpI,KAAK,UAEzD,cAACwiB,GAAA,EAAD,UACE,uBAAOnZ,KAAK,WAAWwZ,QAAUpB,GAAeiB,EAAK,MACnDpZ,SAAU,SAAC/D,GAAD,OAAOoc,GAAepc,EAAGmd,EAAItR,KAAM,WAE/CqQ,GAAeiB,EAAK,MAAS,cAAC,IAAM3jB,SAAP,UAE/B,eAACykB,GAAA,EAAD,CAAapb,QAAQ,WAAWpI,KAAK,QAArC,UAEA,eAACyjB,GAAA,EAAD,CAAQvgB,UAAWL,EAAQjE,aAAc8kB,cAAY,EAACtb,QAAQ,WAAY4B,MAAOsV,EAAsBhW,SAAU0X,GAAjH,UACI,cAAClhB,EAAA,EAAD,CAAUkK,MAAM,GAAhB,sCACCoV,EAAWvf,KAAI,SAAAmQ,GAGd,OAFYgP,EAAarhB,KAAOqS,EAAGrS,GACjC,cAACmC,EAAA,EAAD,CAAkCkK,MAAOgG,EAAGrS,GAA5C,SAAiDqS,EAAGyL,WAArC,UAAYzL,EAAGrS,IAA8C,SAKlF,eAAC8lB,GAAA,EAAD,CAAQvgB,UAAWL,EAAQjE,aAAc8kB,cAAY,EAAC5gB,MAAO,CAAE6gB,SAAU,KAAO3Z,MAAOwV,EAAgBlW,SAAU2X,GAAjH,UAEE,cAACnhB,EAAA,EAAD,CAAUgD,MAAO,CAAEa,QAAS,QAAUqG,MAAM,KAC3C0V,EAAa7f,KAAI,SAAA6P,GAAC,OAAI,wBAA0B1F,MAAO0F,EAAE0B,KAAnC,SAA0C1B,EAAEU,WAA/BV,EAAEU,iBAGxC,eAACqT,GAAA,EAAD,CAAQvgB,UAAWL,EAAQjE,aAAc8kB,cAAY,EAAC1Z,MAAOwP,EAAclQ,SAAU,SAAC/D,GAAD,OA7H7G,SAA0Bqe,EAA4BC,EAA+BzkB,GACnF,QAAeN,IAAX8kB,QAAsC9kB,IAAd+kB,EAA5B,CACA,IAAM7N,EAAO4I,EAAW1D,cACxB,QAAapc,IAATkX,EAAJ,CACA,IAAM8N,EAAS9N,EAAK3D,cAAcuR,GAC5BG,EAAU/N,EAAK3D,cAAcwR,GACpB,OAAXC,GAA+B,OAAZC,IACvB7E,EAAgB9f,EAAMiF,OAAO2F,OAC7B4U,EAAWoF,iBAAiBF,EAAQC,EAAS3kB,EAAMiF,OAAO2F,UAqHwDia,CAAiBvB,EAAItR,KAAMsR,EAAI1Q,MAAOzM,IAAlI,UACE,cAACzF,EAAA,EAAD,CAAUkK,MAAM,MAAhB,wBACA,cAAClK,EAAA,EAAD,CAAUkK,MAAM,MAAhB,iCAQA,cA3FO0Y,EAAItR,gBAyGjC,cAACjO,EAAA,EAAD,CAAY1F,MAAM,UAAU+M,aAAW,iBAAiBmY,UAAU,OAAOxjB,QAAS,kBArRtF,WACE,IAAI6W,EAAO4I,EAAW1D,cACtB,QAAYpc,GAARkX,EAAJ,CACAA,EAAKkO,cAEL,IAAIrD,EAAQ7B,EACZ6B,EAAM3Q,OAAO3H,KAAK,CAChB6H,UAAW,OACXE,UAAW,QAEb2O,EAAS4B,GAETb,GAAiBD,GAEjBnB,EAAW7G,YAAY7J,iBAuQmEiW,IAAxF,SACE,cAAC,KAAD,Y,oBClZOC,GAvDkC,kBAC/C,eAAC,QAAD,CAAMzmB,GAAG,WAAT,UACA,eAAC,QAAD,WACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,QAKE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,sBAIJ,cAAC,aAAD,IAEA,eAAC,QAAD,WACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,aAMA,eAAC,QAAD,WACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,cAOA,cAAC,aAAD,IAEA,eAAC,QAAD,WACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,OAKE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,sBAIJ,eAAC,QAAD,WACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,OAKE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,oBACA,cAAC,GAAD,0B,UCFS0mB,G,wKArDD9T,GAAuD,IAAD,EAAtC+T,EAAsC,wDACxDC,EAAgB,UAEhB1T,EAAE,UAAGN,EAAMc,mBAAT,aAAG,EAAmBR,GAExBe,EAAE,UAAMrB,EAAMH,UAAZ,YAAyBG,EAAMD,WAKrC,YAHUxR,IAAP+R,GAAoBA,IAAIe,GAAM,mBAEhB,GAAd0S,IAAqB1S,GAAM2S,GACvB3S,I,qCAGI5B,GAAmB,IAAD,OACzBE,EAAM,GAOV,OANAF,EAAGE,OAAO/J,SAAQ,SAACuJ,EAAS7F,GACxB,IAAIya,GAAa,EACdtU,EAAGE,OAAOxL,OAAO,GAAKmF,IAAGya,GAAa,GACzCpU,GAAU,EAAKsU,UAAU9U,EAAI4U,MAG3B,gBAAN,OAAuBtU,EAAGyL,UAA1B,kBAA6CvL,EAA7C,Y,sFAOauU,GACb,IAAI7S,EAAK,GAKT,OAJA6S,EAAate,SAAQ,SAAAgF,GACjB,IAAIuZ,EAAG,sBAAkBvZ,EAAEqR,UAApB,6BAAkDrR,EAAE6Q,UAApD,wBAA6E7Q,EAAEsR,YAA/E,YAA8FtR,EAAE4Q,YAAhG,MACPnK,GAAM8S,EAAM,QAET9S,I,6BAGJmB,EAAqB0R,GAA6B,IAAD,OAEjD7S,EAAE,GAUN,OATAmB,EAAK5M,SAAQ,SAAA2E,GACV8G,GAAM,EAAK+S,eAAe7Z,GAC1B8G,GAAM,WAGTA,GAAM,KAENA,GAAMhU,KAAKgnB,iBAAiBH,O,qGCnDrBlU,GACN,MAAM,K,qCAGKP,GACX,MAAM,K,6BAGH+C,EAAe0R,GAEpB,MAAO,O,UCVDI,GCAAC,GCAAC,G,oBCyBL,SAASC,GAAcla,GAU1B,MATmB,CACXma,GAAKna,EAAEoa,IACbC,YAAcra,EAAEsa,YACnBC,mBAAqBva,EAAEwa,mBACvBC,cAAgB,GAChBC,cAAiB1a,EAAE2a,cACnBC,OAAU5a,EAAE6a,KACZC,SAAW,IAKP,SAASC,GAAcvoB,GAS1B,MARe,CACX8nB,YAAc9nB,EAAE6nB,YAChBG,mBAAqBhoB,EAAE+nB,mBACvBS,cAAgBxoB,EAAEioB,cAClBI,KAAOroB,EAAEooB,OACTD,cAAgBnoB,EAAEkoB,cAClBO,SAAWzoB,EAAEsoB,UC5Cd,SAASI,GAAcjT,GAC1B,MAAO,CACL1J,KAAMwb,GAAgBoB,eACtBC,QAASnT,GAIR,SAASoT,GAAepT,GAC7B,MAAO,CACL1J,KAAMwb,GAAgBuB,UACtBF,QAASnT,GCmBN,SAASsT,GAAWvb,GAQvB,MAPkB,CACdoa,IAAMpa,EAAEoa,IACRoB,SAAWxb,EAAEwb,SACbC,aAAezb,EAAE0b,aACjBC,UAAY3b,EAAE2b,UACdC,aAAe5b,EAAE4b,cCnClB,SAASC,GAAQhB,GACpB,MAAO,CACLtc,KAAMyb,GAAe8B,SACrBV,QAASP,GAIR,SAASkB,GAAc9T,GAC5B,MAAO,CACL1J,KAAMyb,GAAegC,UACrBZ,QAASnT,GCTN,SAASgU,GAAWhU,GACvB,MAAO,CACL1J,KAAM0b,GAAkBiC,YACxBd,QAASnT,GAKR,SAASkU,GAAclU,GAC5B,MAAO,CACL1J,KAAM0b,GAAkBmC,eACxBhB,QAASnT,GAIN,SAASoU,GAAWpU,GACzB,MAAO,CACL1J,KAAM0b,GAAkBqC,YACxBlB,QAASnT,GAIN,SAASsU,GAAc1pB,GAC5B,MAAO,CACL0L,KAAO0b,GAAkBuC,eACzBpB,QAAUvoB,GAIP,SAAS4pB,GAAYvd,GAC1B,MAAO,CACLX,KAAO0b,GAAkByC,aACzBtB,QAAUlc,GAWP,SAASyd,GAAmBpe,GACjC,MAAO,CACLA,KAAO0b,GAAkB2C,sBACzBxB,QAAU7c,I,SPhDFwb,K,gCAAAA,E,uBAAAA,Q,cCAAC,K,oBAAAA,E,0BAAAA,E,uBAAAA,Q,cCAAC,K,0BAAAA,E,gCAAAA,E,0BAAAA,E,gCAAAA,E,4BAAAA,E,4CAAAA,E,+CAAAA,Q,KMSL,ICiCFS,GDjCQmC,GAAU,WAEnB,8CAAO,WAAOC,GAAP,qBAAAC,EAAA,yDAGDC,GADAC,EAAU,sCACU,gBACpBC,EAAaD,EAAU,uBAId,MAFTE,EAAQpf,KAAQqf,IAAI,kBAEKppB,IAAVmpB,EARd,uBASCL,EAAS5B,IAAc,IACvB4B,EAASf,IAAc,IAVxB,0BAeLe,EAAS5B,IAAc,IACvB4B,EAASzB,IAAe,IAExBgC,KAAMC,SAASC,QAAQC,OAAvB,cAAiD,UAAYL,EAE7DE,KAAMI,IAAI,CACRJ,KAAMD,IAAIJ,GACVK,KAAMD,IAAIF,KAEXQ,KAAKL,KAAMM,QAAO,SAACC,EAAQC,GAI1B,GAFAf,EAAS5B,IAAc,IAEpB0C,EAAO3V,KAAKrO,OAAS,EAAE,CACtB,IACMihB,EAAOU,GADEqC,EAAO3V,KAAK,IAE3B6U,EAASjB,GAAQhB,IACjBiC,EAASf,IAAc,IAE3B,IAAI+B,EAAuB,GAC3BD,EAAU5V,KAAK5M,SAAQ,SAAC7I,GACpB,IAAMurB,EAAoB7D,GAAc1nB,GACxCsrB,EAASrgB,KAAKsgB,MAGlBjB,EAASH,GAAmB,UAE5BG,EAASb,GAAW6B,IAEpBhB,EAASzB,IAAe,QA5CrB,4CAAP,uDEsBS2C,GAAkB,SAACD,GAC5B,8CAAO,WAAOjB,GAAP,eAAAC,EAAA,4DACO,6CACN9U,EAAO8S,GAAcgD,GACzB9f,MAAMuE,KAAKC,UAAUwF,IACrB6U,EAASL,IAAY,IACrBK,EAAS5B,IAAc,IALpB,SAMcmC,KAAMY,KALb,6CAKuBhW,GAN9B,OAOe,MAPf,OAOIiW,QACHpB,EAAST,GAAW0B,IAGxBjB,EAAS5B,IAAc,IAXpB,4CAAP,uD,8ECHSiD,GAAgBC,cAAW,SAACtoB,GAAD,MAAmB,CACzDY,KAAM,CACJmc,QAAS/c,EAAMe,QAAQ,OAFEunB,CAIzBC,MAESC,GAAgBF,cAAW,SAACtoB,GAAD,MAAmB,CACzDY,KAAM,CACJE,OAAQ,EACRic,QAAS/c,EAAMe,QAAQ,OAHEunB,CAKzBG,MCjCEC,GAAuB,CACzB,CACIlb,KAAO,SACPvP,KAAO,aAEX,CACIuP,KAAO,SACPvP,KAAO,gBAEX,CACIuP,KAAO,SACPvP,KAAO,cAEX,CACIuP,KAAO,SACPvP,KAAO,aAEX,CACIuP,KAAO,SACPvP,KAAO,mBAEX,CACIuP,KAAO,SACPvP,KAAO,eAEX,CACIuP,KAAO,SACPvP,KAAO,gBAKF0qB,GAA6C,SAAC,GAAwB,IAAvB5K,EAAsB,EAAtBA,OAAS/e,EAAa,EAAbA,QACjE,OACI,eAAC4pB,GAAA,EAAD,CAAQ9pB,KAAMif,EAAQ8K,kBAAgB,sBAAtC,UACK,cAACC,GAAA,EAAD,CAAa/rB,GAAG,sBAAhB,sBACA,cAAC,GAAD,CAAegsB,UAAQ,EAAvB,SAEA,cAACC,GAAA,EAAD,UACJN,GAAazpB,KAAI,SAACgqB,GAAD,OAChB,eAACC,GAAA,EAAD,CAAUC,QAAM,EAAhB,UAEE,cAACC,GAAA,EAAD,CAAcC,QAASJ,EAAEzb,KAAMtL,MAAO,CAACyB,YAAY,MAGnD,cAACylB,GAAA,EAAD,CAAcC,QAASJ,EAAEhrB,iBAOxB,cAAC,GAAD,UACI,cAACG,EAAA,EAAD,CAAQvB,MAAM,UAAU0B,QAASS,EAAjC,yB,wCClDXc,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CAEXqpB,WAAY,CACRvG,SAAU,OACVwG,SAAU,aAOLC,GAAgD,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,QAAS1L,EAAuB,EAAvBA,OAAU/e,EAAa,EAAbA,QAExEiD,EAAUnC,KACV6B,EAAM,uCAAG,sBAAAslB,EAAA,+EAEDyC,UAAUxV,UAAUyV,UAAUF,GAF7B,OAGPG,KAAMC,QAAQ,qBAHP,+CAKPD,KAAME,MAAM,kBALL,wDAAH,qDASZ,OACI,eAAClB,GAAA,EAAD,CAAQ9pB,KAAMif,EAAQ8K,kBAAgB,eAAe5mB,QAAS,CAAE8nB,MAAO9nB,EAAQqnB,YAA/E,UACA,cAACR,GAAA,EAAD,CAAa/rB,GAAG,eAAhB,+BACA,cAAC,GAAD,UAEE,cAAC4lB,GAAA,EAAD,CAEE7hB,OAAO,QACP/D,GAAG,UACH0S,MAAM,WACNua,WAAS,EACT5gB,MAAOqgB,EACPQ,WAAY,CACRC,aACE,cAACC,GAAA,EAAD,CAAgBhqB,SAAS,MAAzB,SACE,cAACoC,EAAA,EAAD,CAAYhE,QAASoD,EAArB,SACI,cAAC,KAAD,aAOhB,cAAC,GAAD,UACE,cAACvD,EAAA,EAAD,CAAQG,QAASS,EAASnC,MAAM,UAAhC,2B,SJlBL+nB,O,mBAAAA,I,qBAAAA,I,0BAAAA,Q,KAUE,IKtDKwF,GLsDCC,GAA4B,WAAO,IAEzCjkB,EAAcC,cAAdD,UAEA2e,EAAOre,cAAY,SAACC,GAAD,OAAsBA,EAAM2jB,YAAYvF,QAE3DwF,EAAkB7jB,cAAY,SAACC,GAAD,OAAsBA,EAAM6jB,eAAeD,mBAEzEE,EAAU/jB,cAAY,SAACC,GAAD,OAAsBA,EAAMC,aAAa6jB,WAE/DC,EAAYhkB,cAAY,SAACC,GAAD,OAAsBA,EAAM2O,aAAaqV,YAEjEC,EAAaF,EAAY,OAAS,QAElC1D,EAAW6D,eAEXvkB,EAAUC,cAhB8B,EAkBF9I,oBAAS,GAlBP,mBAkBvCqtB,EAlBuC,KAkBvBC,EAlBuB,OAoBlBttB,oBAAS,GApBS,mBAoBvCutB,EApBuC,aAsBJvtB,oBAAS,IAtBL,mBAsBxBwtB,GAtBwB,aAwBhBxtB,mBAAS,IAAIuZ,IAxBG,mBAwBvC/Q,EAxBuC,aA0BFxI,mBAsK5C,WACWoU,eAWV,MAVuB,CACtB0S,YAAa,aACbE,mBAAoB,cACpBE,cAAe,GACfC,cAAeA,GAAcsG,QAC7BpG,OAAQC,EAAKT,IACbU,SAAU,OA9KyCmG,KA1BP,mBA0BvCC,EA1BuC,KA0BvBC,EA1BuB,OA4Bd5tB,mBAAS,IA5BK,mBA4B7B6tB,GA5B6B,aA8BF7tB,oBAAS,GA9BP,mBA8BvC8tB,EA9BuC,KA8BvBC,EA9BuB,OAgCV/tB,oBAAS,GAhCC,mBAgC3BguB,GAhC2B,aAkCpBhuB,oBAAS,GAlCW,mBAkCvC2f,EAlCuC,KAkC/BsO,EAlC+B,OAoCJjuB,oBAAS,GApCL,mBAoCvCkuB,EApCuC,KAoCxBC,EApCwB,OAsCVnuB,oBAAS,GAtCC,mBAsCvCouB,EAtCuC,KAsC3BC,GAtC2B,QAwChBruB,mBAAS,IAxCO,qBAwCvCgsB,GAxCuC,MAwC9BsC,GAxC8B,MA0CxCC,GAAYC,aAAe,CAChC1rB,QAAS,CACRkI,KAAMmiB,EACNvB,QAAS,CACR6C,KAAM,UACNC,KAAM,WAEPtrB,UAAW,CACVqrB,KAAM,UACNC,KAAM,cA8CT,SAASC,KAERnmB,EAAQkR,YAAYtK,WAAW+K,YAAYrS,SAAQ,SAAAxH,GAClDA,EAAKsb,iBAAiB,CACrBG,iBAAkB,SAAC7U,GAAD,OAoBrB,SAAsBA,GACrB,IAAI0nB,EAAwB1nB,EAAE+Q,WAC9BqV,EAAkBsB,GAtBcC,CAAa3nB,SA5C9C2C,qBAAU,WACTrB,EAAQkR,YAAYkC,iBAAiB,CACpCzD,cAAe,kBAAM2W,QAKvB,WAEC,IAGIC,EAHWlmB,EAAQmmB,SAASC,SACPC,MAAM,KAEN,GAErBtF,EAAQpf,KAAQqf,IAAI,WACxB,QAAcppB,IAAVmpB,GAAiC,KAAVA,EACT,UAAbmF,GACHhB,GAAkB,GAClBoB,MAEAtmB,EAAQqB,KAAK,cAGR,CACN4f,KAAMC,SAASC,QAAQC,OAAvB,cAAiD,UAAYL,EACxDoD,GACJzD,EAASD,MAGV,IAGIyF,EAHWlmB,EAAQmmB,SAASC,SACPC,MAAM,KAEN,GAER,WAAbH,GAAuBI,KACV,gBAAbJ,GAeN,WACC,IAAIK,EAAalZ,aAAaM,QAAQ,YACtC,GAAmB,OAAf4Y,EAAqB,OACzB,IACIC,EADoBpgB,KAAKyH,MAAM0Y,GACV7N,MAAK,SAAAtiB,GAAC,OAAIA,EAAE2nB,KAAOje,KAC5C,QAAkBlI,IAAd4uB,EAAyB,OAC7B,IAAIC,EAAS3B,EACb2B,EAAOxI,YAAcuI,EAAUvI,YAC/BwI,EAAOtI,mBAAqBqI,EAAUrI,mBACtCxe,EAAQ+mB,iBAAiBF,EAAUnI,eACnC0G,EAAkB0B,GAClBX,KA1BiCa,IA/BjCC,KACE,IAgEH,IAAMN,GAAqB,WAC1B,IAEIO,EAAqB,kBADP5B,EAAmC,cAAjB,eACX,KAA0BnlB,EACnDmhB,KAAMD,IAHQ,sCAGM6F,GAAoBvF,MAAK,SAAA5W,GAC5Coa,EAAe7G,YAAcvT,EAAGmB,KAAKqS,YACrC4G,EAAe3G,mBAAqBzT,EAAGmB,KAAKuS,mBAC5Cze,EAAQ+mB,iBAAiBhc,EAAGmB,KAAK+S,eACjCkH,SAtI4C,8CA+J9C,oCAAAnF,EAAA,6DACOmG,EAAahC,EACL,sCACViC,EAAM,kBAAoBjnB,EACxBgH,EAAQnH,EAAQkR,YAAYtK,WAAW6G,YACvC4Z,EAAW5gB,KAAKC,UAAUS,GAEhCggB,EAAWzI,cAAgB2I,EACvBnb,EAAO8S,GAAcmI,GACzBpG,EAAS5B,IAAc,IATxB,UAUkBmC,KAAMgG,IART,sCAQuBF,EAAKlb,GAV3C,eAWC6U,EAAS5B,IAAc,IACvBwE,KAAMC,QAAQ,uBAZf,6CA/J8C,sBA8K9C,SAAS2D,GAAUC,GAClB,IAAIrY,EAAOpO,SAASC,eAAe,aACvB,MAARmO,GACJsY,KAAkBtY,GAChBwS,MAAK,SAAU+F,IACL,IAAIC,OACVlmB,IAAMimB,EACV,IAAI1G,EAAIjgB,SAAS6mB,cAAc,KAE/B5G,EAAE1d,KAAOokB,EACT1G,EAAE6G,SAAWL,EACbxG,EAAE8G,WAEFC,OAAM,SAAUlE,GAChBnnB,QAAQmnB,MAAM,8BAA+BA,MAoDhD,SAASyC,KACRb,GAAStO,GAYV,SAAS6Q,KACR,IAAIC,EAAYjoB,EAAQkR,YAAYtK,WAAW6G,YAC3Cya,EAAWzhB,KAAKC,UAAUuhB,GAC9B5C,EAAY6C,GACZC,GAAahD,EAAe7G,YAAc,MAAO4J,GAiBlD,SAASE,GAAW1pB,GACnBhC,QAAQC,IAAI,WA6Cb,SAASwrB,GAAaE,EAAkBhpB,GACvC,IAAI2hB,EAAIjgB,SAAS6mB,cAAc,KAC/B5G,EAAEsH,aAAa,OAAQ,iCAAmCC,mBAAmBlpB,IAC7E2hB,EAAEsH,aAAa,WAAYD,GAE3BrH,EAAE/kB,MAAMa,QAAU,OAClBiE,SAASynB,KAAKC,YAAYzH,GAE1BA,EAAE8G,QAEF/mB,SAASynB,KAAKE,YAAY1H,GAG3B,SAAS2H,GAAanB,EAAkBoB,GACvC,IAAIC,EMhYN,SAAqB7oB,GACjB,IAAI+K,EAAmB,GAYvB,OAXY/K,EAAQkR,YAAYtK,WAAWwN,WACrC9U,SAAQ,SAAA6J,GACZ,IAAIjB,EAAMiB,EAAGF,aAAaf,UACfjQ,GAARiQ,IAAmBA,EAAO,IAC7B,IAAI6B,EAAkB,CACpBjT,GAAKqS,EAAGX,QACRoM,UAAY1M,EACZmB,OAASF,EAAGG,eAEdyB,EAAGrJ,KAAKqI,MAEHgB,ENmXC+d,CAAY9oB,GAClB4d,EAAe5d,EAAQ+oB,kBAE3BZ,GAAaX,EADHoB,EAAQI,OAAOH,EAAKjL,IAU/B,SAAS9X,KAAW9F,EAAQipB,OAAO,IAEnC,SAASljB,KAAY/F,EAAQipB,QAAQ,IA4ErC,OACC,eAACC,GAAA,EAAD,CAAenvB,MAAOgsB,GAAtB,UACC,cAAC,GAAD,CAAY/lB,QAASA,EAASC,SA3NhC,SAAoBnJ,GAEnB,OAAQA,GACP,IAAK,SACJywB,GAAUpC,EAAe7G,YAAc,QACvC,MACD,IAAK,UACJ0J,KACA,MACD,IAAK,WACJW,GAAaxD,EAAe7G,YAAY,OAAS,IAAId,IACrD,MACD,IAAK,SAGL,IAAK,eACJtb,MAAM,eAOG,iBAAPpL,EAEHkuB,GAAiB,GAEA,oBAAPluB,GACV0uB,GAAc,IA+LsC9uB,OAAQ+tB,EAC3DvkB,OAjSH,WClE+B,IAACipB,EDoE/B,GAAG7D,EACF3B,KAAME,MAAM,qDAIb,GAAwB,UAApBS,GAjJyC,oCAkJ5C8E,QACM,GAAwB,WAApB9E,EAA8B,CACxC,IAAMnd,EAAQnH,EAAQkR,YAAYtK,WAAW6G,YACzCsX,EAA4B,CAC/BjuB,GAAIqJ,EACJ+L,KAAMzF,KAAKC,UAAUS,IAEtB4Z,GCjF8BoI,EDiFJpE,EChFzB,uCAAO,WAAOhE,GAAP,mBAAAC,EAAA,yDAIgB,QAFf4F,EAAalZ,aAAaM,QAAQ,aAFnC,oBAKK6Y,EAAmBpgB,KAAKyH,MAAM0Y,GAClClqB,QAAQC,IAAIkqB,GACZnqB,QAAQC,IAAIwsB,EAAWryB,KAEP,KADZ4R,EAAUme,EAAUle,WAAU,SAAAlS,GAAC,OAAEA,EAAE2nB,KAAO+K,EAAWryB,OAR1D,iDAUC4F,QAAQC,IAAI+L,GACZhM,QAAQC,IAAIkqB,EAAUne,IACtBme,EAAUne,GAASgW,cAAgByK,EAAWjd,KAC9CwB,aAAaC,QAAQ,WAAYlH,KAAKC,UAAUmgB,IAbjD,4CAAP,wDDiFDlD,KAAMC,QAAQ,yBAiRUrsB,eAAgBstB,EAAgB9kB,WAvC1D,SAAoBspB,GACnB,OAAQA,GACP,IAAK,eACJ1D,GAAiB,GACjB,MACD,IAAK,aACJX,GAAiB,GACjB,MACD,IAAK,cAnIP,WACC,IAAIlkB,EAAOC,SAASC,eAAe,cACnC,GAAIF,GAAQC,SAASE,YAAa,CACjC,IAAIC,EAAMH,SAASE,YAAY,eAC/BC,EAAIC,UAAU,SAAS,GAAM,GAC7BL,EAAKM,cAAcF,IA+HlBL,GACA,MACD,IAAK,YACJ,IAAI+J,EAAOvK,EAAQmmB,SAASC,SACxB6C,EAAY1e,EAAK8b,MAAM,KAC3B9b,EAAO,mCAA0C0e,EAAU,GAC3DxD,GAAWlb,GACXib,IAAc,OAwBf,cAAC,GAAD,CAASxqB,SAAUyK,GAAQxK,UAAU,EAAO5E,OAAQ+tB,EAAWtpB,OAAQ6E,EAAQsR,KAC9E/V,UAAWwK,GAASvK,UAAWwE,EAAQiR,QAASxV,SArLnD,WACCuE,EAAQupB,UACRpD,MAmLsEjrB,OAAQ8E,EAAQqR,KACpF1V,MAAOqE,EAAQ4B,YAAa/F,MAAOmE,EAAQ6B,eAAgB5G,mBAnB9D,SAAyBiN,GACxB,GAAY,eAATA,EAAH,CASAlI,EAAQwpB,YALY,CACnB,OAAS,IACT,MAAQ,GACR,MAAQ,IAEmBthB,SAR3BlI,EAAQiR,WAkBPrV,MAAOoE,EAAQ8B,kBAAmB1G,aAAcypB,EAAgBnpB,OAAQsE,EAAQ2B,eAEjF,cAAC,GAAD,CAAcmW,OAAQ4N,EAAe3sB,QAAS,kBAAM4sB,GAAiB,MAErE,cAAC,GAAD,CAAY7N,OAAQ8N,EAAYpC,QAASA,GAASzqB,QAAS,kBAAI8sB,IAAc,MAE7E,uBAAOrjB,KAAK,OAAOvG,MAAO,CAAEa,QAAS,QAAUhG,GAAG,aAAa2L,SAAU,kBAAM2lB,MAE/E,uBAAO5lB,KAAK,OAAOvG,MAAO,CAAEa,QAAS,QAAUhG,GAAG,aAAa2L,SAnL5C,SAAC/D,GACrBhC,QAAQC,IAAI+B,MAoLX,cAAC,GAAD,CAAaoZ,OAAQX,EAAQY,WAAY/X,EACxCgY,QAASsO,GAAcrO,YAAa8M,IAErC,cAAC,gBAAD,CAAcjuB,GAAG,UAAU6X,UAAU,EAArC,SACC,cAAC,EAAD,CAAkBhY,WAAW,QAAQC,MAAM,UAAUF,OAAQ+tB,EAA7D,SACC,cAAC,eAAD,CAAc9d,OAAQ3G,EAAQ2G,OAAQtK,UAAU,eAIlD,cAAC,GAAD,IAEA,cAAC,GAAD,CAAcoJ,SAAUzF,EAAQ2B,aAAc+D,UAAW1F,EAAQoR,cAAezL,WAAY3F,EAAQ6B,eACnG+D,cAAe5F,EAAQ8B,kBAAmB+D,QAAS7F,EAAQ4B,YAC3DkE,OAAQA,GAAQC,QAASA,GAASC,SAAUhG,EAAQqR,KAAMpL,SAAUjG,EAAQsR,W,uIOpe1EzX,GAAYC,aAAW,SAACC,GAAD,MAAY,CAEvC0vB,OAAQ,CACNrwB,MALgB,IAMhBswB,WAAY,GAGdC,QAAQ,gBAEH5vB,EAAM6vB,OAAOD,SAGlBjqB,WAAa,CACXtG,MAAOW,EAAMe,QAAQ,GACrBzB,OAAQU,EAAMe,QAAQ,IAGtB+uB,YAAa,CACXzvB,gBAAkB,UACpBxD,MAAQ,QAEJsD,SAAU,WACV4vB,WAAY,SACZ1wB,MAzBY,IA0BZ6E,WAAYlE,EAAMgwB,YAAYC,OAAO,QAAS,CAC5CC,OAAQlwB,EAAMgwB,YAAYE,OAAOC,MACjCC,SAAUpwB,EAAMgwB,YAAYI,SAASC,kBAGzCC,YAAY,cACVvtB,QAAS,OACTwtB,WAAY,SACZ9vB,eAAgB,WAChBsc,QAAS,SACN/c,EAAM6vB,OAAOD,aAKXY,GAA6B,WAEtC,IAAMvuB,EAAUnC,KAEVilB,EAAOre,cAAY,SAACC,GAAD,OAAqBA,EAAM2jB,YAAYvF,QAE1Dze,EAAUC,cAEVkqB,EAAa,SAAC/zB,GAElB4J,EAAQqB,KAAK,aAAajL,IAG5B,OACI,eAAC2kB,GAAA,EAAD,CACA7Z,QAAQ,YACRlF,UAAWL,EAAQytB,OACnBztB,QAAS,CACP8nB,MAAO9nB,EAAQ6tB,aAEjBxO,OAAO,OANP,UASA,qBAAKhf,UAAWL,EAAQ2tB,QAAxB,SACE,eAACnN,GAAA,EAAD,CAAK1f,QAAQ,OAAO2f,cAAc,SAAS6N,WAAW,SAAtD,UAEA,cAAC9oB,GAAA,EAAD,CAAQipB,IAAI,aACZxuB,MAAO,CAAC2b,UAAU,IAAMvb,UAAWL,EAAQ0D,WAD3C,SAEE,cAAC,KAAD,CAAmBzD,MAAO,CAACY,SAAS,QAEtC,cAAC2a,GAAA,EAAD,CAAYvb,MAAO,CAACpB,OAAO,GAAKgC,SAAS,IAAzC,SAA+CiiB,EAAKW,WAEpD,oBAAIxjB,MAAO,CAAC7C,MAAM,YAMpB,cAAC2pB,GAAA,EAAD,UACA,gCACA,eAACE,GAAA,EAAD,CAAUC,QAAM,EAAC5qB,QAAS,kBAAMkyB,EAAW,eAA3C,UACI,cAACE,GAAA,EAAD,UACE,cAAC,KAAD,CAA8B9zB,MAAM,UAAUqF,MAAO,CAACrF,MAAM,aAE9D,cAACusB,GAAA,EAAD,CAAcC,QAAQ,mBAExB,eAACH,GAAA,EAAD,CAAUC,QAAM,EAAC5qB,QAAS,kBAAMkyB,EAAW,aAA3C,UACE,cAACE,GAAA,EAAD,UACE,cAAC,KAAD,CAAe9zB,MAAM,UAAUqF,MAAO,CAACrF,MAAM,aAE/C,cAACusB,GAAA,EAAD,CAAcC,QAAQ,iBAExB,eAACH,GAAA,EAAD,CAAUC,QAAM,EAAC5qB,QAAS,kBAAMkyB,EAAW,aAA3C,UACE,cAACE,GAAA,EAAD,CAAc9zB,MAAM,cAApB,SACE,cAAC,KAAD,CAAkBqF,MAAO,CAACrF,MAAM,aAElC,cAACusB,GAAA,EAAD,CAAcC,QAAQ,gBAExB,eAACH,GAAA,EAAD,CAAUC,QAAM,EAAC5qB,QAAS,kBAAMkyB,EAAW,WAA3C,UACE,cAACE,GAAA,EAAD,UACE,cAAC,KAAD,CAAYzuB,MAAO,CAACrF,MAAM,aAE5B,cAACusB,GAAA,EAAD,CAAcC,QAAQ,iBAGxB,eAACH,GAAA,EAAD,CAAUC,QAAM,EAAC5qB,QAAS,kBAAMkyB,EAAW,WAA3C,UACE,cAACE,GAAA,EAAD,UACE,cAAC,KAAD,CAAYzuB,MAAO,CAACrF,MAAM,aAE5B,cAACusB,GAAA,EAAD,CAAcC,QAAQ,uBClI3B,SAASuH,GAAeC,GAC3B,MAAO,CACLpoB,KAAM2hB,GAAgB0G,UACtBxL,QAASuL,I,SHLHzG,K,sBAAAA,E,yBAAAA,Q,KIYL,IAAM2G,GAAS,SAACC,GACnB,8CAAO,WAAOhK,GAAP,mBAAAC,EAAA,4DACK,gDADL,kBAGYM,KAAMY,KAFb,gDAEwB6I,GAH7B,OAGChgB,EAHD,OAIHrO,QAAQC,IAAIoO,GAEK,MAAdA,EAAGoX,QAEqB,MADnBjW,EAAOnB,EAAGmB,MACR8e,eACJrH,KAAMC,QAAQ,gBACd5hB,KAAQC,IAAI,UAAYiK,EAAK8e,cACvBlM,EAAcU,GAAWtT,GAC/B6U,EAASjB,GAAQhB,IACjBiC,EAASf,IAAc,KAb1B,gDAmBHtjB,QAAQC,IAAR,MACAgnB,KAAME,MAAM,0BApBT,yDAAP,uDA2BSoH,GAAW,SAACnM,GACvB,8CAAO,WAAOiC,GAAP,mBAAAC,EAAA,4DACK,mDADL,kBAIYM,KAAMY,KAHb,mDAGwBpD,GAJ7B,OAIC/T,EAJD,OAOsB,MADnBmB,EAAOnB,EAAGmB,MACR8e,eACFhpB,KAAQC,IAAI,UAAYiK,EAAK8e,cACvBlM,EAAcU,GAAWtT,GAC/B6U,EAASjB,GAAQhB,IACjBiC,EAASf,IAAc,KAX1B,gDAgBHtjB,QAAQC,IAAI,KAAMuuB,UAClBnK,EAAS4J,GAAe,KAAMO,SAAShf,KAAKif,UAjBzC,yDAAP,uD,qBCrBItxB,GAAYC,aAAW,SAACC,GAAD,MAAY,CAEvC4vB,QAAS,CACPyB,aAAc,IAGhBC,OAAQ,CACNjyB,MAAM,eAAD,OAVW,IAUX,OACLmK,WAXgB,IAYhBtF,WAAYlE,EAAMgwB,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQlwB,EAAMgwB,YAAYE,OAAOC,MACjCC,SAAUpwB,EAAMgwB,YAAYI,SAASmB,iBAIzCzrB,WAAY,CACVnC,YAAa,IAGfiC,MAAO,CACL5C,SAAU,OAODwuB,GAA8B,WAEvC,IAAMlrB,EAAUC,cAIVygB,GAFOtgB,cAAY,SAACC,GAAD,OAAsBA,EAAM2jB,YAAYvF,QAEhD8F,gBAEX5oB,EAAUnC,KAEV2xB,EAAQ,uCAAG,sBAAAxK,EAAA,sEACPD,EDSZ,uCAAO,WAAOA,GAAP,SAAAC,EAAA,sDACLhf,KAAQC,IAAI,UAAY,IAExB8e,EAASjB,Gb1DO,CACZzB,IAAM,GACNoB,SAAW,OACXC,aAAgB,GAChBE,UAAY,GACZC,aAAe,MasDnBkB,EAASf,IAAc,IACvBe,EAASb,GAAW,KALf,2CAAP,uDCVmB,OAEb7f,EAAQqB,KAAK,UAFA,2CAAH,qDAKd,OACE,cAACJ,GAAA,EAAD,CAASjF,UAAWL,EAAQqvB,OAAQzyB,UAAW,EAAGsB,SAAS,QAAQtD,MAAM,cAAzE,SACA,eAAC,KAAD,CAASyF,UAAWL,EAAQ2tB,QAA5B,UACE,cAACrtB,EAAA,EAAD,CACEoH,KAAK,QACL9M,MAAM,UACN+M,aAAW,cACXtH,UAAWL,EAAQ6D,WAJrB,SAME,cAAC,KAAD,MAEF,cAAC2X,GAAA,EAAD,CAAYsE,UAAU,KAAKva,QAAQ,KAAK3K,MAAM,UAAU60B,QAAM,EAACpvB,UAAWL,EAAQ2D,MAAlF,uBAGA,cAACrD,EAAA,EAAD,CAAY1F,MAAM,UAAU0B,QAASkzB,EAArC,SAEI,cAAC,KAAD,Y,8BC9DCE,GAAgD,SAAC,GAAoC,IAAnC5T,EAAkC,EAAlCA,OAAS/e,EAAyB,EAAzBA,QAAU4yB,EAAe,EAAfA,UAE1E9zB,EAAc,WAClBkB,KAOF,OACE,8BAEE,eAAC4pB,GAAA,EAAD,CACE9pB,KAAMif,EACN/e,QAASlB,EACT+qB,kBAAgB,qBAChBgJ,mBAAiB,2BAJnB,UAME,cAAC/I,GAAA,EAAD,CAAa/rB,GAAG,qBAAhB,SAAsC,sCACtC,cAACsrB,GAAA,EAAD,UACE,cAACyJ,GAAA,EAAD,CAAmB/0B,GAAG,2BAAtB,6IAKF,eAACyrB,GAAA,EAAD,WACE,cAACpqB,EAAA,EAAD,CAAQG,QAAST,EAAajB,MAAM,UAApC,sBAGA,cAACuB,EAAA,EAAD,CAAQG,QAxBM,WACpBqzB,KAuBsC/0B,MAAM,UAAUk1B,WAAS,EAAzD,4B,oFClBGC,GAA8B,WAEzC,IAAM1rB,EAAUC,cAEVygB,EAAW6D,eAJ8B,EAMHptB,oBAAS,GANN,mBAMxCw0B,EANwC,KAMxBC,EANwB,OAQLz0B,mBAAS,IARJ,mBAQxCG,EARwC,KAQzBC,EARyB,KAUzCmqB,EAAWthB,cAAY,SAACC,GAAD,OAAsBA,EAAM6jB,eAAexC,YAElEuC,EAAkB7jB,cAAY,SAACC,GAAD,OAAsBA,EAAM6jB,eAAeD,mBAezE4H,EAAiB,SAAC1pB,GACZ,WAAPA,EACDue,EXuBF,uCAAO,WAAOA,GAAP,mBAAAC,EAAA,yDACCmL,EAAcze,aAAaM,QAAQ,YACnCjD,EAAY,GACI,OAAhBohB,EAHD,uBAICze,aAAaC,QAAQ,WAAYlH,KAAKC,UAAUqE,IAJjD,0BAOHgW,EAASH,GAAmB,YAExBmB,EAAkBtb,KAAKyH,MAAMie,IAExB7sB,SAAQ,SAAA7I,GACbA,EAAEioB,cAAgB,MAGtBqC,EAASb,GAAW6B,IAfjB,2CAAP,uDWtBgB,UAAPvf,GACPue,EX5CF,uCAAO,WAAOA,GAAP,iBAAAC,EAAA,6DAEHD,EAAS5B,IAAc,IAFpB,SAGcmC,KAAMD,IAFb,0DADP,OAIe,OADZtW,EAHH,QAIIoX,SACCJ,EAAsB,GAC1BhX,EAAGmB,KAAK5M,SAAQ,SAAC7I,GACb,IAAMurB,EAAmB7D,GAAc1nB,GACvCsrB,EAASrgB,KAAKsgB,MAGlBjB,EAASb,GAAW6B,IAEpBhB,EAASH,GAAmB,WAGhCG,EAAS5B,IAAc,IAhBpB,2CAAP,wDWwDF,OAEE,eAAC3C,GAAA,EAAD,CAAK1f,QAAQ,OAAb,UAEI,eAAC0f,GAAA,EAAD,CAAK/lB,EAAG,EAAGsG,SAAU,EAArB,UACE,2CACA,eAACgmB,GAAA,EAAD,WACA,eAACE,GAAA,EAAD,CAAUC,QAAM,EAAC5qB,QAAS,kBAAI4zB,EAAe,UAAUrd,SAA8B,UAApByV,EAAjE,UACA,cAACoG,GAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACvH,GAAA,EAAD,CAAcC,QAAQ,aAExB,eAACH,GAAA,EAAD,CAAUC,QAAM,EAAC5qB,QAAS,kBAAI4zB,EAAe,WAAWrd,SAA8B,WAApByV,EAAlE,UACE,cAACoG,GAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACvH,GAAA,EAAD,CAAcC,QAAQ,cAExB,eAACH,GAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACwH,GAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACvH,GAAA,EAAD,CAAcC,QAAQ,oBAMxB,cAAC7mB,EAAA,EAAD,CAASC,YAAY,WAAWC,UAAQ,EAACR,MAAO,CAAC5C,OAAO,UAExD,cAACmjB,GAAA,EAAD,CAAK/lB,EAAG,EAAGsG,SAAU,EAArB,SACA,eAACgmB,GAAA,EAAD,WACChB,EAAS/oB,KAAI,SAACvC,GAAD,OACZ,eAACwsB,GAAA,EAAD,WACE,cAAC,IAAD,CAAMmJ,GAAI,uBA1CVn0B,KADQnB,EA2CeL,EAAE2nB,IA1CP,IACS,UAApBkG,EAA+B,UAAY,gBACtC,IAAMxtB,EAHX,IAACA,GA2CR,SACE,cAACu1B,GAAA,EAAD,UACE,cAAC7qB,GAAA,EAAD,UACE,cAAC,KAAD,UAKN,cAAC2hB,GAAA,EAAD,CACEC,QAAS3sB,EAAE6nB,YACX1jB,UAAW,wBAEb,eAAC0xB,GAAA,EAAD,WACA,cAAChwB,EAAA,EAAD,CAAYoH,KAAK,MAAMC,aAAW,SAASrL,QAAS,kBAAM+H,EAAQqB,KAAK,yBAAyBjL,EAAE2nB,KAAlG,SACI,cAAC,KAAD,MAEF,cAAC9hB,EAAA,EAAD,CAAYoH,KAAK,MAAMC,aAAW,SAASrL,QAAS,uBA/EnDL,KADSnB,EAgF6DL,EAAE2nB,MA/E7DtnB,EAAK,IAC3Bm1B,GAAkB,QAClBr0B,EAAiBd,GAHE,IAACA,GAgFV,SACE,cAAC,IAAD,WAlBSL,EAAE2nB,OAwBnB,cAAC,GAAD,CAAetG,OAAQkU,EAAgBjzB,QAAS,kBAAMkzB,GAAkB,IAAQN,UAjFhE,WXkBU,IAAC70B,GWjB/BoL,MAAMvK,GACNs0B,GAAkB,GACI,KAAlBt0B,IACJopB,GXc+BjqB,EWdHa,EXe5B,uCAAO,WAAOopB,GAAP,eAAAC,EAAA,6DACCuL,EAAM,qDAAuDz1B,EACjEiqB,EAAS5B,IAAc,IAFpB,SAGcmC,KAAMkL,OAAOD,GAH3B,OAIe,MAJf,OAIIpK,QACHpB,EAASP,GAAc1pB,IAE3BiqB,EAAS5B,IAAc,IAPpB,2CAAP,oEY1DSsN,GAA+B,WAExC,IAAM3N,EAAOre,cAAY,SAACC,GAAD,OAAsBA,EAAM2jB,YAAYvF,QAFnB,EAIdtnB,mBAAS,IAJK,mBAIvCioB,EAJuC,KAI7BiN,EAJ6B,OAMNl1B,mBAAS,IANH,mBAMvCkoB,EANuC,aAQZloB,mBAAS,KARG,mBAQvCooB,EARuC,KAQ5B+M,EAR4B,OAUNn1B,mBAAS,IAVH,mBAUvCqoB,EAVuC,KAUzB+M,EAVyB,KAYxC7L,EAAW6D,eAEjBvjB,qBAAU,WACNa,MAAM,kBACNyqB,EAAa7N,EAAKc,WAClB8M,EAAY5N,EAAKW,UACjBmN,EAAgB9N,EAAKe,gBACtB,IA+BH,OACI,eAACrD,GAAA,EAAD,CAAKzf,SAAU,EAAf,UAEI,cAAC2f,GAAA,EAAD,CAAWlT,MAAM,aAAarG,MAAOyc,EACpCnd,SAAU,SAAC/D,GAAD,OAAOiuB,EAAajuB,EAAElB,OAAO2F,QAAS4gB,WAAS,EAAC9nB,MAAO,CAAEpB,OAAQ,KAE5E,cAAC6hB,GAAA,EAAD,CAAWlT,MAAM,YAAYrG,MAAOsc,EAChChd,SAAU,SAAC/D,GAAD,OAAOguB,EAAYhuB,EAAElB,OAAO2F,QAAQ4gB,WAAS,EAAC9nB,MAAO,CAAEpB,OAAQ,KAE7E,cAAC6hB,GAAA,EAAD,CAAWlT,MAAM,gBAAgBrG,MAAO0c,EACpCpd,SAAU,SAAC/D,GAAD,OAAOkuB,EAAgBluB,EAAElB,OAAO2F,QAAS4gB,WAAS,EAAC9nB,MAAO,CAAEpB,OAAQ,KAElF,cAAC1C,EAAA,EAAD,CAAQG,QAzCD,WAEX,IAAIu0B,EAAiB,6BACd/N,GADc,IAEjBc,YACAH,WACAC,eACAG,iBAGJgN,EAAWnN,aAAe,QAE1Bxd,MAAMuE,KAAKC,UAAUmmB,IAErB,IAAIN,EAAM,2CAA6CzN,EAAKT,IAE5DiD,KAAMgG,IAAIiF,EAAMM,GAAYlL,MAAK,SAAA5W,GAE7B,GADArO,QAAQC,IAAIoO,GACK,MAAdA,EAAGoX,OAAe,CACf,IAAIN,EAASrC,GAAWzU,EAAGmB,MAC3BxP,QAAQC,IAAIklB,GACZd,EAASjB,GAAQ+M,SAoBvB,sBC1DCC,GAAkC,WAE3C,IAAIC,EAAM,GAFuC,EAIfv1B,mBAAS,IAJM,mBAI1C2I,EAJ0C,KAI/B6sB,EAJ+B,KAM3C1I,EAAkB7jB,cAAY,SAACC,GAAD,OAAqBA,EAAM6jB,eAAeD,mBAExE2I,EAASxsB,cAAY,SAACC,GAAD,OAAqBA,EAAM2jB,YAAYvF,KAAKT,OAEjE0D,EAAWthB,cAAY,SAACC,GAAD,OAAqBA,EAAM6jB,eAAexC,YAVtB,EAYLvqB,mBpBdzB,CACf4mB,GAAK,GACLE,YAAc,GACdE,mBAAqB,GACrBK,OAAS,GACTF,cAAgB,EAChBI,SAAY,GACZL,cAAgB,KoBL6B,mBAY1CyG,EAZ0C,KAY1BC,EAZ0B,KAc3CoB,EAAWhmB,cAEXH,EAAUC,cAEVygB,EAAW6D,eAlBgC,EAoBXptB,mBAAS,IApBE,mBAoB1C8mB,EApB0C,KAoB7B4O,EApB6B,OAsBG11B,mBAAS,IAtBZ,mBAsB1CgnB,EAtB0C,KAsBtB2O,EAtBsB,KAwBpC1sB,cAAY,SAACC,GAAD,OAAuBA,EAAM2jB,YAAYvF,QAElEzd,qBAAU,YAIV,WACI,IAAI+rB,EAAM5G,EAASC,SAASC,MAAM,KAElC,GAAG0G,EAAIvvB,OAAS,EAAE,CACdkvB,EAAMK,EAAI,GACVJ,EAAaD,GAEb,IAAIM,EAActL,EAAShJ,MAAK,SAAAtiB,GAAC,OAAEA,EAAE2nB,KAAO2O,UACzB90B,IAAhBo1B,IACCjI,EAAkBiI,GAClBnrB,MAAM,eAAiBuE,KAAKC,UAAU2mB,IACtCH,EAAeG,EAAY/O,aAC3B6O,EAAsBE,EAAY7O,sBAf1C0G,KACD,IAyDH,OACI,eAAC1I,GAAA,EAAD,CAAKzf,SAAU,EAAf,UAEI,cAAC2f,GAAA,EAAD,CAAWlT,MAAM,eAAerG,MAAOmb,EACnC7b,SAAU,SAAC/D,GAAD,OAAOwuB,EAAexuB,EAAElB,OAAO2F,QAAQ4gB,WAAS,EAAC9nB,MAAO,CAAEpB,OAAQ,KAChF,cAAC6hB,GAAA,EAAD,CAAWlT,MAAM,sBAAsBrG,MAAOqb,EAC1C/b,SAAU,SAAC/D,GAAD,OAAOyuB,EAAsBzuB,EAAElB,OAAO2F,QAAQ4gB,WAAS,EAAC9nB,MAAO,CAAEpB,OAAQ,KACvF,cAAC6hB,GAAA,EAAD,CAAWlT,MAAM,cAAc5M,UAAQ,EAACmnB,WAAS,EAAC9nB,MAAO,CAAEpB,OAAQ,KACnE,cAAC6hB,GAAA,EAAD,CAAWlT,MAAM,cAAc5M,UAAQ,EAACmnB,WAAS,EAAC9nB,MAAO,CAAEpB,OAAQ,KACnE,cAAC1C,EAAA,EAAD,CAAQG,QA9CD,WbwCY,IAAC0pB,EatCxBmD,EAAetG,OAASoO,EACxB9H,EAAe7G,YAAcA,EAC7B6G,EAAe3G,mBAAqBA,OAElBvmB,IAAfkI,GAA0C,KAAdA,EACJ,WAApBmkB,GACC5nB,QAAQC,IAAI,cACZwoB,EAAe/G,GAAKxS,eACpBmV,Gb8BgBiB,Ea9BSmD,Eb+BrC,uCAAO,WAAOpE,GAAP,iBAAAC,EAAA,sDAIgB,QAFf4F,EAAalZ,aAAaM,QAAQ,gBAG9B6Y,EAAmBpgB,KAAKyH,MAAM0Y,IACxBllB,KAAKsgB,GACf9f,MAAMuE,KAAKC,UAAUmgB,IACrBnZ,aAAaC,QAAQ,WAAYlH,KAAKC,UAAUmgB,IAChD9F,EAASb,GAAW2G,KATrB,2CAAP,yDa9BqC,UAApBvC,IACL5nB,QAAQC,IAAI,aACZokB,EAASkB,GAAgBkD,KAI7BpE,Eb3BsB,SAACiB,EAAkBlrB,GACjD,8CAAO,WAAOiqB,GAAP,iBAAAC,EAAA,6DACCuL,EAAM,8CAAgDz1B,EACtDoV,EAAO8S,GAAcgD,GACzB9f,MAAMuE,KAAKC,UAAUwF,IACrB6U,EAASL,IAAY,IACrBK,EAAS5B,IAAc,IALpB,SAMcmC,KAAMgG,IAAIiF,EAAKrgB,GAN7B,OAOe,MAPf,OAOIiW,QACHpB,EAASX,GAAc,CAAEtpB,GAAIA,EAAIoV,KAAM8V,KAE3CjB,EAAS5B,IAAc,IAVpB,4CAAP,sDa0BiBmO,CAAmBnI,EAAiBhlB,IAEjDE,EAAQqB,KAAK,MA2BgBzF,MAAO,CAAEpB,OAAQ,GAA1C,8BCtFG,SAAS0yB,KACtB,OAAO,2CAGT,IAEM1zB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCY,KAAM,CACJmC,QAAS,QAEX0wB,aAAczzB,EAAM6vB,OAAOD,QAC3BtqB,QAAS,CACPtC,SAAU,EACV1D,OAAQ,QACRo0B,SAAU,QAEZrxB,UAAW,CACT+f,WAAYpiB,EAAMe,QAAQ,GAC1BohB,cAAeniB,EAAMe,QAAQ,QAIpB4yB,GAA8B,WAGzC,IAAM1xB,EAAUnC,KAIV2qB,GAFkB/jB,cAAY,SAACC,GAAD,OAAsBA,EAAM6jB,eAAeoJ,mBAE/DltB,cAAY,SAACC,GAAD,OAAsBA,EAAMC,aAAa6jB,YAM/DzD,GAJYtgB,cAChB,SAACC,GAAD,OAAsBA,EAAMC,aAAaC,aAG1BgkB,gBAQjB,OANAvjB,qBAAU,WACJmjB,GACFzD,EAASD,QAEV,IAID,sBAAKzkB,UAAWL,EAAQrB,KAAxB,UAGA,cAACizB,GAAA,EAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,uBAAMvxB,UAAWL,EAAQqD,QAAzB,UACE,qBAAKhD,UAAWL,EAAQwxB,eACxB,cAAC,KAAD,CAAWlK,SAAS,KAAKjnB,UAAWL,EAAQI,UAA5C,SAGI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOuO,KAAK,qBAAqBmR,UAAWiQ,KAC5C,cAAC,IAAD,CAAOphB,KAAK,qBAAqBmR,UAAWyR,KAC5C,cAAC,IAAD,CAAO5iB,KAAK,mBAAmBmR,UAAW2Q,KAC1C,cAAC,IAAD,CAAO9hB,KAAK,uBAAuBmR,UAAWgR,KAC9C,cAAC,IAAD,CAAOniB,KAAK,4BAA4BmR,UAAWgR,iB,mDC5DjE,SAASe,KACL,OACE,eAACrW,GAAA,EAAD,CAAYjW,QAAQ,QAAQ3K,MAAM,gBAAgBk3B,MAAM,SAAxD,UACG,kBACD,cAACC,GAAA,EAAD,CAASn3B,MAAM,UAAU0M,KAAK,2BAA9B,0BAEW,KACV,IAAI0qB,MAAOC,cACX,OAMT,IClCYC,GDkCNr0B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC+pB,MAAO,CACLlM,UAAW7d,EAAMe,QAAQ,GACzBgC,QAAS,OACT2f,cAAe,SACf6N,WAAY,UAEd6D,OAAQ,CACNtzB,OAAQd,EAAMe,QAAQ,GACtBV,gBAAiBL,EAAMO,QAAQM,UAAUqrB,MAE3CmI,KAAM,CACJh1B,MAAO,OACPwe,UAAW7d,EAAMe,QAAQ,IAE3BuzB,OAAQ,CACNxzB,OAAQd,EAAMe,QAAQ,EAAG,EAAG,QAKrBwzB,GAA4B,WAErC,IAAMjuB,EAAUC,cAEVtE,EAAUnC,KAEVknB,EAAW6D,eAN0B,GAQ1BvnB,iBAAO,IAEQ7F,mBAAS,KAVE,mBAUpC+2B,EAVoC,KAU1BC,EAV0B,OAYHh3B,mBAAS,IAZN,mBAYpCqoB,EAZoC,KAYtB+M,EAZsB,KAcrC6B,EAAO,uCAAG,4BAAAzN,EAAA,6DAER0N,EAA2B,CAC7B9O,UAAY,GACZH,SAAU,GACVI,aAAcA,GAGb8O,IACDD,EAAW9O,UAAY2O,EAEvBG,EAAWjP,SAAW8O,EAGxBxN,EAAS5B,IAAc,IAdX,SAeN4B,EAAS+J,GAAO4D,IAfV,OAgBZ3N,EAAS5B,IAAc,IACvB9e,EAAQqB,KAAK,KAjBD,2CAAH,qDAoBPitB,EAAU,WAEd,MADc,mCACCC,KAAKL,IAItB,OACE,eAAC,KAAD,CAAWzS,UAAU,OAAOwH,SAAS,KAArC,UACE,cAACsK,GAAA,EAAD,IACA,sBAAKvxB,UAAWL,EAAQ8nB,MAAxB,UACE,cAACtiB,GAAA,EAAD,CAAQnF,UAAWL,EAAQmyB,OAA3B,SACE,cAAC,KAAD,MAEF,cAAC3W,GAAA,EAAD,CAAYsE,UAAU,KAAKva,QAAQ,KAAnC,qBAGA,uBAAMlF,UAAWL,EAAQoyB,KAAMS,YAAU,EAAzC,UAGE,cAACnS,GAAA,EAAD,CACEnb,QAAQ,WACR1G,OAAO,SACPi0B,UAAQ,EACR/K,WAAS,EACTjtB,GAAG,QACH0S,MAAM,sBACNtB,KAAK,QACL6mB,aAAa,QACbjD,WAAS,EACTrpB,SAAU,SAAC/D,GAAD,OAAO8vB,EAAY9vB,EAAElB,OAAO2F,QAAQA,MAAOorB,IAGvD,cAAC7R,GAAA,EAAD,CACEnb,QAAQ,WACR1G,OAAO,SACPi0B,UAAQ,EACR/K,WAAS,EACT7b,KAAK,WACLsB,MAAM,WACNhH,KAAK,WACL1L,GAAG,WACHi4B,aAAa,mBACbtsB,SAAU,SAAC/D,GAAD,OAAOkuB,EAAgBluB,EAAElB,OAAO2F,QAAQA,MAAO0c,IAE3D,cAACmP,GAAA,EAAD,CACEC,QAAS,cAACC,GAAA,EAAD,CAAU/rB,MAAM,WAAWvM,MAAM,YAC1C4S,MAAM,gBAER,cAACrR,EAAA,EAAD,CACE4rB,WAAS,EACTxiB,QAAQ,YACR3K,MAAM,UACNyF,UAAWL,EAAQqyB,OACnB/1B,QAASm2B,EALX,qBASA,eAACtyB,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMrE,MAAI,EAACq3B,IAAE,EAAb,SACE,cAACpB,GAAA,EAAD,CAASzqB,KAAK,IAAI/B,QAAQ,QAA1B,gCAIF,cAACpF,EAAA,EAAD,CAAMrE,MAAI,EAAV,SACE,cAAC,IAAD,CAAMs0B,GAAG,UAAT,SACA,cAAC2B,GAAA,EAAD,CAASzqB,KAAK,IAAI/B,QAAQ,QAA1B,SACG,gDAQX,cAACib,GAAA,EAAD,CAAK4S,GAAI,EAAT,SACE,cAACvB,GAAD,U,UE5JJwB,GAA2B,CAC7BvQ,KtBCgB,CACZT,IAAM,GACNoB,SAAW,OACXC,aAAgB,GAChBE,UAAY,GACZC,aAAe,IsBLnByP,SAAU,EACV1E,IAAM,UCJJyE,GAA4B,CAC9B7K,SAAU,EACVX,MAAQ,GACRjjB,WAAY,GCAVyuB,GAA8B,CAChCtN,S1BWO,G0BVPoD,e1BHmB,CACf/G,GAAK,GACLE,YAAc,GACdE,mBAAqB,GACrBK,OAAS,GACTF,cAAgB,EAChBI,SAAY,GACZL,cAAgB,I0BHpBiP,iBAAkB,EAClB4B,cAAe,EACfjL,gBAAkB,K,SHfV4J,K,iCAAAA,Q,KIWZ,IAOMmB,GAA4B,CAC9B3K,SARuB,WACvBhoB,QAAQC,IAAI,YACZ,IAAI6yB,EAAWxtB,KAAQqf,IAAI,YAC3B,YAAgBppB,IAAbu3B,GAAuC,UAAbA,EAKlBC,GACXngB,UAAY,CACRogB,UAAY,QACZhgB,QAAU,YCfZ2f,GAA4B,CAC9BxL,MAAQ,GACR/L,QAAS,G,UCGP6X,GAAcC,aAAgB,CACnCvL,YLC2B,WAAsD,IAArD3jB,EAAoD,uDAA3C2uB,GAAcQ,EAA6B,uCAC7E,OAAQA,EAAOrtB,MAEf,KAAKyb,GAAe8B,SAEhB,OADArjB,QAAQC,IAAI,sBAAuB8J,KAAKC,UAAUmpB,EAAOxQ,UAClD,6BAAK3e,GAAZ,IAAmBoe,KAAO+Q,EAAOxQ,UACrC,KAAKpB,GAAe6R,YAChB,OAAO,6BAAKpvB,GAAUmvB,EAAOxQ,SACjC,KAAKpB,GAAegC,UAChB,OAAO,6BAAKvf,GAAZ,IAAmB4uB,QAAUO,EAAOxQ,UAExC,QACI,OAAO3e,IKZXC,aJDyB,WAAsD,IAArDD,EAAoD,uDAA5C2uB,GAAcQ,EAA8B,uCAC9E,OAAQA,EAAOrtB,MACf,KAAKwb,GAAgBoB,eACjB,OAAO,6BAAK1e,GAAZ,IAAmBE,UAAYivB,EAAOxQ,UAC1C,KAAKrB,GAAgBuB,UACb,OAAO,6BAAK7e,GAAZ,IAAmB8jB,QAAUqL,EAAOxQ,UAC5C,QACI,OAAO3e,IILX6jB,eHG0B,WAAwD,IAAvD7jB,EAAsD,uDAA9C2uB,GAAcQ,EAAgC,uCACjF,OAAQA,EAAOrtB,MAEf,KAAK0b,GAAkBiC,YACnB,OAAO,6BAAKzf,GAAZ,IAAmBqhB,SAAW8N,EAAOxQ,UACzC,KAAKnB,GAAkBqC,YAEnB,OADA7f,EAAMqhB,SAASrgB,KAAKmuB,EAAOxQ,SACpB,gBAAK3e,GAChB,KAAKwd,GAAkBmC,eACnB,IAAI0P,EAAcrvB,EAAMqhB,SAASpZ,WAAU,SAAAlS,GAAC,OAAEA,EAAE2nB,KAAOyR,EAAOxQ,QAAQvoB,MAEtE,OADoB,IAAjBi5B,IAAoBrvB,EAAMqhB,SAASgO,GAAeF,EAAOxQ,QAAQnT,MAC7D,gBAAKxL,GAChB,KAAKwd,GAAkBuC,eACnB,IAAM/X,EAAUhI,EAAMqhB,SAASpZ,WAAU,SAAAlS,GAAC,OAAEA,EAAE2nB,KAAOyR,EAAOxQ,WAE5D,OADgB,IAAb3W,GAAgBhI,EAAMqhB,SAASjZ,OAAOJ,EAAU,GAC5C,gBAAKhI,GAEhB,KAAKwd,GAAkByC,aACnB,OAAO,6BAAKjgB,GAAZ,IAAoBitB,gBAAkBkC,EAAOxQ,UACjD,KAAKnB,GAAkB8R,qBACnB,OAAO,6BAAKtvB,GAAZ,IAAoB6uB,aAAeM,EAAOxQ,UAC9C,KAAKnB,GAAkB2C,sBACnB,OAAO,6BAAKngB,GAAZ,IAAmB4jB,gBAAkBuL,EAAOxQ,UAEhD,QACI,OAAO3e,IG3BX2O,aFUyB,WAAsD,IAArD3O,EAAoD,uDAA5C2uB,GAAcQ,EAA8B,uCAC9E,OAAQA,EAAOrtB,MACf,KAAK0rB,GAAgB+B,eACjB,OAAO,6BAAIvvB,GAAX,IAAmB4O,UAAYugB,EAAOxQ,UAC1C,QACI,OAAO3e,IEdXwvB,aDLyB,WAAuD,IAAtDxvB,EAAqD,uDAA5C2uB,GAAcQ,EAA8B,uCAC/E,OAAQA,EAAOrtB,MAEf,KAAK2hB,GAAgB0G,UACjB,OAAO,6BAAKnqB,GAAZ,IAAmBmjB,MAAQgM,EAAOxQ,QAAUvH,QAAS,IACzD,KAAKqM,GAAgBgM,WACjB,OAAO,6BAAKzvB,GAAZ,IAAmBmjB,MAAQ,GAAK/L,QAAS,IAE7C,QACI,OAAOpX,MCOA0vB,GALNC,aAAYV,GAAcW,aAAgBC,OCrB5C,SAASC,GAAkBC,GAC9B,IAAI5M,EAAQ6M,GAAMC,WAAWT,aAAarM,MACvC4M,GACCA,EAAG5M,GAEM,KAAVA,IACCF,KAAME,MAAMA,GACZ6M,GAAM3P,SAAS4J,GAAe,MCatC,SAASkD,KACL,OACE,eAACrW,GAAA,EAAD,CAAYjW,QAAQ,QAAQ3K,MAAM,gBAAgBk3B,MAAM,SAAxD,UACG,kBACD,cAACC,GAAA,EAAD,CAASn3B,MAAM,UAAU0M,KAAK,2BAA9B,0BAEW,KACV,IAAI0qB,MAAOC,cACX,OAMT,IAAMp0B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC+pB,MAAO,CACLlM,UAAW7d,EAAMe,QAAQ,GACzBgC,QAAS,OACT2f,cAAe,SACf6N,WAAY,UAEd6D,OAAQ,CACNtzB,OAAQd,EAAMe,QAAQ,GACtBV,gBAAiBL,EAAMO,QAAQM,UAAUqrB,MAE3CmI,KAAM,CACJh1B,MAAO,OACPwe,UAAW7d,EAAMe,QAAQ,IAE3BuzB,OAAQ,CACNxzB,OAAQd,EAAMe,QAAQ,EAAG,EAAG,QAKrB81B,GAA4B,WACrC,IAAM50B,EAAUnC,KAEVknB,EAAW6D,eAH0B,EAKXptB,mBAAS,IALE,mBAKpCioB,EALoC,KAK1BiN,EAL0B,OAOHl1B,mBAAS,IAPN,mBAOpCkoB,EAPoC,KAOtBmR,EAPsB,OASTr5B,mBAAS,IATA,mBASpCooB,EAToC,KASzB+M,EATyB,OAWHn1B,mBAAS,IAXN,mBAWpCqoB,EAXoC,KAWtB+M,EAXsB,KAerCvsB,GAFWI,cAAY,SAACC,GAAD,OAAuBA,EAAMwvB,aAAarM,SAEvDvjB,eAEVmuB,EAAO,uCAAG,4BAAAzN,EAAA,6DACRlC,EAAY,CACZW,WACAC,eACAG,eACAD,aAEJmB,EAAS5B,IAAc,IAPX,SAQN4B,EAASkK,GAASnM,IARZ,OASZiC,EAAS5B,IAAc,IACvBqR,IAAmB,SAAC5F,GAClBluB,QAAQC,IAAIiuB,GACD,KAARA,GACDvqB,EAAQqB,KAAK,QAbL,2CAAH,qDAuBb,OACE,eAAC,KAAD,CAAWoa,UAAU,OAAOwH,SAAS,KAArC,UACE,cAACsK,GAAA,EAAD,IACA,sBAAKvxB,UAAWL,EAAQ8nB,MAAxB,UACE,cAACtiB,GAAA,EAAD,CAAQnF,UAAWL,EAAQmyB,OAA3B,SACE,cAAC,KAAD,MAEF,cAAC3W,GAAA,EAAD,CAAYsE,UAAU,KAAKva,QAAQ,KAAnC,qBAGA,uBAAMlF,UAAWL,EAAQoyB,KAAMS,YAAU,EAAzC,UACA,cAACnS,GAAA,EAAD,CACInb,QAAQ,WACR1G,OAAO,SACPi0B,UAAQ,EACR/K,WAAS,EACTjtB,GAAG,WACH0S,MAAM,YAGN/G,SAAU,SAAC/D,GAAD,OAAOguB,EAAYhuB,EAAElB,OAAO2F,QAAQA,MAAOsc,IAEvD,cAAC/C,GAAA,EAAD,CACEnb,QAAQ,WACR1G,OAAO,SACPi0B,UAAQ,EACR/K,WAAS,EACTjtB,GAAG,WACH0S,MAAM,gBACNtB,KAAK,WACLzF,SAAU,SAAC/D,GAAD,OAAOmyB,EAAgBnyB,EAAElB,OAAO2F,QAAQA,MAAOuc,IAE3D,cAAChD,GAAA,EAAD,CACEnb,QAAQ,WACR1G,OAAO,SACPi0B,UAAQ,EACR/K,WAAS,EACTjtB,GAAG,QACH0S,MAAM,gBACNtB,KAAK,QAELzF,SAAU,SAAC/D,GAAD,OAAOiuB,EAAajuB,EAAElB,OAAO2F,QAAQA,MAAOyc,IAGxD,cAAClD,GAAA,EAAD,CACEnb,QAAQ,WACR1G,OAAO,SACPi0B,UAAQ,EACR/K,WAAS,EACT7b,KAAK,WACLsB,MAAM,WACNhH,KAAK,WACL1L,GAAG,WACH2L,SAAU,SAAC/D,GAAD,OAAOkuB,EAAgBluB,EAAElB,OAAO2F,QAAQA,MAAO0c,IAE3D,cAACmP,GAAA,EAAD,CACEC,QAAS,cAACC,GAAA,EAAD,CAAU/rB,MAAM,WAAWvM,MAAM,YAC1C4S,MAAM,gBAER,cAACrR,EAAA,EAAD,CACE4rB,WAAS,EACTxiB,QAAQ,YACR3K,MAAM,UACNyF,UAAWL,EAAQqyB,OACnB/1B,QAASm2B,EALX,qBASA,eAACtyB,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMrE,MAAI,EAACq3B,IAAE,EAAb,SACE,cAACpB,GAAA,EAAD,CAASzqB,KAAK,IAAI/B,QAAQ,QAA1B,gCAIF,cAACpF,EAAA,EAAD,CAAMrE,MAAI,EAAV,SACE,cAAC,IAAD,CAAMs0B,GAAG,UAAT,SACA,cAAC2B,GAAA,EAAD,CAASzqB,KAAK,IAAI/B,QAAQ,QAA1B,SACG,gDAQX,cAACib,GAAA,EAAD,CAAK4S,GAAI,EAAT,SACE,cAAC,GAAD,U,UCnKG0B,I,OAAyB,WAErC,IAAMlwB,EAAYH,cAAY,SAACC,GAAD,OAAsBA,EAAMC,aAAaC,aASvE,OACC,eAAC,IAAM1I,SAAP,WAEA,cAAC,KAAD,CAAgB64B,UAAW,OAE3B,cAACC,GAAA,EAAD,CAAUn4B,KAAM+H,EAAhB,SACM,cAAC6C,GAAA,EAAD,CAAkB7M,MAAM,cAG7B,eAAC,IAAD,WAEA,cAAC,IAAD,CAAOq6B,OAAK,EAACtmB,KAAK,UAAUmR,UAAW8U,KAEvC,cAAC,IAAD,CAAOK,OAAK,EAACtmB,KAAK,SAASmR,UAAWwS,KAEtC,cAAC,IAAD,CAAO2C,OAAK,EAACtmB,KAAK,IAAImR,UAAW4R,GAAjC,SAtBc,WACfhxB,QAAQC,IAAI,wBACZ,IAAIykB,EAAQpf,KAAQqf,IAAI,WACxB,MAAa,KAAVD,QAA0BnpB,IAAVmpB,EAoBhBkO,GAAY,cAAC,IAAD,CAAUlD,GAAG,uBAA0B,cAAC,IAAD,CAAUA,GAAG,aAGlE,cAAC,IAAD,CAAQzhB,KAAK,YAAYmR,UAAW4R,KACpC,cAAC,IAAD,CAAOuD,OAAK,EAACtmB,KAAK,qBAAqBmR,UAAWsI,KAClD,cAAC,IAAD,CAAO6M,OAAK,EAACtmB,KAAK,0BAA0BmR,UAAWsI,KACvD,cAAC,IAAD,CAAOzZ,KAAK,oBAAoBmR,UAAWsI,a,OC5C9C8M,IAASC,OACP,cAAC,KAAD,CAAUT,MAAOA,GAAjB,SACA,cAAC,GAAD,MAIA3vB,SAASC,eAAe,W","file":"static/js/main.ac95f177.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\n//import { useSelector } from 'react-redux'\r\n\r\nexport interface DemoCanvasWidgetProps {\r\n\tisDark : boolean,\r\n\tcolor?: string;\r\n\tbackground?: string;\r\n}\r\n\r\nexport const CT = styled.div<{ color: string; background: string , isDark : boolean }>`\r\ndisplay : flex;\r\njustify-content: center;\r\nbackground-color: ${(p) => (p.isDark ? '#3C3C3C' : p.background)};\r\n\r\nbackground-size: 15px 15px;\r\n\t\r\n\t\tbackground-image: linear-gradient(\r\n\t\t\t\t0deg,\r\n\t\t\t\ttransparent 24%,\r\n\t\t\t\t${(p) => p.color} 25%,\r\n\t\t\t\t${(p) => p.color} 26%,\r\n\t\t\t\ttransparent 27%,\r\n\t\t\t\ttransparent 74%,\r\n\t\t\t\t${(p) => p.color} 75%,\r\n\t\t\t\t${(p) => p.color} 76%,\r\n\t\t\t\ttransparent 77%,\r\n\t\t\t\ttransparent\r\n\t\t\t),\r\n\t\t\tlinear-gradient(\r\n\t\t\t\t90deg,\r\n\t\t\t\ttransparent 24%,\r\n\t\t\t\t${(p) => p.color} 25%,\r\n\t\t\t\t${(p) => p.color} 26%,\r\n\t\t\t\ttransparent 27%,\r\n\t\t\t\ttransparent 74%,\r\n\t\t\t\t${(p) => p.color} 75%,\r\n\t\t\t\t${(p) => p.color} 76%,\r\n\t\t\t\ttransparent 77%,\r\n\t\t\t\ttransparent\r\n\t\t\t);\r\n\r\n\r\n`;\r\n\r\n\texport const Container = styled.div<{ color: string; background: string }>`\r\n\r\n\t\tbackground-color: ${(p) => p.background};\r\n\t\tbackground-size: 50px 50px;\r\n\t\r\n\t\tbackground-image: linear-gradient(\r\n\t\t\t\t0deg,\r\n\t\t\t\ttransparent 24%,\r\n\t\t\t\t${(p) => p.color} 25%,\r\n\t\t\t\t${(p) => p.color} 26%,\r\n\t\t\t\ttransparent 27%,\r\n\t\t\t\ttransparent 74%,\r\n\t\t\t\t${(p) => p.color} 75%,\r\n\t\t\t\t${(p) => p.color} 76%,\r\n\t\t\t\ttransparent 77%,\r\n\t\t\t\ttransparent\r\n\t\t\t),\r\n\t\t\tlinear-gradient(\r\n\t\t\t\t90deg,\r\n\t\t\t\ttransparent 24%,\r\n\t\t\t\t${(p) => p.color} 25%,\r\n\t\t\t\t${(p) => p.color} 26%,\r\n\t\t\t\ttransparent 27%,\r\n\t\t\t\ttransparent 74%,\r\n\t\t\t\t${(p) => p.color} 75%,\r\n\t\t\t\t${(p) => p.color} 76%,\r\n\t\t\t\ttransparent 77%,\r\n\t\t\t\ttransparent\r\n\t\t\t);\r\n\t`;\r\n\r\n\r\nexport class DemoCanvasWidget extends React.Component<DemoCanvasWidgetProps> {\r\n\t//public schemax  = useSelector(getSchema)\r\n\trender() {\r\n\t\t//console.log(this.schemax)\r\n\t\treturn (\r\n\t\t\t<CT id=\"diagramcv\"\r\n\t\t\t\tisDark={this.props.isDark}\r\n\t\t\t\tbackground={this.props.background || 'rgb(60, 60, 60)'}\r\n\t\t\t\tcolor={this.props.color || 'rgba(255,255,255, 0.05)'}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</CT>\r\n\t\t);\r\n\t}\r\n}","import React, { useState, FunctionComponent } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\n\r\n\r\ninterface MenuListItem {\r\n    text: string,\r\n    id: string,\r\n    selectOption : boolean\r\n}\r\n\r\ninterface MenuProp {\r\n    menuName : string\r\n    defaultMenuText: string\r\n    items: MenuListItem[],\r\n    onSelectChange ?: (id : string , text : string) => void\r\n}\r\n\r\nexport const MenuSelect: FunctionComponent<MenuProp> = ({ items, defaultMenuText , menuName , onSelectChange}) => {\r\n\r\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n\r\n    const [currentSelect, setcurrentSelect] = useState(\"\")\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = (item : MenuListItem) => {\r\n        setAnchorEl(null);\r\n        if(item.selectOption){\r\n            setcurrentSelect(item.text)\r\n        }\r\n        \r\n        if(onSelectChange === null || onSelectChange === undefined) return \r\n\r\n        onSelectChange(item.id , item.text)\r\n\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}  endIcon={<KeyboardArrowDownIcon  />}>\r\n                {(currentSelect === \"\" ) ? defaultMenuText : currentSelect }\r\n            </Button>\r\n            <Menu\r\n                id={menuName}\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                elevation={0}\r\n      \r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                {items.map(item=>{\r\n                    return (\r\n                        <MenuItem onClick={()=>handleClose(item)} key={menuName + item.id}>{item.text}</MenuItem>\r\n                    )\r\n                })}\r\n\r\n            </Menu>\r\n\r\n        </React.Fragment>\r\n\r\n    )\r\n}","import React from 'react';\n\nconst Chevrons = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <polyline points=\"17 11 12 6 7 11\" />\n    <polyline points=\"17 18 12 13 7 18\" />\n  </svg>\n);\n\nexport default Chevrons;\n","import React, { FunctionComponent, useState } from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Redo from '@material-ui/icons/Redo';\r\nimport Undo from '@material-ui/icons/Undo';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\r\nimport ZoomOutIcon from '@material-ui/icons/ZoomOut';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport TableChartIcon from '@material-ui/icons/TableChart';\r\n\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport { MenuSelect } from './MenuSelect'\r\nimport CropOutlinedIcon from '@material-ui/icons/CropOutlined';\r\nimport CutIcon from '../components/Icons/Cut'\r\nimport CopyIcon from \"../components/Icons/Copy\"\r\nimport DuplicateIcon from '../components/Icons/Duplicate.jsx'\r\nimport { AppBar, IconButton } from '@material-ui/core';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\r\nimport Cherons from '../components/Icons/Chevrons'\r\nimport MatToolbar from '@material-ui/core/Toolbar';\r\nimport ControlPointDuplicateIcon from '@material-ui/icons/ControlPointDuplicate';\r\nimport FilterNoneOutlinedIcon from '@material-ui/icons/FilterNoneOutlined';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n\r\n    showBtn: {\r\n      position: \"absolute\",\r\n\r\n      transform: \"rotate(180deg)\",\r\n      backgroundColor: \"#FFFF\",\r\n      border: `1px solid ${theme.palette.divider}`,\r\n      justifyContent: \"flex-end\",\r\n      right: 5\r\n    },\r\n\r\n    hideBtn: {\r\n      transform: \"rotate(360deg)\"\r\n    },\r\n\r\n    root: {\r\n      border: `1px solid ${theme.palette.divider}`,\r\n      color: theme.palette.text.secondary,\r\n      '& svg': {\r\n        margin: theme.spacing(0.75),\r\n      },\r\n      '& hr': {\r\n        margin: theme.spacing(0, 0.5),\r\n      },\r\n\r\n    },\r\n  }),\r\n);\r\n\r\ninterface ToolbarFunction {\r\n  isDark : boolean,\r\n  isRender: boolean,\r\n  isNodeSelect: boolean,\r\n  onRedo : () => void,\r\n  onUndo : () => void,\r\n  onZoomSelectChange : (name:string) => void,\r\n  onZoomIn: () => void,\r\n  onZoomOut: () => void,\r\n  onZoomFit: () => void,\r\n\r\n  onCopy: () => void,\r\n  onCut: () => void,\r\n  onDup: () => void,\r\n  onDel: () => void,\r\n  newTable: () => void\r\n}\r\n\r\nconst zoomLevel: any = [{\r\n  id: \"100%zoom\",\r\n  text: \"100%\",\r\n  selectOption: true\r\n},\r\n{\r\n  id: \"75%zoom\",\r\n  text: \"75%\",\r\n  selectOption: true\r\n},\r\n{\r\n  id: \"50%zoom\",\r\n  text: \"50%\",\r\n  selectOption: true\r\n},\r\n{\r\n  id: \"resetview\",\r\n  text: \"Reset View\",\r\n  selectOption: false\r\n}]\r\n\r\nexport const Toolbar: FunctionComponent<ToolbarFunction> = ({onZoomSelectChange,onUndo , onRedo , isDark, isNodeSelect, isRender,\r\n  onZoomIn, onZoomOut, onZoomFit, newTable, onCopy, onCut, onDup, onDel }) => {\r\n\r\n  const [isExpand, setisExpand] = useState(true)\r\n\r\n  const classes = useStyles();\r\n\r\n  const getBgColor = () => {\r\n    return (isDark) ? \"#333333\" : \"#FFFF\"\r\n  }\r\n\r\n  function handleZoomChange(id:string , text:string){\r\n    if(id === undefined) {\r\n      console.log(\"undefine\")\r\n      return\r\n    }\r\n    console.log(id)\r\n    onZoomSelectChange(text)\r\n  }\r\n\r\n  return (\r\n\r\n    <div style={{ position: \"absolute\", width: \"100%\", zIndex: 50 }}>\r\n      {isExpand ? (\r\n         <Grid container className={classes.root} style={{backgroundColor:getBgColor()}}>\r\n            \r\n            <IconButton size=\"small\" onClick={newTable} >\r\n              <TableChartIcon></TableChartIcon>\r\n            </IconButton>\r\n\r\n\r\n            <Divider orientation=\"vertical\" flexItem />\r\n            <IconButton size=\"small\" color=\"inherit\" onClick={onRedo}>\r\n              <Redo />\r\n            </IconButton>\r\n\r\n            <IconButton size=\"small\" onClick={onUndo} >\r\n              <Undo />\r\n            </IconButton>\r\n\r\n            <Divider orientation=\"vertical\" flexItem  />\r\n            <MenuSelect items={zoomLevel} defaultMenuText=\"100%\" menuName=\"zoomSelect\" onSelectChange={handleZoomChange} />\r\n\r\n            <IconButton size=\"small\" onClick={onZoomIn} >\r\n              <ZoomInIcon />\r\n            </IconButton>\r\n\r\n            <IconButton size=\"small\" onClick={onZoomOut} >\r\n              <ZoomOutIcon />\r\n            </IconButton>\r\n\r\n            <IconButton size=\"small\" onClick={onZoomFit}  >\r\n              <AspectRatioIcon />\r\n            </IconButton>\r\n\r\n            <Divider orientation=\"vertical\" flexItem />\r\n\r\n            <IconButton size=\"small\" onClick={onCopy} disabled={!isNodeSelect} >\r\n              <FilterNoneOutlinedIcon style={{fontSize:20}} />\r\n            </IconButton>\r\n            <IconButton size=\"small\" onClick={onCut} disabled={!isNodeSelect} >\r\n              <CropOutlinedIcon style={{fontSize:20}}  />\r\n            </IconButton>\r\n\r\n            <IconButton size=\"small\" onClick={onDup} disabled={!isNodeSelect} >\r\n              <ControlPointDuplicateIcon style={{fontSize:20}}  />\r\n            </IconButton>\r\n\r\n            <IconButton size=\"small\" onClick={onDel} disabled={!isNodeSelect} >\r\n              <DeleteIcon style={{fontSize:20}} />\r\n            </IconButton>\r\n\r\n            <span style={{ display: \"flex\", flexGrow: 1 }} />\r\n\r\n            <IconButton size=\"small\" onClick={() => setisExpand(false)} className={classes.hideBtn} >\r\n              <Cherons size={20}></Cherons>\r\n            </IconButton>\r\n\r\n            </Grid>\r\n \r\n       \r\n  \r\n\r\n      ) : (<IconButton size=\"small\" onClick={() => setisExpand(true)} className={classes.showBtn}>\r\n        <Cherons size={25}></Cherons>\r\n      </IconButton>)\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n\r\n\r\n  );\r\n}","import React , {FunctionComponent} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { Divider } from '@material-ui/core';\r\n\r\n\r\ninterface MenuProp{\r\n    menuName : string,\r\n    isEnable : boolean,\r\n    items : any[],\r\n    onClickMenu : (id : string) => void,\r\n    onClick ?: () => void\r\n}\r\n\r\nexport const MenuButton: FunctionComponent<MenuProp> = ({onClick,isEnable , items , menuName , onClickMenu}) => {\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef<HTMLButtonElement>(null);\r\n\r\n  const handleToggle = () => {\r\n    if(items.length > 0){\r\n      setOpen((prevOpen) => !prevOpen);\r\n    }else{\r\n      if(onClick === undefined) return\r\n      onClick()\r\n    }\r\n  };\r\n\r\n\r\n  const handleClose = (event: React.MouseEvent<EventTarget> , id : string) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n    onClickMenu(id)\r\n  };\r\n\r\n    return  (\r\n        <React.Fragment>\r\n        <span\r\n          style={{color : \"white\" , textTransform : \"capitalize\" , marginRight : 25 , cursor: \"pointer\"}}\r\n          ref={anchorRef}\r\n          aria-controls={open ? 'menu-list-grow' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleToggle}\r\n        >\r\n          {menuName}\r\n        </span>\r\n        <Popper style={{zIndex:100 }} open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={(e)=>handleClose(e,\"\")}>\r\n                  <MenuList autoFocusItem={open} id=\"menu-list-grow\">\r\n                  {items.map(item=>{\r\n                    return (\r\n                      <div>\r\n\r\n                        {(item.isLine) ? (<Divider></Divider>) : \"\"}\r\n\r\n                        <MenuItem disabled={!isEnable} onClick={(e)=>handleClose(e,item.id)} key={menuName + item.id}>{item.text}</MenuItem>\r\n                         \r\n\r\n                      </div>\r\n                        \r\n                    )\r\n                })}\r\n                \r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </React.Fragment>\r\n    )\r\n}","export const FileMenu : any = [{\r\n    id : \"openmenu\",\r\n    text : \"Open\"\r\n},\r\n{\r\n    id : \"importmenu\",\r\n    text : \"Import\"\r\n},\r\n{\r\n    id : \"newmenu\",\r\n    text : \"New Project\"\r\n},\r\n{\r\n    id : \"propertiemenu\",\r\n    text : \"Propertie\"\r\n},\r\n{\r\n    id : \"savemenu\",\r\n    text : \"Save\"\r\n},\r\n{\r\n    id : \"sharemenu\",\r\n    text : \"Share\"\r\n}]\r\n\r\nexport const ExportMenu : any =  [{\r\n    id : \"png-ex\",\r\n    text : \"Png File\"\r\n},\r\n{\r\n    id : \"json-ex\",\r\n    text : \"Json File\"\r\n    \r\n},\r\n{\r\n    id : \"mysql-ex\",\r\n    text : \"MySql/MariaDb\",\r\n    isLine : true\r\n},\r\n{\r\n    id : \"pos-ex\",\r\n    text : \"Postresql\"\r\n},\r\n{\r\n    id : \"sqlserver-ex\",\r\n    text : \"SqlServer\"\r\n}\r\n\r\n]\r\n\r\nexport const ViewMenu : any = [{\r\n    id : \"zoominmenu\",\r\n    text : \"ZoomIn\"\r\n},\r\n{\r\n    id : \"zoomoutmenu\",\r\n    text : \"ZoomOut\"\r\n},\r\n{\r\n    id : \"100%\",\r\n    text : \"100%\"\r\n},\r\n{\r\n    id : \"75%\",\r\n    text : \"75%\"\r\n},\r\n{\r\n    id : \"50%\",\r\n    text : \"50%\"\r\n},\r\n{\r\n    id : \"showgridmenu\",\r\n    text : \"Show Grid\"\r\n}]\r\n\r\nexport const ThemeMenu : any = [{\r\n    id : \"lightmenu\",\r\n    text : \"Light\"\r\n},\r\n{\r\n    id : \"darkmenu\",\r\n    text : \"Dark\"\r\n}]\r\n\r\nexport const HelpMenu : any = [{\r\n    id : \"aboutmenu\",\r\n    text : \"About\"\r\n},\r\n{\r\n    id : \"shortcutmenu\",\r\n    text : \"All Shortcut\"\r\n},\r\n\r\n{\r\n    id : \"contactmenu\",\r\n    text : \"Contact Us\"\r\n},\r\n\r\n{\r\n    id : \"changelog\",\r\n    text : \"Change Log\"\r\n}\r\n]\r\n\r\nexport const EditMenu : any = [\r\n{\r\n    id : \"copymenu\",\r\n    text : \"Copy\",\r\n},\r\n{\r\n    id : \"cutmenu\",\r\n    text : \"Cut\",\r\n},\r\n{\r\n    id : \"deletemenu\",\r\n    text : \"Delete\",\r\n},\r\n{\r\n    id : \"duplicatemenu\",\r\n    text : \"Duplicate\",\r\n},\r\n{\r\n    id : \"undomenu\",\r\n    text : \"Undo\",\r\n},\r\n{\r\n    id : \"redomenu\",\r\n    text : \"Redo\",\r\n}\r\n]","const keywords = [\r\n    \"CREATE TABLE\",\r\n    \"ALTER TABLE\"\r\n]\r\n\r\nconst OnImport = (content : string)=>{\r\n    for (let i = 0; i < content.length; i++) {\r\n        const str = content.substr(i , content.length-1)\r\n        readUntilFoundKeyWord(str)\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction readUntilFoundKeyWord(content : string){\r\n    keywords.forEach(keyword => {\r\n        let index = content.indexOf(keyword)\r\n        if(index !== -1){ // found\r\n            \r\n        }\r\n    });\r\n}\r\n\r\nexport {OnImport}","\r\nimport React , {FunctionComponent, useEffect} from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../store';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {MenuButton} from './MenuButton'\r\nimport {FileMenu , EditMenu, ThemeMenu , ExportMenu, HelpMenu} from '../data/menus'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {OnImport} from '../api/import/sqlimport'\r\nimport { DiagramController } from '../DiagramController/DiagramCtr';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { EditorParamType } from '../pages/editor';\r\nimport Cookies from 'js-cookie';\r\nimport FeedbackOutlinedIcon from '@material-ui/icons/FeedbackOutlined';\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n\r\n    },\r\n    avatarIcon : {\r\n      cursor : \"pointer\",\r\n      width : 25,\r\n      height : 25,\r\n      backgroundColor : \"orange\",\r\n      marginRight : 20\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n\r\n    },\r\n    menu : {\r\n        marginRight : 10\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n  }),\r\n);\r\n\r\nenum ExportType{\r\n  Image = \"imageexportmenu\",\r\n  Database = \"dbexportmenu\"\r\n}\r\n\r\ninterface ToolbarFunction {\r\n  isDark : boolean,\r\n  diagram : DiagramController,\r\n  onExport : (exportType : string) => void,\r\n  onSave : () => void,\r\n  onSelectChange : boolean,\r\n  onOpenMenu : (menuname:string) => void\r\n}\r\n\r\nexport const AppToolbar: FunctionComponent<ToolbarFunction> = ({isDark,onOpenMenu,diagram,onExport , onSave, onSelectChange }) => {\r\n  const classes = useStyles();\r\n\r\n  let { projectId } = useParams<EditorParamType>();\r\n\r\n  const history = useHistory();\r\n\r\n  const location = useLocation()\r\n\r\n\r\n  \r\n  const isApiLoading = useSelector((state : RootState ) => state.ShareReducer.isLoading)\r\n\r\n  useEffect(() => {\r\n    //alert(\"select change\" + onSelectChange)\r\n  }, [onSelectChange])\r\n\r\n  function loadOpenFile() {\r\n\t\tvar elem = document.getElementById(\"fileimport\");\r\n\t\tif (elem && document.createEvent) {\r\n\t\t\tvar evt = document.createEvent(\"MouseEvents\");\r\n\t\t\tevt.initEvent(\"click\", true, false);\r\n\t\t\telem.dispatchEvent(evt);\r\n\t\t}\r\n\t}\r\n\r\n  function onLoadFile(e: any) {\r\n\t\tvar input = e.target;\r\n\t\tvar reader = new FileReader();\r\n\t\treader.onload = (es) => {\r\n\t\t\tlet text = reader.result as string;\r\n      if(text === null){\r\n        text = \"\"\r\n      }\r\n      OnImport(text)\r\n\t\t\te.target.value = null\r\n\t\t};\r\n\t\treader.readAsText(input.files[0]);\r\n\t}\r\n\r\n  function onExportMenu(id:string){\r\n    onExport(id)\r\n  }\r\n\r\n  function onFileMenu(id:string){\r\n    switch (id) {\r\n      case \"importmenu\":\r\n        loadOpenFile()\r\n        break;\r\n      case \"openmenu\":\r\n        history.push(\"/document/filelist\")\r\n        break;\r\n      case \"newmenu\":\r\n        history.push(\"/document/newproject\")\r\n        break;\r\n      case \"propertiemenu\":\r\n        history.push(\"/document/editproject/\" + projectId)\r\n        break;\r\n      case \"importmenu\":\r\n        //onOpenMenu(id)\r\n        break;\r\n      case \"exportmenu\":\r\n        onOpenMenu(id)\r\n        break;\r\n      case \"sharemenu\":\r\n        onOpenMenu(id)\r\n        break;\r\n    \r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  function onEditMenu(id:string){\r\n    switch (id) {\r\n      case \"copymenu\":\r\n        diagram.copySelected()\r\n        break;\r\n      case \"cutmenu\":\r\n        diagram.cutSelected()\r\n        break;\r\n      case \"deletemenu\":\r\n        diagram.deleteSelected()\r\n        break;\r\n      case \"duplicatemenu\":\r\n        diagram.duplicateSelected()\r\n        break;\r\n      case \"undomenu\":\r\n        loadOpenFile()\r\n        break;\r\n      case \"redomenu\":\r\n        loadOpenFile()\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  function onHelpMenu(menu : string) {\r\n    if(menu === \"shortcutmenu\"){\r\n      onOpenMenu(menu)\r\n      return\r\n    }\r\n    let urlmap : any = {\r\n      \"aboutmenu\" : \"https://toperlanding.netlify.app/\",\r\n      \"contactmenu\" : \"https://toperlanding.netlify.app/contact.html\",\r\n      \"changelog\" : \"https://toperlanding.netlify.app/contact.html\"\r\n    }\r\n    let linkurl = urlmap[menu]\r\n    openLink(linkurl)\r\n  }\r\n\r\n  function onThemeChange(menu : string){\r\n\r\n    if(menu === \"\") return\r\n\r\n    let darkstate = (menu === \"lightmenu\") ? \"false\" : \"true\"\r\n\r\n    Cookies.set(\"darkmode\" , darkstate)\r\n\r\n    alert(\"please reload page for change mode\")\r\n\r\n  }\r\n\r\n  function openLink(linkname:string){\r\n    let win = window.open(linkname, '_blank');\r\n    if(win === null) return\r\n    win.focus();\r\n  }\r\n  \r\n\r\n  return (\r\n    <AppBar position=\"static\" color={(isDark) ? \"secondary\" : \"primary\"}>\r\n    <Toolbar variant=\"dense\" >\r\n    <Avatar variant=\"rounded\" src=\"/img/erlogo.svg\" className={classes.avatarIcon} />\r\n\r\n      <MenuButton isEnable={true} items={FileMenu} menuName=\"File\" onClickMenu={onFileMenu} />\r\n\r\n      <MenuButton isEnable={onSelectChange} items={EditMenu} menuName=\"Edit\" onClickMenu={onEditMenu} />\r\n\r\n      <MenuButton isEnable={true} items={ExportMenu} menuName=\"Export\" onClickMenu={onExportMenu} />\r\n\r\n      <MenuButton isEnable={true} items={ThemeMenu} menuName=\"Theme\" onClickMenu={onThemeChange}  />\r\n   \r\n      <MenuButton isEnable={true} items={HelpMenu} menuName=\"Help\" onClickMenu={onHelpMenu}  />\r\n\r\n      \r\n      <span className={classes.title}></span>\r\n\r\n      <input type=\"file\" id=\"fileimport\" style={{ display: \"none\" }} onChange={onLoadFile} />\r\n      <a target=\"_blank\" href=\"https://forms.gle/U5oyXvAbqxypZDFR9\">\r\n      <Button variant=\"outlined\" style={{marginLeft:15}} color=\"inherit\" \r\n      startIcon={<FeedbackOutlinedIcon/>} >Feedback</Button>\r\n      </a>\r\n      \r\n\r\n\r\n            <Button variant=\"outlined\" style={{marginLeft:15}} color=\"inherit\" \r\n            startIcon={(isApiLoading ? <CircularProgress style={{width:20,height:20}} \r\n            color={\"inherit\"} /> : <SaveIcon/> )} onClick={onSave}>Save</Button>\r\n                  <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n    </Toolbar>\r\n  </AppBar>\r\n  );\r\n}\r\n\r\n /*\r\n    <div className={classes.root}>\r\n      <div style={{height : 30,marginLeft : 20 }}>\r\n \r\n          <Typography variant=\"h6\" color=\"inherit\" >\r\n            Visual Draw\r\n            \r\n          </Typography>\r\n          \r\n      </div>\r\n      <div style={{height : 40}}>\r\n \r\n          \r\n      <Button>File</Button>\r\n          <Button onClick={onExport}>Export</Button>\r\n          <Button> Print</Button>\r\n          <Button>Help</Button>\r\n          <Typography className={classes.title}></Typography>\r\n\r\n          {isApiLoading ? <div>Saving....</div> : \"\"}\r\n   \r\n      </div>\r\n  \r\n    </div>\r\n    */\r\n\r\n","import React from 'react';\nimport SvgIcon, { SvgIconProps } from '@material-ui/core/SvgIcon';\n\nconst Copy = (props: SvgIconProps) => (\n  <svg\n    width={16}\n    height={16}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={'gray'}\n    strokeWidth=\"2\"\n  >\n    <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\" />\n    <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\" />\n  </svg>\n\n\n);\n\nexport default Copy;\n","import React from 'react';\nimport SvgIcon, { SvgIconProps } from '@material-ui/core/SvgIcon';\n\nconst Cut = (props: SvgIconProps) => (\n  <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n\n<circle cx=\"6\" cy=\"6\" r=\"3\" />\n    <circle cx=\"6\" cy=\"18\" r=\"3\" />\n    <line x1=\"20\" y1=\"4\" x2=\"8.12\" y2=\"15.88\" />\n    <line x1=\"14.47\" y1=\"14.48\" x2=\"20\" y2=\"20\" />\n    <line x1=\"8.12\" y1=\"8.12\" x2=\"12\" y2=\"12\" />\n\n  </SvgIcon>\n\n\n);\n\nexport default Cut;\n","import React from 'react';\n\nconst Delete = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <polyline points=\"3 6 5 6 21 6\" />\n    <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\" />\n    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\" />\n    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\" />\n  </svg>\n);\n\nexport default Delete;\n","import React from 'react';\n\nconst Duplicate = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={(size * 18) / 24}\n    viewBox=\"0 0 24 18\"\n    fill=\"none\"\n    stroke=\"none\"\n    strokeWidth=\"2\"\n  >\n    <g transform=\"translate(-678.000000, -2727.000000)\">\n      <g transform=\"translate(100.000000, 2626.000000)\">\n        <g transform=\"translate(578.000000, 98.000000)\">\n          <g transform=\"translate(0.000000, 0.000000)\">\n            <polygon points=\"0 0 24 0 24 24 0 24\" />\n            <path\n              d=\"M15,8 C14.45,8 14,8.45 14,9 L14,11 L12,11 C11.45,11 11,11.45 11,12 C11,12.55 11.45,13 12,13 L14,13 L14,15 C14,15.55 14.45,16 15,16 C15.55,16 16,15.55 16,15 L16,13 L18,13 C18.55,13 19,12.55 19,12 C19,11.45 18.55,11 18,11 L16,11 L16,9 C16,8.45 15.55,8 15,8 Z M2,12 C2,9.42 3.4,7.17 5.48,5.96 C5.8,5.77 6.01,5.45 6.01,5.08 C6.01,4.31 5.17,3.83 4.5,4.22 C1.82,5.78 0,8.68 0,12 C0,15.32 1.82,18.22 4.5,19.78 C5.17,20.17 6.01,19.69 6.01,18.92 C6.01,18.55 5.8,18.23 5.48,18.04 C3.4,16.83 2,14.58 2,12 Z M15,3 C10.04,3 6,7.04 6,12 C6,16.96 10.04,21 15,21 C19.96,21 24,16.96 24,12 C24,7.04 19.96,3 15,3 Z M15,19 C11.14,19 8,15.86 8,12 C8,8.14 11.14,5 15,5 C18.86,5 22,8.14 22,12 C22,15.86 18.86,19 15,19 Z\"\n              fill={color}\n            />\n          </g>\n        </g>\n      </g>\n    </g>\n  </svg>\n);\n\nexport default Duplicate;\n","import React from 'react';\n\nconst Paste = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    fill={color}\n    viewBox=\"0 0 512.001 512.001\"\n  >\n    <g>\n      <g>\n        <g>\n          <path\n            d=\"M481,371c11.046,0,20-8.954,20-20v-92c0-33.084-26.916-60-60-60h-39v-79c0-44.112-35.888-80-80-80h-47.533\n\t\t\t\tc-7.739-23.749-29.864-40-55.16-40h-25.614c-25.296,0-47.421,16.251-55.16,40H91c-44.112,0-80,35.888-80,80v312\n\t\t\t\tc0,44.112,35.888,80,80,80h88c11.046,0,20-8.954,20-20c0-11.046-8.954-20-20-20H91c-22.056,0-40-17.944-40-40V120\n\t\t\t\tc0-22.056,17.944-40,40-40h2v59c0,11.046,8.954,20,20,20h189c11.046,0,20-8.954,20-20V80c22.056,0,40,17.944,40,40v79h-65.007\n\t\t\t\tC263.914,199,237,225.913,237,258.993v193.015c0,33.08,26.916,59.993,60.01,59.993L441,511.926c33.084,0,60-26.913,60-59.992\n\t\t\t\tc0-11.046-8.954-20-20-20c-11.046,0-20,8.954-20,20c0,11.024-8.972,19.992-20.01,19.992L297,472c-11.028,0-20-8.969-20-19.993\n\t\t\t\tV258.993c0-11.024,8.969-19.993,19.993-19.993H441c11.028,0,20,8.972,20,20v92C461,362.046,469.955,371,481,371z M282,119H133V80\n\t\t\t\th21c9.177,0,17.177-6.246,19.403-15.149l2.798-11.194C178.211,45.616,185.404,40,193.693,40h25.614\n\t\t\t\tc8.289,0,15.481,5.616,17.492,13.657l2.798,11.194C241.823,73.754,249.823,80,259,80h23V119z\"\n          />\n          <path\n            d=\"M401,279h-64c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20h64c11.046,0,20-8.954,20-20\n\t\t\t\tC421,287.954,412.047,279,401,279z\"\n          />\n          <path\n            d=\"M401,349h-64c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20h64c11.046,0,20-8.954,20-20\n\t\t\t\tC421,357.954,412.047,349,401,349z\"\n          />\n        </g>\n      </g>\n    </g>\n  </svg>\n);\n\nexport default Paste;\n","import React from 'react';\n\nconst Redo = ({ size = 16, color = 'gray' }) => (\n  <svg width={size} height={size} viewBox=\"0 0 512 512\" fill={color}>\n    <path d=\"m431 481c0 11.046-8.954 20-20 20h-66c-11.046 0-20-8.954-20-20s8.954-20 20-20h66c11.046 0 20 8.954 20 20zm63.358-352.994-112.284-111.215c-7.848-7.773-20.511-7.713-28.284.135s-7.712 20.511.135 28.284l106.808 105.79h-285.733c-96.495 0-175 78.505-175 175s78.505 175 175 175h69c11.046 0 20-8.954 20-20s-8.954-20-20-20h-69c-74.439 0-135-60.561-135-135s60.561-135 135-135h284.836l-105.037 105.917c-7.778 7.843-7.725 20.506.118 28.284 3.9 3.868 8.992 5.799 14.083 5.799 5.146 0 10.292-1.975 14.202-5.917l111.225-112.157c11.332-11.332 17.573-26.4 17.573-42.426s-6.241-31.094-17.642-42.494z\" />\n  </svg>\n);\n\nexport default Redo;\n","import React from 'react';\n\nconst Settings = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"12\" cy=\"12\" r=\"3\" />\n    <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\" />\n  </svg>\n);\n\nexport default Settings;\n","import React from 'react';\n\nconst Undo = ({ size = 16, color = 'gray' }) => (\n  <svg width={size} height={size} viewBox=\"0 0 512 512\" fill={color}>\n    <path d=\"m 81,481 c 0,11.046 8.954,20 20,20 h 66 c 11.046,0 20,-8.954 20,-20 0,-11.046 -8.954,-20 -20,-20 h -66 c -11.046,0 -20,8.954 -20,20 z M 17.642,128.006 129.926,16.791 c 7.848,-7.773 20.511,-7.713 28.284,0.135 7.773,7.848 7.712,20.511 -0.135,28.284 L 51.267,151 H 337 c 96.495,0 175,78.505 175,175 0,96.495 -78.505,175 -175,175 h -69 c -11.046,0 -20,-8.954 -20,-20 0,-11.046 8.954,-20 20,-20 h 69 c 74.439,0 135,-60.561 135,-135 0,-74.439 -60.561,-135 -135,-135 H 52.164 l 105.037,105.917 c 7.778,7.843 7.725,20.506 -0.118,28.284 -3.9,3.868 -8.992,5.799 -14.083,5.799 -5.146,0 -10.292,-1.975 -14.202,-5.917 L 17.573,212.926 C 6.241,201.594 0,186.526 0,170.5 0,154.474 6.241,139.406 17.642,128.006 Z\" />\n  </svg>\n);\n\nexport default Undo;\n","import React from 'react';\n\nconst ZoomIn = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"11\" cy=\"11\" r=\"8\" />\n    <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\" />\n    <line x1=\"11\" y1=\"8\" x2=\"11\" y2=\"14\" />\n    <line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\" />\n  </svg>\n);\n\nexport default ZoomIn;\n","import React from 'react';\n\nconst ZoomOut = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"11\" cy=\"11\" r=\"8\" />\n    <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\" />\n    <line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\" />\n  </svg>\n);\n\nexport default ZoomOut;\n","import React from 'react';\r\n\r\nimport styled from '@emotion/styled';\r\n\r\nconst Container = styled.span`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  height: ${props => props.size}px;\r\n  padding: 0 ${props => props.size / 4}px;\r\n  margin: 2px ${props => props.size / 8}px;\r\n  font-size: ${props => props.size / 2}px;\r\n  font-family: monospace;\r\n  color: #000000c4;\r\n  background: #ececec;\r\n  border-radius: 4px;\r\n  border: 1px solid #ffffff17;\r\n  box-shadow: inset 0 0 ${props => props.size / 4}px #0000000a;\r\n`;\r\n\r\nconst Key = ({ children, size = 16 }) => (\r\n  <Container size={size}>{children}</Container>\r\n);\r\n\r\nexport default Key;","\r\nimport styled from '@emotion/styled';\r\nconst ContextMenuIconContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 16px;\r\n  height: 16px;\r\n  margin-right: 16px;\r\n`;\r\n\r\nexport default ContextMenuIconContainer;","import styled from '@emotion/styled';\r\n\r\nconst ContextMenuShortcutContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  justify-content: flex-end;\r\n  margin-left: 8px;\r\n`;\r\n\r\nexport default ContextMenuShortcutContainer;","import React , {FunctionComponent} from 'react';\r\n\r\nimport { Menu, Item, Separator } from 'react-contexify';\r\n\r\nimport {\r\n  Duplicate,\r\n  Copy,\r\n  Delete,\r\n  Paste,\r\n  Redo,\r\n  Settings,\r\n  Undo,\r\n  Cut,\r\n  ZoomIn,\r\n  ZoomOut,\r\n} from '../Icons';\r\nimport Key from './KeyMenu';\r\nimport ContextMenuIconContainer from './ContextMenuIconContainer';\r\nimport ContextMenuShortcutContainer from './ContextMenuShortcutContainer';\r\nimport {ComponentFunction} from './FunctionList'\r\n\r\n  export const ComponentContextMenu : FunctionComponent<ComponentFunction> = ({copyFunc , pasteFunc , \r\n    deleteFunc , duplicateFunc , cutFunc , zoomIn , zoomOut , undoFunc , redoFunc} ) => (\r\n  <Menu id=\"component\">\r\n    <Item onClick={duplicateFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Duplicate />\r\n      </ContextMenuIconContainer>\r\n      Duplicate\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>D</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={cutFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Cut />\r\n      </ContextMenuIconContainer>\r\n      Cut\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>X</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={copyFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Copy />\r\n      </ContextMenuIconContainer>\r\n      Copy\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>C</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={pasteFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Paste />\r\n      </ContextMenuIconContainer>\r\n      Paste\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>V</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={deleteFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Delete />\r\n      </ContextMenuIconContainer>\r\n      Delete\r\n      <ContextMenuShortcutContainer>\r\n        <Key>Delete</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Separator />\r\n\r\n    <Item onClick={zoomIn}>\r\n      <ContextMenuIconContainer>\r\n        <ZoomIn />\r\n      </ContextMenuIconContainer>\r\n      Zoom in\r\n    </Item>\r\n\r\n    <Item onClick={zoomOut}>\r\n      <ContextMenuIconContainer>\r\n        <ZoomOut />\r\n      </ContextMenuIconContainer>\r\n      Zoom out\r\n    </Item>\r\n\r\n    <Separator />\r\n\r\n    <Item onClick={undoFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Undo />\r\n      </ContextMenuIconContainer>\r\n      Undo\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>Z</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={redoFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Redo />\r\n      </ContextMenuIconContainer>\r\n      Redo\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>SHIFT</Key>\r\n        <Key>Z</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Separator />\r\n\r\n    <Item\r\n     \r\n    >\r\n      <ContextMenuIconContainer>\r\n        <Settings />\r\n      </ContextMenuIconContainer>\r\n      Edit configurations...\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>E</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n  </Menu>\r\n);\r\n\r\nexport default ComponentContextMenu;","import React , {FunctionComponent} from 'react';\r\n\r\nimport { Menu, Item, Separator } from 'react-contexify';\r\n\r\nimport { Redo, Undo, Paste, ZoomIn, ZoomOut } from '../Icons';\r\nimport Key from './KeyMenu';\r\nimport ContextMenuIconContainer from './ContextMenuIconContainer';\r\nimport ContextMenuShortcutContainer from './ContextMenuShortcutContainer';\r\n\r\nimport {ContextFunction} from './FunctionList'\r\n\r\n\r\nexport const DiagramContextMenu : FunctionComponent<ContextFunction> = ({zoomIn , zoomOut , \r\n  pasteFunc , redoFunc , undoFunc} ) => (\r\n  <Menu id=\"diagram\">\r\n    <Item onClick={pasteFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Paste />\r\n      </ContextMenuIconContainer>\r\n      Paste\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>V</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Separator />\r\n\r\n    <Item onClick={zoomIn}>\r\n      <ContextMenuIconContainer>\r\n        <ZoomIn />\r\n      </ContextMenuIconContainer>\r\n      Zoom in\r\n    </Item>\r\n    <Item onClick={zoomOut}>\r\n      <ContextMenuIconContainer>\r\n        <ZoomOut />\r\n      </ContextMenuIconContainer>\r\n      Zoom out\r\n    </Item>\r\n\r\n    <Separator />\r\n\r\n    <Item onClick={undoFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Undo />\r\n      </ContextMenuIconContainer>\r\n      Undo\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>Z</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={redoFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Redo />\r\n      </ContextMenuIconContainer>\r\n      Redo\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>SHIFT</Key>\r\n        <Key>Z</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n  </Menu>\r\n);\r\n\r\nexport default DiagramContextMenu;","import React , {FunctionComponent} from 'react';\r\n\r\nimport {ComponentContextMenu} from './ComponentContextMenu';\r\nimport {DiagramContextMenu} from './DiagramContextMenu';\r\n\r\nimport 'react-contexify/dist/ReactContexify.min.css';\r\nimport {AllContextFunction} from './FunctionList'\r\n\r\n\r\n\r\nexport const ContextMenus: FunctionComponent<AllContextFunction> = ({undoFunc , redoFunc ,copyFunc , \r\n  deleteFunc , duplicateFunc , cutFunc , pasteFunc , zoomIn , zoomOut} ) => {\r\n\r\n  return (\r\n    <>\r\n    <DiagramContextMenu  pasteFunc={pasteFunc} zoomIn={zoomIn} zoomOut={zoomOut} undoFunc={undoFunc} redoFunc={redoFunc}  />\r\n    <ComponentContextMenu  copyFunc={copyFunc} pasteFunc={pasteFunc} undoFunc={undoFunc} redoFunc={redoFunc}\r\n    deleteFunc={deleteFunc} duplicateFunc={duplicateFunc} cutFunc={cutFunc} zoomIn={zoomIn} zoomOut={zoomOut} />\r\n  </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","\nimport {Action, InputType, BaseModel } from '@projectstorm/react-canvas-core';\n\n\n/**\n * Handles delete actions.\n */\nexport default class DeleteAction extends Action {\n  constructor(areShortcutsAllowed : boolean) {\n    super({\n      type: InputType.KEY_DOWN,\n      fire: ({ event }) => {\n        console.log(JSON.stringify(event))\n        //if (!areShortcutsAllowed) return;\n        if (this.engine.getModel().isLocked()) return;\n        \n        if (this.matchesInput(event)) {\n          event.preventDefault();\n          this.handleAction();\n        }\n      },\n    });\n  }\n\n  matchesInput(event : any) : boolean{\n    return event.ctrlKey && event.code === 'Delete'\n  }\n\n  handleAction = () => {\n    console.log(\"delete\")\n    const entities = this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(model => !model.isLocked());\n\n    //this.fireEvent(entities);\n\n    entities.forEach(model => model.remove());\n\n    this.engine.repaintCanvas();\n  };\n\n \n}\n","import { DefaultLinkModel, LabelModel } from '@projectstorm/react-diagrams';\r\nimport {  DeserializeEvent } from '@projectstorm/react-canvas-core';\r\nexport class SchemaLinkModel extends DefaultLinkModel {\r\n    \r\n    //ຕົວແປທີ່ກຳຫນົດວ່າ ref ທີ່ເປັນ belong to ແມ່ນມາຈາກ Port In ຫລື ຫນ້າ ຫລື ບໍ່\r\n    public RefInPort : boolean = false\r\n\r\n    setLabels(labelset : LabelModel[]){\r\n        alert(\"set label\")\r\n        this.labels = labelset\r\n    }\r\n\r\n}","import {\r\n\tLinkModel,\r\n\tPortModel,\r\n\tPortModelAlignment,\r\n\tPortModelGenerics,\r\n\tPortModelOptions\r\n} from '@projectstorm/react-diagrams-core';\r\n//import { DefaultLinkModel } from '@projectstorm/react-diagrams-defaults/src/link/DefaultLinkModel';\r\nimport {DefaultPortModel ,DefaultLinkModel } from '@projectstorm/react-diagrams-defaults'\r\nimport { AbstractModelFactory, DeserializeEvent } from '@projectstorm/react-canvas-core';\r\nimport { SchemaLinkModel } from '../link/SchemaLinkModel';\r\n\r\n\r\nexport interface SchemaPortModelOptions extends PortModelOptions {\r\n\tlabel?: string;\r\n\ttypename?: string,\r\n\tfk ?: boolean,\r\n\tpk ?: boolean,\r\n\tin?: boolean;\r\n}\r\n\r\nexport interface SchemaPortModelGenerics extends PortModelGenerics {\r\n\tOPTIONS: SchemaPortModelOptions;\r\n}\r\n\r\nexport interface DefaultPortModelOptions extends PortModelOptions {\r\n\tlabel?: string;\r\n\tin?: boolean;\r\n}\r\n\r\nexport interface DefaultPortModelGenerics extends PortModelGenerics {\r\n\tOPTIONS: DefaultPortModelOptions;\r\n}\r\n\r\nexport class SchemaPortModel extends DefaultPortModel {\r\n\tcreateLinkModel(): SchemaLinkModel  {\r\n\t\treturn new SchemaLinkModel();\r\n\t}\r\n}\r\n\r\n","import * as _ from 'lodash';\r\nimport { NodeModel, NodeModelGenerics, PortModel, PortModelAlignment } from '@projectstorm/react-diagrams-core';\r\nimport { SchemaPortModel } from '../port/SchemaPortModel';\r\nimport { BasePositionModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\r\nimport { DefaultLinkModel, DefaultPortModel, DiagramEngine, LinkModel, PathFindingLinkFactory } from '@projectstorm/react-diagrams';\r\nimport { TableData  } from '../../components/TableEditor';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport interface DefaultNodeModelOptions extends BasePositionModelOptions {\r\n\tname?: string;\r\n\tcolor?: string;\r\n}\r\n\r\nexport interface Field{\r\n\tinId ?: string,\r\n\toutId ?: string,\r\n\tfieldName : string,\r\n\tfieldType : string,\r\n\tfieldOption ?: FieldOption\r\n}\r\n\r\nexport interface FieldOption {\r\n\tportId : string,\r\n\tai ?: boolean\r\n\tpk ?: boolean,\r\n\tfk ?: boolean,\r\n\tfkTb ?: string,\r\n\tfkField ?: string\r\n}\r\n\r\nexport interface SchemaNodeModelGenerics extends NodeModelGenerics {\r\n\tOPTIONS: DefaultNodeModelOptions;\r\n}\r\n\r\nexport class SchemaNodeModel extends NodeModel<SchemaNodeModelGenerics> {\r\n\tprotected portsIn: SchemaPortModel[];\r\n\tprotected portsOut: SchemaPortModel[];\r\n\tprotected fieldOptions : FieldOption[]\t\r\n\r\n\tconstructor(name: string, color: string);\r\n\tconstructor(options?: DefaultNodeModelOptions);\r\n\tconstructor(options: any = {}, color?: string) {\r\n\t\tif (typeof options === 'string') {\r\n\t\t\toptions = {\r\n\t\t\t\tname: options,\r\n\t\t\t\tcolor: color\r\n\t\t\t};\r\n\t\t}\r\n\t\tsuper({\r\n\t\t\ttype: 'default',\r\n\t\t\tname: 'Untitled',\r\n\t\t\tcolor: 'rgb(0,192,255)',\r\n\t\t\t...options\r\n\t\t});\r\n\t\tthis.portsOut = [];\r\n\t\tthis.portsIn = [];\r\n\t\tthis.fieldOptions = []\r\n\t}\r\n\r\n\tperformanceTune() : boolean { return false}\r\n\r\n\tdoClone(lookupTable: {}, clone: SchemaNodeModel): void {\r\n\r\n\t\tconsole.log('original id : ' + this.getID())\r\n\t\tclone.portsIn = [];\r\n\t\tclone.portsOut = [];\r\n\t\t\r\n\t\tsuper.doClone(lookupTable, clone);\r\n\t\tlet fields = []\r\n\t\tfor (let i = 0; i < clone.portsIn.length; i++) {\r\n\t\t\tclone.fieldOptions[i].portId = clone.portsIn[i].getID()\r\n\t\t}\r\n\t}\r\n\r\n\tremoveFieldbyId(id : string): void{\r\n\t\t\r\n\t\tlet indexof = this.portsIn.findIndex(p=>p.getID() == id );\r\n\r\n\t\tlet fieldIndex = this.fieldOptions.findIndex(f=>f.portId == id)\r\n\r\n\t\tif(indexof === -1) return\r\n\r\n\t\tif(fieldIndex !== -1){\r\n\t\t\tthis.fieldOptions.splice(fieldIndex, 1);\r\n\t\t}\r\n\r\n\t\tthis.removeField(indexof)\r\n\t}\r\n\r\n\tremovePort(port: SchemaPortModel): void {\r\n\t\tsuper.removePort(port);\r\n\t\r\n\t\tif (port.getOptions().in) {\r\n\t\t\tthis.portsIn.splice(this.portsIn.indexOf(port), 1);\r\n\t\t} else {\r\n\t\t\tthis.portsOut.splice(this.portsOut.indexOf(port), 1);\r\n\t\t}\r\n\t}\r\n\r\n\tupdateNode(tb : TableData){\r\n\t\r\n\t\tlet fields_tb = tb.fields\r\n\t\tlet fields = this.getAllField()\r\n\t\tfor (let i = 0; i < fields_tb.length; i++) {\r\n\t\t\tif(fields[i].fieldName !== fields_tb[i].fieldName){\r\n\t\t\t\tthis.portsIn[i].getOptions().label = fields_tb[i].fieldName\r\n\t\t\t}\r\n\t\t\tif(fields[i].fieldType !== fields_tb[i].fieldType){\r\n\t\t\t\tthis.portsOut[i].getOptions().label = fields_tb[i].fieldType\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\r\n\taddField(field : Field) : SchemaPortModel[] {\r\n\t\t\r\n\t\tlet portin = this.addInPort(field.fieldName)\r\n\t\tlet portout = this.addOutPort(field.fieldType)\r\n\t\t\r\n\t\tlet add : FieldOption = {\r\n\t\t\tportId : portin.getID(),\r\n\t\t\tai : false,\r\n\t\t\tpk : false,\r\n\t\t\tfk : false,\r\n\t\t\tfkTb : \"\",\r\n\t\t\tfkField : \"\"\r\n\t\t}\r\n\r\n\t\tthis.fieldOptions.push(add)\r\n\r\n\t\treturn [portin , portout]\r\n\t}\r\n\r\n\tremoveField(i : number){\r\n\r\n\t\tthis.removePort(this.portsIn[i])\r\n\t\tthis.removePort(this.portsOut[i])\r\n\t}\r\n\r\n\tAddNewField(){\r\n\r\n\t\tlet field : Field = {\r\n\t\t\tfieldName : \"test\",\r\n\t\t\tfieldType : \"int\"\r\n\t\t}\r\n\t\tthis.addField(field)\r\n\r\n\t}\r\n\r\n\taddOrUpdateFieldOption(field : Field)  : void{\r\n\t\tlet fieldIndex = this.fieldOptions.findIndex(f=>f.portId === field.inId)\r\n\t\tif(fieldIndex === -1) return\r\n\t\t\r\n\t\tif(field.fieldOption === undefined) return \r\n\t\tthis.fieldOptions[fieldIndex] = field.fieldOption\r\n\t\tconsole.log(field.fieldOption)\r\n\r\n\t\t//fieldrs.\r\n\t\tlet fieldOption = field.fieldOption\r\n\t\tif(fieldOption == undefined) return\r\n\t\t\r\n\t\tlet targetNodeId = (fieldOption.fkTb === undefined) ? \"\" : fieldOption.fkTb\r\n\t\tlet targetPortId = (fieldOption.fkField === undefined) ? \"\" : fieldOption.fkField\r\n\t\tlet sourceIdPort = (field.inId === undefined) ? \"\" : field.inId\r\n\t\t\r\n\t\t//this.linkForeignKey(targetNodeId , targetPortId ,  sourceIdPort)\r\n\t}\r\n\r\n\tlinkForeignKey(targetPort : SchemaPortModel , sourcePort : SchemaPortModel , path : PathFindingLinkFactory): LinkModel | undefined{\r\n\r\n\t\tconsole.log(\"main field \" + sourcePort.getOptions().label + \" link with : \" + targetPort.getOptions().label)\r\n\r\n\t\tlet link =  targetPort.link(sourcePort )\r\n\r\n\t\ttargetPort.reportPosition()\r\n\t\tsourcePort.reportPosition()\r\n\t\treturn link\r\n\t}\r\n\r\n\tgetAllField() : Field[]{\r\n\t\tlet portins = this.portsIn\r\n\t\tlet portouts = this.portsOut\r\n\t\tlet rs : Field[] = []\r\n\t\t//console.log(\"get field lenght : \"+ portins.length)\r\n\r\n\t\t//console.log(this.fieldOptions)\r\n\r\n\t\tfor (let i = 0; i < portins.length; i++) {\r\n\t\t\t//console.log(\"check field \" + i )\r\n\t\t\t\r\n\t\t\tlet f = this.getField(i)\r\n\t\t\t//console.log(f)\r\n\t\t\trs.push(f)\r\n\t\t}\r\n\t\treturn rs\r\n\t}\r\n\r\n\tgetField(index : number) : Field{\r\n\r\n\t\tlet field = this.portsIn[index].getOptions().label\r\n\t\tlet type = this.portsOut[index].getOptions().label\r\n\t\tlet id = this.portsIn[index].getID()\r\n\t\t//console.log(\"check id : \" + id)\r\n\t\t\r\n\t\tlet fieldOptionIndex = this.fieldOptions.findIndex(f=>f.portId === id)\r\n\r\n\t\t//console.log(\"fieldopt index : \" + fieldOptionIndex)\r\n\r\n\t\tif(fieldOptionIndex === -1){\r\n\t\t\tlet r : Field = {\r\n\t\t\t\tinId : '',\r\n\t\t\toutId : '',\r\n\t\t\tfieldName : '',\r\n\t\t\tfieldType : '',\r\n\t\r\n\t\t\t}\r\n\t\t\treturn r\r\n\t\t}\r\n\r\n\t\tlet fieldOption = this.fieldOptions[fieldOptionIndex]\r\n\t\t//console.log(\"field name : \" + field + \" pk : \" + fieldOption.pk + \" fk : \" + fieldOption.fk)\r\n\r\n\t\tif(field === undefined) field = \"\"\r\n\t\tif(type === undefined) type = \"\"\r\n\t\t\r\n\t\tlet rs : Field = {\r\n\t\t\tinId : this.portsIn[index].getID(),\r\n\t\t\toutId : this.portsOut[index].getID(),\r\n\t\t\tfieldName : field,\r\n\t\t\tfieldType : type,\r\n\t\t\tfieldOption : fieldOption\r\n\t\t}\r\n\r\n\t\treturn rs\r\n\t}\r\n\r\n\taddPort<T extends SchemaPortModel>(port: T): T {\r\n\t\tsuper.addPort(port);\r\n\t\t\r\n\t\tif (port.getOptions().in) {\r\n\t\t\tif (this.portsIn.indexOf(port) === -1) {\r\n\t\t\t\tthis.portsIn.push(port);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.portsOut.indexOf(port) === -1) {\r\n\t\t\t\tthis.portsOut.push(port);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn port;\r\n\t}\r\n\r\n\tmirrorPort(port : SchemaPortModel){ // port in to port out || port out to port in\r\n\t\tlet portRs = (port.getOptions().in) ? this.getInPorts() : this.getOutPorts()\r\n\t\tlet index = portRs.findIndex(p=>p.getID() === port.getID())\r\n\t\tconsole.log(index)\r\n\t\tif(index === -1) return\r\n\t\treturn (port.getOptions().in) ? this.getOutPorts()[index] : this.getInPorts()[index]\r\n\t}\r\n\r\n\tportInIdtoPortOut(id : string) : SchemaPortModel {\r\n\t\tconst index =  this.getInPorts().findIndex(p=>p.getID() === id)\r\n\t\r\n\t\treturn this.getPortOutByIndex(index)\r\n\t}\r\n\r\n\tgetPortInByIndex(i:number){\r\n\t\treturn this.portsIn[i]\r\n\t}\r\n\r\n\tgetPortOutByIndex(i:number){\r\n\t\treturn this.portsOut[i]\r\n\t}\r\n\r\n\r\n\tsetNodeOption(id : string){\r\n\r\n\t\tlet port = this.getPortFromID(id) as SchemaPortModel\r\n\t\tlet isIn = port.getOptions().in\r\n\r\n\t\tif(isIn === undefined) return\r\n\r\n\t\tlet index = -1\r\n\r\n\t\tif(!isIn){\r\n\t\t\tindex = this.portsOut.findIndex(p=>p.getID() === id)\r\n\t\t\tif(index === -1) return\r\n\t\t}\r\n\r\n\t\tlet inId = (isIn) ? id : this.getPortInByIndex(index).getID()\r\n\r\n\t\tlet fieldIndex = this.fieldOptions.findIndex(f=>f.portId === inId)\r\n\r\n\t\tif(fieldIndex === -1) return\r\n\t\tthis.fieldOptions[fieldIndex].fk = true\r\n\t\t\r\n\t}\r\n\r\n\taddInPort(label: string, after = true): SchemaPortModel {\r\n\t\tlet uid = uuidv4()\r\n\t\tconst p = new SchemaPortModel({\r\n\t\t\tin: true,\r\n\t\t\tname: uid,\r\n\t\t\tlabel: label,\r\n\t\t\talignment: PortModelAlignment.LEFT\r\n\t\t});\r\n\t\tif (!after) {\r\n\t\t\tthis.portsIn.splice(0, 0, p);\r\n\t\t}\r\n\t\treturn this.addPort(p);\r\n\t}\r\n\r\n\taddOutPort(label: string, after = true): SchemaPortModel {\r\n\t\tlet uid = uuidv4()\r\n\t\tconst p = new SchemaPortModel({\r\n\t\t\tin: false,\r\n\t\t\tname: uid,\r\n\t\t\tlabel: label,\r\n\t\t\talignment: PortModelAlignment.RIGHT\r\n\t\t});\r\n\t\tif (!after) {\r\n\t\t\tthis.portsOut.splice(0, 0, p);\r\n\t\t}\r\n\t\treturn this.addPort(p);\r\n\t}\r\n\r\n\tgetOutIdFromInId(id : string){\r\n\t\tlet index  = this.getInPorts().findIndex(p=>p.getID() === id)\r\n\t\tif(index === -1) return \"\"\r\n\t\treturn this.getOutPorts()[index].getID()\r\n\t}\r\n\r\n\tgetInIdFromOutId(id : string){\r\n\t\tlet index  = this.getOutPorts().findIndex(p=>p.getID() === id)\r\n\t\tif(index === -1) return \"\"\r\n\t\treturn this.getInPorts()[index].getID()\r\n\t}\r\n\r\n\t//when convert back to model it is no function to add field and add fieldoption : \r\n\t//fix you need \r\n\r\n\tdeserialize(event: DeserializeEvent<this>) {\r\n\t\tsuper.deserialize(event);\r\n\r\n\t\tthis.options.name = event.data.name;\r\n\t\tthis.options.color = event.data.color;\r\n\t\tthis.fieldOptions = event.data.fields\r\n\r\n\t\tconsole.log(this.fieldOptions)\r\n\t\tthis.portsIn = _.map(event.data.portsInOrder, (id : any) => {\r\n\t\t\treturn this.getPortFromID(id);\r\n\t\t}) as SchemaPortModel[];\r\n\t\tthis.portsOut = _.map(event.data.portsOutOrder, (id : any) => {\r\n\t\t\treturn this.getPortFromID(id);\r\n\t\t}) as SchemaPortModel[];\r\n\r\n\t}\r\n\r\n\tserialize(): any {\r\n\r\n\t\tlet fields = []\r\n\r\n\t\tfor (let i = 0; i < this.portsIn.length; i++) {\r\n\t\t\t\r\n\t\t\tlet fieldOptionIndex = this.fieldOptions.findIndex(f=>f.portId === this.portsIn[i].getID())\r\n\t\t\t//console.log(\"fieldOptIndex : \" + fieldOptionIndex)\r\n\t\t\tif(fieldOptionIndex === -1) continue\r\n\t\t\tfields.push({\r\n\t\t\t\tportId : this.portsIn[i].getID(),\r\n\t\t\t\tai : this.fieldOptions[fieldOptionIndex].ai,\r\n\t\t\t\tpk : this.fieldOptions[fieldOptionIndex].pk,\r\n\t\t\t\tfk : this.fieldOptions[fieldOptionIndex].fk\r\n\t\t\t})\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn {\r\n\t\t\t...super.serialize(),\r\n\t\t\tname: this.options.name,\r\n\t\t\tcolor: this.options.color,\r\n\t\t\tfields : fields,\r\n\t\t\tportsInOrder: _.map(this.portsIn, (port) => {\r\n\t\t\t\treturn port.getID();\r\n\t\t\t}),\r\n\t\t\tportsOutOrder: _.map(this.portsOut, (port) => {\r\n\t\t\t\treturn port.getID();\r\n\t\t\t})\r\n\t\t};\r\n\t}\r\n\r\n\tgetInPorts(): SchemaPortModel[] {\r\n\t\treturn this.portsIn;\r\n\t}\r\n\r\n\tgetOutPorts(): SchemaPortModel[] {\r\n\t\treturn this.portsOut;\r\n\t}\r\n\r\n\t\r\n}","import { DiagramModel, LinkModel, NodeModel } from '@projectstorm/react-diagrams';\r\n\r\nimport { Action, InputType } from '@projectstorm/react-canvas-core';\r\n\r\nimport {BaseModel} from '@projectstorm/react-canvas-core';\r\nimport { SchemaNodeModel } from '../../schemanode/node/SchemaNodeModel';\r\n\r\n/**\r\n * Handle duplication (clone) actions.\r\n */\r\nexport default class NewNodeAction extends Action {\r\n  constructor(areShortcutsAllowed : boolean) {\r\n    super({\r\n      type: InputType.KEY_DOWN,\r\n      fire: ({ event }) => {\r\n        if (!areShortcutsAllowed) return;\r\n        if (this.engine.getModel().isLocked()) return;\r\n\r\n        if (this.matchesInput(event)) {\r\n          event.preventDefault();\r\n          this.handleAction();\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  matchesInput(event : any) : boolean{\r\n    return event.ctrlKey && event.code === 'KeyB'\r\n  }\r\n\r\n  handleAction = () => {\r\n     \r\n    let snode =  new SchemaNodeModel({\r\n\t\tname: 'Product',\r\n\t\tcolor: 'rgb(0,192,255)'\r\n\t});\r\n    snode.addField({fieldName : \"Id\" , fieldType : \"int\"})\r\n\r\n    snode.setPosition(100, 100);\r\n\r\n    let model = this.engine.getModel() as DiagramModel\r\n\r\n    model.addAll(snode)\r\n\r\n    //this.engine.fireEvent({ nodes: clones }, 'componentsAdded');\r\n\r\n    this.engine.repaintCanvas();\r\n  };\r\n}\r\n","import { DiagramModel, LinkModel, NodeModel } from '@projectstorm/react-diagrams';\n\nimport { Action, InputType } from '@projectstorm/react-canvas-core';\n\nimport {BaseModel} from '@projectstorm/react-canvas-core';\n\n/**\n * Handle duplication (clone) actions.\n */\nexport default class DuplicateAction extends Action {\n  constructor(areShortcutsAllowed : boolean) {\n    super({\n      type: InputType.KEY_DOWN,\n      fire: ({ event }) => {\n        if (!areShortcutsAllowed) return;\n        if (this.engine.getModel().isLocked()) return;\n\n        if (this.matchesInput(event)) {\n          event.preventDefault();\n          this.handleAction();\n        }\n      },\n    });\n  }\n\n  matchesInput(event : any) : boolean{\n    return event.ctrlKey && event.code === 'KeyD'\n  }\n\n  handleAction = () => {\n    const model = this.engine.getModel() as DiagramModel\n\n    const clones : BaseModel[] = model \n      .getSelectedEntities()\n      .filter(entity => entity instanceof BaseModel)\n      .filter(entity => !entity.isLocked())\n      .map(entity => entity.clone());\n\n    model.clearSelection();\n\n    clones.forEach(clone => {\n\n      if (clone instanceof NodeModel) {\n        model.addNode(clone)\n        clone.setSelected(true);\n      }\n      \n      \n    });\n\n    //this.engine.fireEvent({ nodes: clones }, 'componentsAdded');\n\n    this.engine.repaintCanvas();\n  };\n}\n","import { Action, InputType , DeserializeEvent } from '@projectstorm/react-canvas-core';\r\n\r\nimport {BaseModel} from '@projectstorm/react-canvas-core';\r\nimport { DiagramModel, NodeModel } from '@projectstorm/react-diagrams';\r\n\r\nimport { SchemaNodeModel } from '../../schemanode/node/SchemaNodeModel';\r\n\r\n\r\n/**\r\n * Handles clipboard actions.\r\n */\r\nexport default class ClipboardAction extends Action {\r\n  constructor(areShortcutsAllowed : boolean) {\r\n    super({\r\n      type: InputType.KEY_DOWN,\r\n      fire: ({ event }) => {\r\n        if (!areShortcutsAllowed) return;\r\n        if (this.engine.getModel().isLocked()) return;\r\n\r\n        if (this.matchesInput(event)) {\r\n          event.preventDefault();\r\n\r\n          const e : any = event;\r\n          if (e.code === 'KeyX') this.handleCut();\r\n          if (e.code === 'KeyC') this.handleCopy();\r\n          if (e.code === 'KeyV') this.handlePaste();\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  matchesInput(event : any) : boolean{\r\n        return event.ctrlKey && (event.code === 'KeyX' || event.code === \"KeyC\" || \r\n        event.code === \"KeyV\")     \r\n  }\r\n\r\n  getSelectedComponents = () =>\r\n    this.engine\r\n      .getModel()\r\n      .getSelectedEntities()\r\n      .filter(entity => entity instanceof SchemaNodeModel)\r\n      .filter(entity => !entity.isLocked());\r\n\r\n  /** Cut */\r\n  handleCut() {\r\n    let selectNodes = this.getSelectedComponents() as SchemaNodeModel[]\r\n    let clonenode = selectNodes[0].clone()\r\n    const copie = clonenode.serialize()\r\n\r\n    localStorage.setItem('clipboard', JSON.stringify(copie));\r\n\r\n    selectNodes.forEach(model => model.remove());\r\n\r\n    this.engine.repaintCanvas();\r\n\r\n  };\r\n\r\n  /** Copy */\r\n  handleCopy() {\r\n    let selectNodes = this.getSelectedComponents() as SchemaNodeModel[]\r\n    let clonenode = selectNodes[0].clone()\r\n    const copie = clonenode.serialize()\r\n\r\n\r\n    console.log(copie)\r\n\r\n    localStorage.setItem('clipboard', JSON.stringify(copie));\r\n  };\r\n\r\n  onPromise(id : string) {\r\n    return new Promise<BaseModel>((resolve, reject) => {\r\n      let rs = new SchemaNodeModel()\r\n      resolve(rs);\r\n    });\r\n  }\r\n\r\n\r\n  /** Paste */\r\n  handlePaste() {\r\n\r\n\r\n    let clipboardstr = localStorage.getItem('clipboard')\r\n\r\n    if(clipboardstr == null) clipboardstr = \"\"\r\n\r\n    const clipboard = JSON.parse(clipboardstr);\r\n    if (!clipboard) return;\r\n\r\n    console.log(clipboard)\r\n\r\n\r\n    let pastemodel = new SchemaNodeModel()\r\n \r\n    let deserializeData : any = {\r\n      data : clipboard,\r\n      engine : this.engine,\r\n      registerModel: () => {},\r\n    }\r\n\r\n    pastemodel.deserialize(deserializeData)\r\n    \r\n  \r\n    pastemodel.setPosition(100, 100);\r\n\r\n    console.log(pastemodel)\r\n    let model = this.engine.getModel() as DiagramModel\r\n    model.addAll(pastemodel)\r\n\r\n\r\n    //this.engine.fireEvent( nodes: models , 'componentsAdded');\r\n\r\n    this.engine.repaintCanvas();\r\n  };\r\n\r\n\r\n\r\n\r\n  \r\n}\r\n","import * as React from 'react';\r\nimport { DiagramEngine, PortWidget } from '@projectstorm/react-diagrams-core';\r\nimport { SchemaPortModel } from './SchemaPortModel';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { MenuProvider  } from 'react-contexify';\r\n\r\n\r\nexport interface DefaultPortLabelProps {\r\n\tport: SchemaPortModel;\r\n\tengine: DiagramEngine;\r\n\r\n}\r\n\r\n\r\n\texport const PortLabel = styled.div`\r\n\t\tdisplay: flex;\r\n\t\tmargin-top: 1px;\r\n\t\talign-items: center;\r\n\t\t&:hover {\r\n\t\t\tbackground: rgb(192, 255, 0);\r\n\t\t}\r\n\t`;\r\n\r\n\texport const Label = styled.div`\r\n\t\tpadding: 0 5px;\r\n\t\tflex-grow: 1;\r\n\t`;\r\n\r\n\texport const Port = styled.div`\r\n\t\twidth: 16px;\r\n\t\theight: 21px;\r\n\t\tbackground: rgba(255, 255, 244, 0.1);\r\n\t\t&:hover {\r\n\t\t\tbackground: rgb(192, 255, 0);\r\n\t\t}\r\n\t`;\r\n\r\n\r\nexport class SchemaPortLabel extends React.Component<DefaultPortLabelProps> {\r\n\trender() {\r\n\t\tconst port = (\r\n\t\t\t<PortWidget engine={this.props.engine} port={this.props.port}>\r\n\t\t\t\t<Port />\r\n\t\t\t</PortWidget>\r\n\t\t);\r\n\t\tconst label = <Label>{this.props.port.getOptions().label}</Label>;\r\n\r\n\t\treturn (\r\n\t\t\t<MenuProvider id=\"nodeedit\" storeRef={false} >\r\n\t\t\t\t<PortLabel>\r\n\t\t\t\t{this.props.port.getOptions().in ? port : label}\r\n\t\t\t\t{this.props.port.getOptions().in ? label : port}\r\n\t\t\t\t</PortLabel>\r\n\t\t\t</MenuProvider>\r\n\t\t\t\r\n\t\t);\r\n\t}\r\n}","import * as React  from 'react';\r\nimport * as _ from 'lodash';\r\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\r\nimport { SchemaNodeModel } from './SchemaNodeModel';\r\nimport { SchemaPortLabel } from '../port/SchemaPortLabelWidget';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/core';\r\nimport { SchemaPortModel } from '../port/SchemaPortModel';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport { RootState } from '../../store';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { FunctionComponent } from 'react';\r\nimport { NodeTheme } from '../../reducer/theme/theme';\r\n\r\n\texport const Node = styled.div<{ background ?: string; selected: boolean }>`\r\n\t\tborder: solid 1px ${(p) => (p.selected ? 'rgb(0,192,255)' : 'grey')};\r\n\t\tcolor: white;\r\n\t\toverflow: visible;\r\n\t\tfont-size: 13px;\r\n\t`;\r\n\r\n\texport const Title = styled.div<{ background ?: string}>`\r\n\t\tbackground-color: ${(p) => p.background};\r\n\t\tdisplay: flex;\r\n\t\tfont-weight: 600;\r\n\t\twhite-space: nowrap;\r\n\t\tjustify-items: center;\r\n\t`;\r\n\r\n\texport const TitleName = styled.div`\r\n\t\tmargin-left : 10px;\r\n\t\tflex-grow: 1;\r\n\t\tpadding: 10px 5px;\r\n\t`;\r\n\r\n\texport const Ports = styled.div`\r\n\t\tdisplay: flex;\r\n\t\tcolor : #5E666E;\r\n\t\tfont-weight: 600;\r\n\t\tbackground-color: white;\r\n\t`;\r\n\r\n\texport const PortsContainer = styled.div`\r\n\t\tflex-grow: 1;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\t&:first-of-type {\r\n\t\t\tmargin-right: 10px;\r\n\t\t}\r\n\t\t&:only-child {\r\n\t\t\tmargin-right: 0px;\r\n\t\t}\r\n\t`;\r\n\r\ninterface GetStateProp{\r\n\tnodetheme ?: NodeTheme;\r\n}\r\n\r\nexport interface DefaultNodeProps {\r\n\tnode: SchemaNodeModel;\r\n\tengine: DiagramEngine;\r\n\r\n}\r\n\r\ntype Props = DefaultNodeProps & GetStateProp\r\n\r\n/**\r\n * Default node that models the DefaultNodeModel. It creates two columns\r\n * for both all the input ports on the left, and the output ports on the right.\r\n */\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n\tnodetheme: state.themeReducer.nodeTheme\r\n  })\r\n\r\n\r\nexport const SchemaNodeWidget : FunctionComponent<Props> = ({node , engine , nodetheme}) => {\r\n\r\n\tconst theme = useSelector((state:RootState) => state.themeReducer.nodeTheme)\r\n\r\n\tconst fireAction = (event : any) => {\r\n\t\tengine.getActionEventBus().fireAction({\r\n\t\t  event: {\r\n\t\t\t...event,\r\n\t\t\tkey: '',\r\n\t\t\tpreventDefault: () => {},\r\n          stopPropagation: () => {},\r\n\t\t  },\r\n\t\t});\r\n\t  }\r\n\r\n\t const fireDeleteEvent = () => {\r\n\t\tlet e = { type: 'keydown', ctrlKey: true, code: 'Delete' }\r\n\t\tfireAction(e);\r\n\t  }\r\n\r\n\tconst fireDoubleClick = () => {\r\n\t\tif(engine != undefined){\r\n\t\t\tengine.fireEvent({ }, 'onDoubleClick');\r\n\t\t}\r\n\t}\r\n\r\n\tconst generatePort = (port : SchemaPortModel) => {\t\r\n\t\treturn <SchemaPortLabel engine={engine} port={port} key={port.getID()}  />;\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<Node\r\n\t\t\t\tdata-default-node-name={node.getOptions().name}\r\n\t\t\t\tselected={node.isSelected()}\r\n\t\t\t\tbackground={theme.bgcolor} onDoubleClick={fireDoubleClick}>\r\n\t\t\t\t<Title background={theme.bgcolor}>\r\n\t\t\t\t\t<TitleName>{node.getOptions().name} {nodetheme?.bgcolor}</TitleName>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<IconButton  onClick={fireDeleteEvent} color=\"inherit\" size=\"small\">\r\n          \t\t\t\t<DeleteOutlineIcon/>\r\n        \t\t\t</IconButton>\r\n\t\t\t\t</Title>\r\n\t\t\t\t<Ports>\r\n\t\t\t\t\t<PortsContainer>{_.map(node.getInPorts(), generatePort)}</PortsContainer>\r\n\t\t\t\t\t<PortsContainer>{_.map(node.getOutPorts(), generatePort)}</PortsContainer>\r\n\t\t\t\t</Ports>\r\n\t\t\t</Node>\r\n\t)\r\n}\r\n\r\nexport default connect(mapStateToProps)(SchemaNodeWidget)\r\n\r\n/*\r\nexport class SchemaNodeWidget extends React.Component<DefaultNodeProps> {\r\n\r\n \r\n\r\n\t  fireAction (event : any) {\r\n\t\tthis.props.engine.getActionEventBus().fireAction({\r\n\t\t  event: {\r\n\t\t\t...event,\r\n\t\t\tkey: '',\r\n\t\t\tpreventDefault: () => {},\r\n          stopPropagation: () => {},\r\n\t\t  },\r\n\t\t});\r\n\t  }\r\n\r\n\t  fireDeleteEvent(engine : DiagramEngine){\r\n\t\tlet e = { type: 'keydown', ctrlKey: true, code: 'Delete' }\r\n\t\tthis.fireAction(e);\r\n\t  }\r\n\r\n\tfireDoubleClick(engine : DiagramEngine){\r\n\t\tif(engine != undefined){\r\n\t\t\tengine.fireEvent({ }, 'onDoubleClick');\r\n\t\t}\r\n\t}\r\n\r\n\tgeneratePort = (port : SchemaPortModel) => {\t\r\n\t\treturn <SchemaPortLabel engine={this.props.engine} port={port} key={port.getID()}  />;\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Node\r\n\t\t\t\tdata-default-node-name={this.props.node.getOptions().name}\r\n\t\t\t\tselected={this.props.node.isSelected()}\r\n\t\t\t\tbackground={this.props.node.getOptions().color} onDoubleClick={() => this.fireDoubleClick(this.props.engine)}>\r\n\t\t\t\t<Title>\r\n\t\t\t\t\t<TitleName>{this.props.node.getOptions().name}</TitleName>\r\n\t\t\t\t\t<IconButton  onClick={()=> this.fireDeleteEvent(this.props.engine)} color=\"inherit\" size=\"small\">\r\n          \t\t\t\t<DeleteOutlineIcon/>\r\n        \t\t\t</IconButton>\r\n\t\t\t\t</Title>\r\n\t\t\t\t<Ports>\r\n\t\t\t\t\t<PortsContainer>{_.map(this.props.node.getInPorts(), this.generatePort)}</PortsContainer>\r\n\t\t\t\t\t<PortsContainer>{_.map(this.props.node.getOutPorts(), this.generatePort)}</PortsContainer>\r\n\t\t\t\t</Ports>\r\n\t\t\t</Node>\r\n\t\t);\r\n\t}\r\n}\r\n*/\r\n\r\n\r\n","import * as React from 'react';\r\nimport { SchemaNodeModel } from './SchemaNodeModel';\r\nimport { SchemaNodeWidget } from './SchemaNodeWidget';\r\nimport { AbstractReactFactory , GenerateWidgetEvent } from '@projectstorm/react-canvas-core';\r\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\r\nimport { MenuProvider  } from 'react-contexify';\r\n\r\nexport class SchemaNodeFactory extends AbstractReactFactory<SchemaNodeModel, DiagramEngine> {\r\n\r\n\tconstructor() {\r\n\t\tsuper('default');\r\n\t}\r\n\t\r\n\r\n\tgenerateReactWidget(event : any): JSX.Element {\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<MenuProvider id=\"component\" storeRef={false} data={event.model}>\r\n\t\t\t\t<SchemaNodeWidget engine={this.engine} node={event.model}  />\r\n\t\t\t</MenuProvider>\r\n\t\t\t)\r\n\t}\r\n\r\n\tgenerateModel(initialConfig : any) {\r\n\t\treturn new SchemaNodeModel('Node 2', 'rgb(192,255,0)');\r\n\t}\r\n}","import { SchemaPortModel } from './SchemaPortModel';\r\nimport { AbstractModelFactory } from '@projectstorm/react-canvas-core';\r\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\r\n\r\nexport class SchemaPortFactory extends AbstractModelFactory<SchemaPortModel, DiagramEngine> {\r\n\tconstructor() {\r\n\t\tsuper('default');\r\n\t}\r\n\r\n\tgenerateModel(): SchemaPortModel {\r\n\t\treturn new SchemaPortModel({\r\n\t\t\tname: 'unknown'\r\n\t\t});\r\n\t}\r\n}","import createEngine, { DefaultLinkModel, DefaultNodeModel , DiagramEngine,  DiagramModel , PathFindingLinkFactory } from \"@projectstorm/react-diagrams\";\r\n\r\n\r\nimport {SchemaNodeModel} from '../schemanode/node/SchemaNodeModel'\r\nimport {SchemaNodeFactory} from '../schemanode/node/SchemaNodeFactory'\r\n\r\nimport { SchemaPortFactory } from \"../schemanode/port/SchemaPortFactory\";\r\n\r\n\r\n\r\nfunction GetEngine() : DiagramEngine  {\r\n \r\n    let rs = createEngine({registerDefaultDeleteItemsAction: false,\r\n})\r\n\r\n    rs.getNodeFactories().registerFactory(new SchemaNodeFactory());\r\n\trs.getPortFactories().registerFactory(new SchemaPortFactory())\r\n\r\n\r\n    const model = new DiagramModel();\r\n\r\n\r\n    /*\r\n    var node1 = new DefaultNodeModel({\r\n\t\tname: 'Node 1',\r\n\t\tcolor: 'rgb(0,192,255)'\r\n\t});\r\n\tnode1.setPosition(100, 100);\r\n\tlet port1 = node1.addOutPort('id');\r\n    node1.addInPort('int');\r\n\r\n\t//3-B) create another default node\r\n\tvar node2 = new DefaultNodeModel('Node 2', 'rgb(192,255,0)');\r\n\tlet port2 = node2.addInPort('product_id');\r\n    node2.addOutPort('int');\r\n\tnode2.setPosition(400, 100);\r\n\r\n\t// link the ports\r\n\tlet link1 = port1.link<DefaultLinkModel>(port2);\r\n\tlink1.getOptions().testName = 'Test';\r\n\tlink1.addLabel('Hello World!');\r\n    */\r\n    \r\n    rs.setModel(model);\r\n\r\n    return rs\r\n}\r\n\r\n\r\n\r\nconst engine = GetEngine()\r\nexport {engine , GetEngine}","\r\nimport * as _ from 'lodash';\r\n\r\n//import ClipboardAction from './actions/ClipboardAction';\r\nimport DeleteAction from './actions/DeleteAction';\r\nimport NewNodeAction from './actions/NewNodeAction';\r\nimport DuplicateAction from './actions/DuplicateAction';\r\n//import UndoRedoAction from './actions/UndoRedoAction';\r\nimport ZoomAction from './actions/ZoomAction';\r\nimport ClipboardAction from './actions/Clipboard'\r\nimport { Action } from '@projectstorm/react-canvas-core';\r\n\r\nimport { DefaultLabelModel, DefaultLinkModel, DefaultPortModel , DiagramEngine, DiagramModel, LabelModel, LinkModel, PathFindingLinkFactory } from '@projectstorm/react-diagrams';\r\nimport { GetEngine } from '../libs/engine'\r\n\r\nimport { TableData } from '../components/TableEditor';\r\nimport { SchemaNodeModel, Field } from '../schemanode/node/SchemaNodeModel';\r\nimport { SchemaLinkModel } from '../schemanode/link/SchemaLinkModel';\r\nimport { SchemaPortModel } from '../schemanode/port/SchemaPortModel';\r\nimport { tables } from '../data/testdiagramdata';\r\n\r\nexport class DiagramController {\r\n\r\n  isLock: boolean;\r\n  engine: DiagramEngine\r\n\r\n  constructor() {\r\n    this.isLock = false\r\n    this.engine = GetEngine()\r\n\r\n    this.initActions()\r\n\r\n    console.log(this.getEngine().getModel().getZoomLevel())\r\n\r\n    let links = this.getEngine().getModel().getLinks()\r\n\r\n    let models = this.getEngine().getModel().getModels()\r\n\r\n    console.log(links)\r\n\r\n    //let p1= links[0].getTargetPort()\r\n    //let nodemd = p1.getNode() as SchemaNodeModel\r\n\r\n    //links[0].remove()\r\n\r\n    //this.getEngine().repaintCanvas()\r\n\r\n    //alert(nodemd.getOptions().name)\r\n    //console.log(p1)\r\n  }\r\n\r\n  initActions() {\r\n\r\n    let actions: Action[] = [\r\n      new DeleteAction(true),\r\n      new NewNodeAction(true),\r\n      new DuplicateAction(true),\r\n      new ClipboardAction(true)\r\n\r\n    ]\r\n\r\n    actions.forEach(Action =>\r\n      this.engine\r\n        .getActionEventBus()\r\n        .registerAction(Action),\r\n    );\r\n\r\n  }\r\n\r\n  fireAction(event: any) {\r\n    this.engine.getActionEventBus().fireAction({\r\n      event: {\r\n        ...event,\r\n        key: '',\r\n        preventDefault: () => { },\r\n        stopPropagation: () => { },\r\n      },\r\n    });\r\n  }\r\n\r\n  removeLinkbyPort(inPort : SchemaPortModel , outPort : SchemaPortModel){\r\n    const linksIn = inPort.getLinks()\r\n    const linksOut = outPort.getLinks()\r\n    this.removeLink(linksIn , inPort)\r\n    this.removeLink(linksOut , outPort)\r\n  }\r\n\r\n  removeLink(links : {[id:string] : LinkModel} , port : SchemaPortModel){\r\n    let linkLenght = Object.keys(links).length;\r\n    if(linkLenght >= 1){\r\n      for (const key in links) {\r\n        if(links[key].getSourcePort().getID() === port.getID()){\r\n          links[key].remove()\r\n          this.getEngine().repaintCanvas()\r\n          break\r\n        }  \r\n      }\r\n    }\r\n  }\r\n\r\n  currentNode(): SchemaNodeModel | undefined {\r\n    let entities = this.engine\r\n      .getModel()\r\n      .getSelectedEntities()\r\n      .filter(model => !model.isLocked());\r\n\r\n    if (entities.length == 0) return undefined\r\n\r\n    let node = entities[0]\r\n\r\n    if (node instanceof SchemaNodeModel === false) return undefined\r\n\r\n    let rs = node as SchemaNodeModel\r\n\r\n    return rs\r\n  }\r\n\r\n  findSourcesLinkInPort(port : SchemaPortModel) : LinkModel[]  {\r\n    let rs = []\r\n    let links = port.getLinks()\r\n    let portId = port.getID()\r\n    for (const key in links) {\r\n      if (Object.prototype.hasOwnProperty.call(links, key)) {\r\n        if(links[key].getSourcePort().getID() === portId){\r\n          rs.push(links[key])\r\n        }\r\n      }\r\n    }\r\n    return rs\r\n  }\r\n\r\n  connectRealation(selectPort : SchemaPortModel,selectPortOut : SchemaPortModel,relationName : string){\r\n\r\n    const linksIn = this.findSourcesLinkInPort(selectPort)\r\n\r\n    if(linksIn.length > 0){\r\n      this.setRelationLink(linksIn[0] as SchemaLinkModel , relationName)\r\n      return\r\n    }\r\n\r\n    const linksOut = this.findSourcesLinkInPort(selectPortOut)\r\n\r\n    if(linksOut.length > 0){\r\n      this.setRelationLink(linksOut[0] as SchemaLinkModel , relationName)\r\n      return\r\n    }\r\n    \r\n  }\r\n\r\n  setRelationLink(link : SchemaLinkModel,relationName : string){\r\n    link.setLabels([])   \r\n    link.addLabel(relationName)\r\n    this.getEngine().repaintCanvas()\r\n  }\r\n\r\n  saveDataByString(data : string){\r\n    const model2 = new DiagramModel()\r\n    if(data !== \"\"){\r\n      const model = JSON.parse(data)\r\n      let obj: ReturnType<DiagramModel['serialize']> = model\r\n      model2.deserializeModel(obj, this.getEngine())\r\n        if (model2 == null) {\r\n          console.log(\"model null\")\r\n          return\r\n        }\r\n    }\r\n\r\n\t\t\tthis.getEngine().setModel(model2)\r\n\r\n      this.registerLinkEvent()\r\n  }\r\n\r\n  registerLinkEvent(){\r\n    this.getEngine().getModel().registerListener({\r\n      linksUpdated: (e:any ) => this.isCompleteLink(e),\r\n      selectionChanged : (e:any) => {console.log(e)}\r\n    })\r\n    \r\n  }\r\n\r\n  isCompleteLink(e:any){\r\n    console.log(\"create link\")\r\n    const link : DefaultLinkModel = e.link\r\n    let sourcePort = link.getSourcePort() as SchemaPortModel\r\n    let node = sourcePort.getNode() as SchemaNodeModel\r\n    let mirrorPort = node.mirrorPort(sourcePort)\r\n    if(mirrorPort === undefined) return\r\n    console.log(mirrorPort.getOptions().label)\r\n    let sourceLinkArr = this.findSourcesLinkInPort(mirrorPort)\r\n    console.log(sourceLinkArr)\r\n    if(sourceLinkArr.length > 0){\r\n      alert(\"error one field can have only one foreign key\")\r\n      link.remove()\r\n      this.getEngine().repaintCanvas()\r\n    }\r\n\r\n    link.registerListener({\r\n      targetPortChanged:(ev : any) => this.toggleFk(ev)\r\n    })\r\n\r\n    //let node = this.currentNode()\r\n    //if(node === undefined) return \r\n    //node.set\r\n  }\r\n\r\n  toggleFk(ev : any){\r\n    let linkmodel : DefaultLinkModel = ev.entity\r\n    let port = linkmodel.getSourcePort() as SchemaPortModel\r\n    let node = port.getNode() as SchemaNodeModel\r\n    let links = this.findSourcesLinkInPort(port)\r\n    if(links.length > 1 ){\r\n      links[0].remove()\r\n      this.getEngine().repaintCanvas()\r\n    }\r\n    node.setNodeOption(port.getID())\r\n  }\r\n\r\n  direactionNode(node1 : SchemaNodeModel , node2 : SchemaNodeModel){\r\n    let x1 = node1.getPosition().x\r\n    let x2=  node2.getPosition().x\r\n    console.log(\"x1=\" + x1 +  \" x2=\" + x2) \r\n    const dir = (x1 <= x2) ? \"front\" : \"back\"\r\n    return dir\r\n  }\r\n\r\n  getNodeById(id : string){\r\n    return this.getEngine().getModel().getNode(id) as SchemaNodeModel\r\n  }\r\n\r\n  clearDiagram(){\r\n    const modelset = new DiagramModel()\r\n    this.getEngine().setModel(modelset)\r\n    this.registerLinkEvent()\r\n    this.getEngine().repaintCanvas()\r\n  }\r\n\r\n  linkNode() {\r\n    let nodes = this.getEngine().getModel().getNodes() as SchemaNodeModel[]\r\n    alert(nodes[1].getOptions().name)\r\n    let sourcePort = nodes[0].getOutPorts()[0]\r\n    let targetPort = nodes[1].getInPorts()[0]\r\n\r\n    let link = sourcePort.link(targetPort)\r\n\r\n    targetPort.reportPosition()\r\n    sourcePort.reportPosition()\r\n\r\n    this.getEngine().getModel().addAll(link);\r\n    this.getEngine().repaintCanvas()\r\n  }\r\n\r\n  updateNodeName(e: string) {\r\n    let node = this.currentNode()\r\n    if (node == undefined) return\r\n    node.getOptions().name = e\r\n    this.getEngine().repaintCanvas()\r\n  }\r\n\r\n  linkModel(sourcePort : SchemaPortModel , targetPort: SchemaPortModel) {\r\n\r\n    let sourceLink = this.findSourcesLinkInPort(sourcePort)\r\n\r\n    if(sourceLink.length > 0){\r\n      sourceLink[0].remove()\r\n    }\r\n\r\n    let link =  sourcePort.link<SchemaLinkModel>(targetPort )\r\n\t\tsourcePort.reportPosition()\r\n\t\ttargetPort.reportPosition()\r\n\r\n    this.engine.getModel().addAll(link)\r\n    this.engine.repaintCanvas()\r\n  }\r\n\r\n  setCurrentNode(node: SchemaNodeModel) {\r\n    this.engine.repaintCanvas()\r\n  }\r\n\r\n  updateNode(tb: TableData) {\r\n    let node = this.currentNode()\r\n\r\n    if (node == undefined) return\r\n\r\n    node.updateNode(tb)\r\n\r\n    this.getEngine().repaintCanvas()\r\n\r\n  }\r\n\r\n  zoomPercent(value : number){\r\n    let model = this.getEngine().getModel()\r\n    model.setZoomLevel(value)\r\n    this.getEngine().repaintCanvas()\r\n  }\r\n\r\n  doZoom(value : number){\r\n    let model = this.getEngine().getModel()\r\n    let zoomLevel = model.getZoomLevel()\r\n    console.log(\"zoom level : \"+zoomLevel)\r\n    model.setZoomLevel(zoomLevel + value)\r\n    this.getEngine().repaintCanvas()\r\n  }\r\n\r\n  zoomFit = () =>{\r\n    console.log(\"zoom fit\")\r\n    this.getEngine().zoomToFit()\r\n  }\r\n\r\n  updateFieldOption(f: Field) {\r\n    let node = this.currentNode()\r\n    //if (node == undefined) return\r\n    node?.addOrUpdateFieldOption(f)\r\n  }\r\n\r\n  createDiagramWithSchemaTable(tables : TableData[]){\r\n    let model = new DiagramModel()\r\n    let nodes : SchemaNodeModel[] = []\r\n\r\n    let spaceCol = 250\r\n    let spaceRow = 200\r\n    let curCol = 0\r\n    let maxCol = 6\r\n    alert(spaceCol)\r\n    tables.forEach(tb => {\r\n      let node = new SchemaNodeModel()\r\n      node.getOptions().name = tb.tablename\r\n      let nodeTotal = nodes.length\r\n      let posX = 0\r\n      let posY = 50\r\n      if(nodeTotal > 0){\r\n        alert(nodeTotal + 1 + \"tb\")\r\n        let point = nodes[nodeTotal-1].getPosition()\r\n        posX = point.x\r\n        posX += spaceCol\r\n        posY = point.y\r\n        if(curCol === maxCol){\r\n          posX = 0\r\n          curCol = 0\r\n          posY += spaceRow\r\n        }\r\n        alert(\"current col : \" + curCol)\r\n        \r\n      }\r\n\r\n      alert(posX + \"and\" + posY)\r\n\r\n      node.setPosition(posX  , posY)\r\n      \r\n      this.createPorts(node,tb.fields)\r\n      \r\n      curCol += 1\r\n      nodes.push(node)\r\n    });\r\n    model.addAll(...nodes)\r\n    this.getEngine().setModel(model)\r\n    this.registerLinkEvent()\r\n    this.getEngine().repaintCanvas()\r\n  }\r\n\r\n  getRelationData() : any[]{\r\n    let rs : any[] = []\r\n    let links = this.getEngine().getModel().getLinks()\r\n    links.forEach(link => {\r\n      let targetField = \"\"\r\n      let mainField = \"\"\r\n      let sourcePort = link.getSourcePort() as SchemaPortModel\r\n      let targetPort = link.getTargetPort() as SchemaPortModel\r\n      let targetNode = targetPort.getNode() as SchemaNodeModel\r\n      let sourceNode = sourcePort.getNode() as SchemaNodeModel\r\n\r\n      if(sourcePort.getOptions().in){ // in to out => in to in\r\n        let mainFieldData = sourcePort.getOptions().label\r\n        mainField = (mainFieldData !== undefined) ? mainFieldData : \"\"\r\n        let mirrorTargetPort = targetNode.mirrorPort(targetPort) \r\n        if(mirrorTargetPort !== undefined){\r\n          let targetFieldData = mirrorTargetPort.getOptions().label\r\n          targetField = (targetFieldData !== undefined) ? targetFieldData : \"\"\r\n        }\r\n      }\r\n\r\n      if(sourcePort.getOptions().in === false){  // out to in => in to in\r\n        let targetFieldData = targetPort.getOptions().label\r\n        targetField = (targetFieldData !== undefined) ? targetFieldData : \"\"\r\n\r\n        let mirrorSourcePort = sourceNode.mirrorPort(sourcePort) \r\n        if(mirrorSourcePort !== undefined){\r\n          let mainFieldData = mirrorSourcePort.getOptions().label\r\n          mainField = (mainFieldData !== undefined) ? mainFieldData : \"\"\r\n        }\r\n      }\r\n\r\n      let add : any = {\r\n        mainTable : sourceNode.getOptions().name,\r\n        targetTable : targetNode.getOptions().name,\r\n        mainField,\r\n        targetField\r\n      }\r\n      rs.push(add)\r\n    });\r\n    return rs\r\n  }\r\n\r\n  \r\n  createPorts(node : SchemaNodeModel,fields : Field[]){\r\n    fields.forEach(field => {\r\n      node.addField({fieldName : field.fieldName , fieldType : field.fieldType })\r\n    });\r\n  }\r\n\r\n  allTableWithFkData(){\r\n    let rs : any = []\r\n    let tables = this.allTable()\r\n    tables.forEach(tb=>{\r\n      let tbData : any = tb\r\n      let tbid = tb.id\r\n      if(tbid === undefined) tbid = \"\"\r\n      let node = this.findNodeById(tbid)\r\n      for (let i = 0; i < tb.fields.length; i++) {\r\n        let field = tb.fields[i]\r\n        let fkData = this.getFkDataFromField(node,field)\r\n        console.log(fkData)\r\n        let fieldData : any= {...field , ...fkData}\r\n        tbData.fields[i] = fieldData\r\n      }\r\n \r\n      rs.push(tbData)\r\n    })\r\n    return rs\r\n  }\r\n\r\n  findNodeById(id:string) : SchemaNodeModel {\r\n    return this.getEngine().getModel().getNode(id) as SchemaNodeModel\r\n  }\r\n\r\n  getFkDataFromField(node : SchemaNodeModel ,field : Field){\r\n    console.count(\"check fk field\")\r\n    let rs : any = {\r\n      fieldName : \"\",\r\n      tableName : \"\"\r\n    }\r\n    let fk = field.fieldOption?.fk\r\n    if(fk === undefined || !fk) return rs\r\n    let inPort = node.getPortFromID(field.inId) as SchemaPortModel\r\n    let outPort = node.mirrorPort(inPort) as SchemaPortModel\r\n\r\n    let linksIn =  this.findSourcesLinkInPort(inPort)\r\n\r\n    let targetPortFromLinkIn = this.getTargetInPortFromLink(linksIn)\r\n\r\n    if(targetPortFromLinkIn !== undefined){\r\n      let targetNode = targetPortFromLinkIn.getNode() as SchemaNodeModel\r\n      rs.fieldName = targetPortFromLinkIn.getOptions().label\r\n      rs.tableName = targetNode.getOptions().name\r\n      return rs\r\n    }\r\n\r\n    let linksOut = this.findSourcesLinkInPort(outPort)\r\n\r\n    let targetPortFromLinkout = this.getTargetInPortFromLink(linksOut)\r\n\r\n    if(targetPortFromLinkout !== undefined ) {\r\n      let targetNode = targetPortFromLinkout.getNode() as SchemaNodeModel\r\n      rs.fieldName = targetPortFromLinkout.getOptions().label\r\n      rs.tableName = targetNode.getOptions().name\r\n      return rs\r\n    }\r\n\r\n  }\r\n\r\n  getTargetInPortFromLink(links : LinkModel[]){\r\n    if(links.length > 0){\r\n      let targetPort = links[0].getTargetPort() as SchemaPortModel\r\n      if(targetPort.getOptions().in === false){ // if out port convert to in port\r\n        let targetNode = targetPort.getNode() as SchemaNodeModel\r\n        let InTargetPort = targetNode.mirrorPort(targetPort) \r\n        return InTargetPort\r\n      }else{\r\n        return targetPort\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  allTable(){\r\n    let rs: TableData[] = []\r\n    let alltb = this.getEngine().getModel().getNodes() as SchemaNodeModel[]\r\n    alltb.forEach(tb => {\r\n      let add = this.nodeToTable(tb)\r\n      rs.push(add)\r\n    });\r\n    return rs\r\n  }\r\n\r\n  currentTable(){\r\n    let rs: TableData = {\r\n      id: \"\",\r\n      tablename: '',\r\n      fields: []\r\n    }\r\n    const node = this.currentNode()\r\n    if(node === undefined) return rs \r\n    if (node instanceof SchemaNodeModel) rs = this.nodeToTable(node as SchemaNodeModel)\r\n    \r\n    return rs\r\n  }\r\n\r\n  nodeToTable(node : SchemaNodeModel) : TableData{\r\n    let name = node.getOptions().name\r\n    if (name == undefined) name = \"\"\r\n    return {\r\n      id : node.getID(),\r\n      tablename : name,\r\n      fields : node.getAllField()\r\n    }\r\n  }\r\n\r\n\r\n  copySelected = () => {\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyC' });\r\n\r\n  }\r\n\r\n  newNode() {\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyB' });\r\n  }\r\n\r\n  duplicateSelected = () => {\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyD' });\r\n  }\r\n\r\n  cutSelected = () =>\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyX' });\r\n\r\n\r\n  pasteSelected = () =>\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyV' });\r\n\r\n  deleteSelected = () =>\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'Delete' });\r\n\r\n  undo = () => {\r\n    alert(\"this feature dont work yet coming soon\")\r\n    //this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyZ' });\r\n  }\r\n\r\n  redo = () => {\r\n    alert(\"this feature dont work yet coming soon\")\r\n    //this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyZ' });\r\n  }\r\n    \r\n\r\n  zoomIn(event: any) {\r\n    \r\n    this.fireAction({\r\n      clientX: event.clientX,\r\n      clientY: event.clientY,\r\n      type: 'wheel',\r\n      deltaY: +1,\r\n    });\r\n  }\r\n\r\n  zoomOut(event: any) {\r\n    this.fireAction({\r\n      clientX: event.clientX,\r\n      clientY: event.clientY,\r\n      type: 'wheel',\r\n      deltaY: -1,\r\n    });\r\n  }\r\n\r\n\r\n\r\n  getEngine(): DiagramEngine {\r\n    return this.engine\r\n  }\r\n\r\n\r\n\r\n}","import React , {FunctionComponent, useState} from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 0,\r\n    },\r\n    inputEdit : {\r\n      backgroundColor : \"#3F51B5\",\r\n      padding : 8,\r\n      color : \"white\",\r\n      border: \"none\",\r\n      borderRadius: 4,\r\n      fontSize : 20\r\n\r\n \r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }),\r\n);\r\n\r\ninterface AppbarProp {\r\n  title : string,\r\n  onDelete : () => void,\r\n  onEndEdit : (e : string) => void\r\n}\r\n\r\nexport const  Appbar : FunctionComponent<AppbarProp> = ({ onDelete , title , onEndEdit }) => {\r\n  const classes = useStyles();\r\n\r\n  const [isEdit, setisEdit] = useState(false)\r\n\r\n  const [textInput, settextInput] = useState(\"\")\r\n\r\n  function handleChange(e : any){\r\n    settextInput(e.target.value)\r\n  }\r\n\r\n  function handleBlur(){\r\n    setisEdit(!isEdit)\r\n    \r\n    onEndEdit(textInput)\r\n  }\r\n\r\n\r\n\r\n  function handleOpenEdit(){\r\n    setisEdit(true)\r\n    settextInput(title)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" elevation={0} >\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {(isEdit) ? \r\n           <input value={textInput} onChange={handleChange} onBlur={ handleBlur} className={classes.inputEdit} />\r\n         \r\n          :\r\n          <Typography  variant=\"h6\" className={classes.title} onClick={handleOpenEdit}>\r\n            {title}\r\n          </Typography>\r\n          }\r\n          <IconButton color=\"inherit\" onClick={onDelete}><DeleteOutlineIcon/></IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React, { FunctionComponent, useEffect, useMemo, useState } from 'react'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { Appbar } from './Appbar'\r\nimport TableMat from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport { BaseModel } from '@projectstorm/react-canvas-core'\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport { DefaultPortModel, DiagramEngine, NodeModel, PathFindingLinkFactory } from '@projectstorm/react-diagrams';\r\nimport { SchemaNodeModel, Field } from '../schemanode/node/SchemaNodeModel';\r\nimport { DiagramController } from '../DiagramController/DiagramCtr';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport { Box, Collapse, MenuItem, Select, Typography , FormControl } from '@material-ui/core';\r\nimport { SchemaPortModel } from '../schemanode/port/SchemaPortModel';\r\nimport { truncateSync } from 'fs';\r\nimport { LiveTvTwoTone } from '@material-ui/icons';\r\n\r\nexport interface TableProps {\r\n  isOpen: boolean,\r\n  diagramctr: DiagramController,\r\n  forceUpdate: boolean,\r\n  onclose: () => void\r\n}\r\n\r\nexport interface TableData {\r\n  id?: string,\r\n  tablename: string,\r\n  fields: Field[]\r\n}\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    styledTable: {\r\n      \"borderCollapse\": \"collapse\",\r\n      \"margin\": \"25px 0\", \"fontSize\": \"0.9em\", \"fontFamily\": \"sans-serif\",\r\n      \"minWidth\": \"400px\", \"boxShadow\": \"0 0 20px rgba(0, 0, 0, 0.15)\"\r\n    },\r\n    cell: {\r\n      padding: 10\r\n    },\r\n    selectOption : {\r\n      marginTop:10\r\n    }\r\n\r\n  }),\r\n);\r\n\r\n\r\nexport const TableEditor: FunctionComponent<TableProps> = ({ isOpen, diagramctr, onclose, forceUpdate }) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [isOptionEdit, setisOptionEdit] = useState(\"\")\r\n\r\n  const [currentTable, setTable] = useState(getNodeData(diagramctr))\r\n\r\n  const [relationName, setrelationName] = useState(\"\")\r\n\r\n  const [otherTable, setotherTable] = useState(getOtherTable())\r\n\r\n  const [textInput, settextInput] = useState(\"\")\r\n\r\n\r\n  const [isEdit, setisEdit] = useState(false)\r\n\r\n  const [currentSelectTableId, setcurrentSelectTableId] = useState(\"\")\r\n\r\n  const [currentFieldId, setcurrentFieldId] = useState(\"\")\r\n\r\n  const currentField = useMemo(() => loadTableFieldSelect(), [currentSelectTableId]);\r\n\r\n  const [toggleUpdate, settoggleUpdate] = useState(false)\r\n\r\n  const [currentEdit, setcurrentEdit] = useState(\"\")\r\n\r\n  const [typeSelect, settypeSelect] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    setTable(getNodeData(diagramctr))\r\n    setotherTable(getOtherTable())\r\n    \r\n\r\n  }, [isOpen, toggleUpdate, forceUpdate])\r\n\r\n  function onBeforeClose(){\r\n    setcurrentSelectTableId(\"\")\r\n    setcurrentFieldId(\"\")\r\n    setcurrentEdit(\"\")\r\n    setisEdit(false)\r\n    onclose()\r\n  }\r\n\r\n  function getOtherTable(): TableData[] { return diagramctr.allTable() }\r\n\r\n  function getNodeData(diagramctr: DiagramController) { return diagramctr.currentTable() }\r\n\r\n  function setEditField(id: string | undefined, fieldName: string) {\r\n    if (id === undefined) id = \"\"\r\n    setisEdit(true)\r\n    settextInput(fieldName)\r\n    setcurrentEdit(id)\r\n    let node = diagramctr.currentNode()\r\n    if(node === undefined) return\r\n\r\n    let inId = id\r\n    let outId = node.getOutIdFromInId(inId)\r\n\r\n    let portSelectIn = node.getPortFromID(inId) as SchemaPortModel\r\n    let portSelectOut = node.getPortFromID(outId) as SchemaPortModel\r\n\r\n    let linkIn = diagramctr.findSourcesLinkInPort(portSelectIn)\r\n\r\n    let linkOut = diagramctr.findSourcesLinkInPort(portSelectOut)\r\n\r\n    if(linkIn.length > 0 ){\r\n      const targetPort = linkIn[0].getTargetPort() as SchemaPortModel\r\n      setcurrentSelectTableId(targetPort.getNode().getID())\r\n      let targetNode = targetPort.getNode() as SchemaNodeModel\r\n\r\n      setcurrentFieldId(targetNode.getInIdFromOutId(targetPort.getID()))\r\n      return\r\n    }\r\n\r\n    if(linkOut.length > 0){\r\n      \r\n      const targetPort = linkOut[0].getTargetPort() as SchemaPortModel\r\n      setcurrentSelectTableId(targetPort.getNode().getID())\r\n      setcurrentFieldId(targetPort.getID())\r\n      return\r\n    }\r\n\r\n\r\n  }\r\n\r\n  function closeEdit() {\r\n    setisEdit(true)\r\n    updateNode()\r\n    setcurrentEdit(\"\")\r\n  }\r\n\r\n  function updateNode() {\r\n    let newtb = currentTable\r\n\r\n    //let indexof = newtb.fields.findIndex(f => f.fieldName == currentEdit)\r\n\r\n    let indexof = newtb.fields.findIndex(f => f.inId == currentEdit)\r\n\r\n    if (indexof == -1) return\r\n\r\n    newtb.fields[indexof].fieldName = textInput\r\n\r\n    if (typeSelect != \"\") newtb.fields[indexof].fieldType = typeSelect\r\n    setTable(newtb)\r\n\r\n    diagramctr.updateNode(newtb)\r\n  }\r\n\r\n  function handleChange(e: any) {\r\n    settextInput(e.target.value)\r\n  }\r\n\r\n  function handleTypeChange(e: any) {\r\n    settypeSelect(e.target.value)\r\n  }\r\n\r\n  function onDelete() {\r\n    let node = diagramctr.currentNode()\r\n    if (node == undefined) return\r\n    diagramctr.deleteSelected()\r\n    onclose()\r\n  }\r\n\r\n  function newField() {\r\n    let node = diagramctr.currentNode()\r\n    if (node == undefined) return\r\n    node.AddNewField()\r\n\r\n    let newtb = currentTable\r\n    newtb.fields.push({\r\n      fieldName: \"test\",\r\n      fieldType: \"int\"\r\n    })\r\n    setTable(newtb)\r\n\r\n    settoggleUpdate(!toggleUpdate)\r\n\r\n    diagramctr.getEngine().repaintCanvas()\r\n  }\r\n\r\n  function removeField(id: string | undefined) {\r\n    if (id == undefined) return\r\n    let node = diagramctr.currentNode()\r\n    if (node == undefined) return\r\n    node.removeFieldbyId(id)\r\n    settoggleUpdate(!toggleUpdate)\r\n    diagramctr.getEngine().repaintCanvas()\r\n  }\r\n\r\n  function onSelectTableChange(e: any) {\r\n    setcurrentSelectTableId(e.target.value)\r\n  }\r\n\r\n  function loadTableFieldSelect(): Field[] {\r\n    if (currentSelectTableId == \"\") return []\r\n    let tb = otherTable.find(t => t.id === currentSelectTableId)\r\n    if (tb == undefined) return []\r\n    return tb.fields\r\n  }\r\n\r\n  function onChangeFieldSelect(e: any) {\r\n    if (e.target.value === \"\") {\r\n      return\r\n    }\r\n\r\n    let targetPortId = e.target.value\r\n    let sourceField = currentTable.fields.find(f => f.inId === currentEdit)\r\n\r\n    setcurrentFieldId(targetPortId)\r\n\r\n    const currentNode = diagramctr.currentNode()\r\n\r\n    if(currentNode === undefined) return\r\n\r\n    if (sourceField == undefined) return  // if link self table and selt field\r\n\r\n    let targetNode = diagramctr.getNodeById(currentSelectTableId)\r\n\r\n    const dir = diagramctr.direactionNode(currentNode , targetNode)\r\n\r\n    const sourcePort = (dir === \"front\") ? currentNode.portInIdtoPortOut(currentEdit) : currentNode.getPortFromID(currentEdit) as SchemaPortModel\r\n\r\n    const targetPort = (dir === \"front\") ? targetNode.getPortFromID(targetPortId) as SchemaPortModel : targetNode.portInIdtoPortOut(targetPortId)\r\n    //before link must remove link from source port :: INCOMPLETE TODO\r\n    diagramctr.linkModel(sourcePort, targetPort)\r\n\r\n  }\r\n\r\n\r\n  function onNameChange(e: string) {\r\n    let newtb = currentTable\r\n    newtb.tablename = e\r\n    setTable(newtb)\r\n\r\n    diagramctr.updateNodeName(e)\r\n\r\n    settoggleUpdate(!toggleUpdate)\r\n\r\n  }\r\n\r\n  function getFieldOption(f: Field, optionName: string): any {\r\n    let fieldOption = f.fieldOption\r\n    if (fieldOption == undefined) {\r\n      return false\r\n    }\r\n    if (optionName == \"pk\") return fieldOption.pk\r\n    if (optionName == \"fk\") return fieldOption.fk\r\n    if (optionName == \"ai\") return fieldOption.ai\r\n\r\n  }\r\n\r\n  function setFieldOption(e: any, idField: string | undefined, optionName: string) {\r\n\r\n    const val = e.target.value\r\n\r\n    if (idField == undefined) return\r\n\r\n    console.log(optionName)\r\n\r\n    let fieldIndexof = currentTable.fields.findIndex(f => f.inId == idField)\r\n\r\n    let tb = currentTable\r\n    let newfieldOption = tb.fields[fieldIndexof].fieldOption\r\n\r\n    if (fieldIndexof === -1 || newfieldOption === undefined) return\r\n\r\n    if (optionName === \"pk\") {\r\n      newfieldOption.pk = !newfieldOption.pk\r\n    }\r\n    if(optionName === \"ai\"){\r\n      newfieldOption.ai = !newfieldOption.ai\r\n    }\r\n    if (optionName === \"fk\") {\r\n      newfieldOption.fk = !newfieldOption.fk\r\n      //alert(newfieldOption.fk)\r\n      if (newfieldOption.fk === false) {\r\n        const node = diagramctr.currentNode()\r\n        if (node === undefined) return\r\n        diagramctr.removeLinkbyPort(node.getPortInByIndex(fieldIndexof), node.getPortOutByIndex(fieldIndexof))\r\n      }\r\n\r\n    }\r\n\r\n    tb.fields[fieldIndexof].fieldOption = newfieldOption\r\n    setTable(tb)\r\n\r\n    console.log(newfieldOption)\r\n    diagramctr.updateFieldOption(tb.fields[fieldIndexof])\r\n    settoggleUpdate(!toggleUpdate)\r\n  }\r\n\r\n  function onSelectRelation(portid: string | undefined, portOutId: string | undefined, event: React.ChangeEvent<{ value: unknown }>) {\r\n    if (portid === undefined || portOutId === undefined) return\r\n    const node = diagramctr.currentNode()\r\n    if (node === undefined) return\r\n    const portIn = node.getPortFromID(portid) as SchemaPortModel\r\n    const portOut = node.getPortFromID(portOutId) as SchemaPortModel\r\n    if (portIn === null || portOut === null) return\r\n    setrelationName(event.target.value as string)\r\n    diagramctr.connectRealation(portIn, portOut, event.target.value as string)\r\n\r\n    //update fk\r\n\r\n    /*\r\n\r\n    let fieldIndexof = currentTable.fields.findIndex(f => f.inId === portid)\r\n\r\n    let newtb = currentTable\r\n    let newfieldOption = newtb.fields[fieldIndexof].fieldOption\r\n    if (newfieldOption === undefined) return\r\n    newfieldOption.fk = true\r\n    newtb.fields[fieldIndexof].fieldOption = newfieldOption\r\n    setTable(newtb)\r\n\r\n    */\r\n\r\n  }\r\n\r\n  return <Drawer anchor={\"right\"} open={isOpen} style={{ width: 600 }} onClose={onBeforeClose}>\r\n    <div>\r\n      <Appbar onDelete={onDelete} title={currentTable.tablename} onEndEdit={onNameChange} ></Appbar>\r\n      <TableContainer>\r\n        <TableMat aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell></TableCell>\r\n              <TableCell className={classes.cell}>Field Name</TableCell>\r\n              <TableCell className={classes.cell}>Type Name</TableCell>\r\n              <TableCell className={classes.cell}>PK</TableCell>\r\n              <TableCell className={classes.cell}>AI</TableCell>\r\n              <TableCell className={classes.cell}>Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {currentTable.fields.map((row: Field, index: number) => (\r\n              <React.Fragment key={row.inId}>\r\n\r\n                <TableRow className={classes.cell}>\r\n                  <TableCell >\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" >\r\n                      {(isEdit && currentEdit === row.inId) ? <SaveAltIcon /> : <CreateIcon/>}\r\n                    </IconButton>\r\n                  </TableCell>\r\n                  {(isEdit && currentEdit == row.inId) ?\r\n                    <>\r\n\r\n                      <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\r\n                        <input onBlur={() => closeEdit()}\r\n                          onChange={handleChange} value={textInput} />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\r\n                        <select onChange={handleTypeChange} value={typeSelect} >\r\n                          <option value=\"int\">Interger</option>\r\n                          <option value=\"varchar\">Varchar</option>\r\n                          <option value=\"float\">Float</option>\r\n                          <option value=\"bool\">Boolean</option>\r\n                        </select>\r\n                      </TableCell>\r\n\r\n                    </>\r\n                    :\r\n                    <>\r\n                      <TableCell className={classes.cell} component=\"th\" scope=\"row\" onClick={() => setEditField(row.inId, row.fieldName)}>\r\n                        {row.fieldName}\r\n                      </TableCell>\r\n\r\n                      <TableCell className={classes.cell} component=\"th\" scope=\"row\" onClick={() => setEditField(row.inId, row.fieldName)}>\r\n                        {row.fieldType}\r\n                      </TableCell>\r\n                    </>\r\n                  }\r\n\r\n                  <TableCell className={classes.cell}>\r\n                    <input type=\"checkbox\" checked={(getFieldOption(row, \"pk\"))}\r\n                      onChange={(e) => setFieldOption(e, row.inId, \"pk\")} key={`pk${row.inId}`} />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <input type=\"checkbox\" checked={(getFieldOption(row, \"ai\"))} onChange={(e) => setFieldOption(e, row.inId, \"ai\")} key={`ai${row.inId}`} />\r\n                  </TableCell>\r\n                  <TableCell className={classes.cell} >\r\n                    <IconButton onClick={() => removeField(row.inId)} size=\"small\">\r\n                      <DeleteOutlineIcon></DeleteOutlineIcon>\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n                    <Collapse in={(isEdit && currentEdit === row.inId)} timeout=\"auto\" unmountOnExit>\r\n                      <Box margin={1} display=\"flex\" flexDirection=\"column\"> \r\n                    \r\n\r\n                        <TextField label=\"Default Value\" variant=\"outlined\" size=\"small\"></TextField>\r\n\r\n                        <TableCell>\r\n                          <input type=\"checkbox\" checked={(getFieldOption(row, \"fk\"))}\r\n                            onChange={(e) => setFieldOption(e, row.inId, \"fk\")} />\r\n                        </TableCell>\r\n                        {(getFieldOption(row, \"fk\")) ? <React.Fragment >\r\n\r\n                        <FormControl variant=\"outlined\" size=\"small\"  >\r\n\r\n                        <Select className={classes.selectOption} displayEmpty variant=\"outlined\"  value={currentSelectTableId} onChange={onSelectTableChange}>\r\n                            <MenuItem value=\"\" > -- Select Ref Table -- </MenuItem>\r\n                            {otherTable.map(tb => {\r\n                              const ele = currentTable.id !== tb.id ?\r\n                                <MenuItem key={\"option-\" + tb.id} value={tb.id}>{tb.tablename}</MenuItem> : \"\"\r\n                              return ele\r\n                            })}\r\n                          </Select>\r\n\r\n                          <Select className={classes.selectOption} displayEmpty style={{ minWidth: 100 }} value={currentFieldId} onChange={onChangeFieldSelect}>\r\n\r\n                            <MenuItem style={{ display: \"none\" }} value=\"\"></MenuItem>\r\n                            {currentField.map(f => <option key={f.fieldName} value={f.inId}>{f.fieldName}</option>)}\r\n                          </Select>\r\n\r\n                          <Select className={classes.selectOption} displayEmpty value={relationName} onChange={(e) => onSelectRelation(row.inId, row.outId, e)}>\r\n                            <MenuItem value=\"1:1\">One to One</MenuItem>\r\n                            <MenuItem value=\"1:N\">One to Many</MenuItem>\r\n                          </Select>\r\n\r\n                        </FormControl>\r\n\r\n                          \r\n\r\n                        </React.Fragment>\r\n                          : \"\"}\r\n\r\n\r\n                      </Box>\r\n                    </Collapse>\r\n                  </TableCell>\r\n                </TableRow>\r\n\r\n              </React.Fragment>\r\n\r\n            ))}\r\n          </TableBody>\r\n        </TableMat>\r\n      </TableContainer>\r\n      <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => newField()}>\r\n        <AddCircleOutlineIcon />\r\n      </IconButton>\r\n    </div>\r\n  </Drawer>\r\n}","import React , {FunctionComponent} from 'react';\r\n\r\nimport { Menu, Item, Separator } from 'react-contexify';\r\n\r\nimport { Redo, Undo, Paste, ZoomIn, ZoomOut } from '../Icons';\r\nimport Key from './KeyMenu';\r\nimport ContextMenuIconContainer from './ContextMenuIconContainer';\r\nimport ContextMenuShortcutContainer from './ContextMenuShortcutContainer';\r\n\r\nimport {ContextFunction} from './FunctionList'\r\n\r\n\r\nexport const SimpleContext : FunctionComponent = () => (\r\n  <Menu id=\"nodeedit\">\r\n  <Item>\r\n    <ContextMenuIconContainer>\r\n      <Paste />\r\n    </ContextMenuIconContainer>\r\n    Paste\r\n    <ContextMenuShortcutContainer>\r\n      <Key>CTRL</Key>\r\n      <Key>V</Key>\r\n    </ContextMenuShortcutContainer>\r\n  </Item>\r\n\r\n  <Separator />\r\n\r\n  <Item>\r\n    <ContextMenuIconContainer>\r\n      <ZoomIn />\r\n    </ContextMenuIconContainer>\r\n    Zoom in\r\n  </Item>\r\n  <Item>\r\n    <ContextMenuIconContainer>\r\n      <ZoomOut />\r\n    </ContextMenuIconContainer>\r\n    Zoom out\r\n  </Item>\r\n\r\n  <Separator />\r\n\r\n  <Item>\r\n    <ContextMenuIconContainer>\r\n      <Undo />\r\n    </ContextMenuIconContainer>\r\n    Undo\r\n    <ContextMenuShortcutContainer>\r\n      <Key>CTRL</Key>\r\n      <Key>Z</Key>\r\n    </ContextMenuShortcutContainer>\r\n  </Item>\r\n\r\n  <Item>\r\n    <ContextMenuIconContainer>\r\n      <Redo />\r\n    </ContextMenuIconContainer>\r\n    Redo\r\n    <ContextMenuShortcutContainer>\r\n      <Key>CTRL</Key>\r\n      <Key>SHIFT</Key>\r\n      <Key>Z</Key>\r\n    </ContextMenuShortcutContainer>\r\n  </Item>\r\n</Menu>\r\n);\r\n\r\nexport default SimpleContext;","import { TableData } from \"../../components/TableEditor\"\r\nimport { Field } from \"../../schemanode/node/SchemaNodeModel\"\r\nimport BaseGenerate from \"./BaseGenerate\"\r\n\r\nclass MySqlGenerate extends BaseGenerate {\r\n\r\n    getFields(field : Field , isLastLine : boolean = false) : string{\r\n        let newLineAndTab = \", \\n \\t\"\r\n\r\n        let ai = field.fieldOption?.ai\r\n\r\n        let rs = `${field.fieldName} ${field.fieldType}` \r\n\r\n        if(ai !== undefined && ai) rs += \" AUTO_INCREMENT\"\r\n\r\n        if(isLastLine == false) rs += newLineAndTab\r\n        return rs \r\n    }\r\n  \r\n    getCreateTable(tb : any) : string{\r\n        let fields = ``\r\n        tb.fields.forEach((f: any , i : number)=>{\r\n            let isLastLine = false\r\n            if(tb.fields.length-1 == i) isLastLine = true\r\n            fields += this.getFields(f , isLastLine)\r\n        })\r\n\r\n        return `CREATE TABLE ${tb.tablename} (\\n \\t${fields} \\n ) `\r\n    }\r\n\r\n    generateFieldOption(){\r\n\r\n    }\r\n\r\n    generateRelation(relationData : any[]){\r\n        let rs = \"\"\r\n        relationData.forEach(r => {\r\n            let cmd = `ALTER TABLE ${r.mainTable} ADD FOREIGN KEY (${r.mainField}) REFERENCES ${r.targetTable}(${r.targetField});`\r\n            rs += cmd + \"\\n\"\r\n        });\r\n        return rs\r\n    }\r\n\r\n    export(data : TableData[] , relationData : any[]) : any {\r\n\r\n       let rs = ``\r\n       data.forEach(d=>{\r\n          rs += this.getCreateTable(d)\r\n          rs += \"\\n \\n\"\r\n       })\r\n\r\n       rs += \"\\n\"\r\n\r\n       rs += this.generateRelation(relationData)\r\n\r\n       return rs\r\n    }\r\n}\r\n\r\nexport default MySqlGenerate\r\n  ","class BaseGenerate {\r\n\r\n    getFields(field : any) : string{\r\n        return `` \r\n    }\r\n  \r\n    getCreateTable(tb : any) : string{\r\n        return ``\r\n    }\r\n\r\n    export(data : any[] , relationData : any[]) : any {\r\n    \r\n      return ''\r\n    }\r\n}\r\n\r\nexport default BaseGenerate\r\n  ","\r\n\r\nexport enum ShareActionType {\r\n    TOGGLE_LOADING = \"TOGGLE_LOADING\",\r\n    SET_FETCH = \"SET_FETCH\"\r\n}\r\n\r\ninterface ToggleAction {\r\n    type: typeof ShareActionType.TOGGLE_LOADING\r\n    payload: boolean\r\n}\r\n\r\ninterface SetFetch {\r\n    type: typeof ShareActionType.SET_FETCH\r\n    payload: boolean\r\n}\r\n\r\n  \r\n\r\n  \r\nexport type ShareActionTypes = ToggleAction | SetFetch","import { User } from \"../../interface/user\";\r\n\r\nexport enum AuthActionType {\r\n    SET_USER = \"SET_USER\",\r\n    UPDATE_USER = \"UPDATE_USER\",\r\n    SET_LOGIN = \"SET_LOGIN\"\r\n}\r\n\r\ninterface UpdatePayload {\r\n    Id : string,\r\n    user : User\r\n}\r\n\r\nexport interface SetUserAction {\r\n    type: typeof AuthActionType.SET_USER\r\n    payload: User\r\n}\r\n\r\nexport interface UpdatetUserAction {\r\n    type: typeof AuthActionType.UPDATE_USER\r\n    payload: UpdatePayload\r\n}\r\n\r\nexport interface SetLoginStateAction {\r\n    type: typeof AuthActionType.SET_LOGIN\r\n    payload: boolean\r\n}\r\n\r\n  \r\nexport type AuthActionTypes = SetUserAction | UpdatetUserAction | SetLoginStateAction","import { Project } from \"../../interface/project\";\r\n\r\nexport enum ProjectActionType {\r\n    SET_PROJECT = \"SET_PROJECT\",\r\n    UPDATE_PROJECT = \"UPDATE_PROJECT\",\r\n    NEW_PROJECT = \"NEW_PROJECT\",\r\n    DELETE_PROJECT = \"DELETE_PROJECT\",\r\n    TOGGLE_MODAL = \"TOGGLE_MODAL\",\r\n    TOGGLE_CONFRIM_MODAL = \"TOGGLE_CONFRIM_MODAL\",\r\n    SET_PROJECT_SAVE_TYPE = \"SET_PROJECT_SAVE_TYPE\",\r\n}\r\n\r\nexport interface UpdateData<T>{\r\n    id : string,\r\n    data : T\r\n}\r\n\r\ninterface SetProjectAction {\r\n    type: typeof ProjectActionType.SET_PROJECT\r\n    payload: Project[]\r\n}\r\n\r\ninterface UpdateProjectAction {\r\n    type: typeof ProjectActionType.UPDATE_PROJECT\r\n    payload: UpdateData<Project>\r\n}\r\n\r\ninterface NewProjectAction {\r\n    type : typeof ProjectActionType.NEW_PROJECT,\r\n    payload : Project\r\n}\r\n\r\ninterface DeleteProjectAction {\r\n    type : typeof ProjectActionType.DELETE_PROJECT,\r\n    payload : string\r\n}\r\n\r\ninterface ToggleAddModal{\r\n    type : typeof ProjectActionType.TOGGLE_MODAL,\r\n    payload : boolean\r\n}\r\n\r\ninterface ToggleConfrimModal{\r\n    type : typeof ProjectActionType.TOGGLE_CONFRIM_MODAL,\r\n    payload : boolean\r\n}\r\n\r\ninterface SetProjectSaveType{\r\n    type : typeof ProjectActionType.SET_PROJECT_SAVE_TYPE,\r\n    payload : string\r\n}\r\n\r\n\r\n\r\n  \r\nexport type ProjectActionTypes = SetProjectAction  | UpdateProjectAction | NewProjectAction | \r\nDeleteProjectAction | ToggleAddModal | ToggleConfrimModal | SetProjectSaveType","export interface Project{\r\n    Id ?: string;\r\n    ProjectName : string;\r\n    ProjectDescription : string;\r\n    UserId : string;\r\n    VisibleStatus : number;\r\n    ShareUrl : string;\r\n    ProjectDetail : string;\r\n}\r\n\r\nexport function defaultProject() : Project{\r\n    let rs : Project = {\r\n        Id : \"\",\r\n        ProjectName : \"\" ,\r\n        ProjectDescription : \"\",\r\n        UserId : \"\",\r\n        VisibleStatus : 1,\r\n        ShareUrl  : \"\",\r\n        ProjectDetail : \"\"\r\n    }\r\n    return rs\r\n}\r\n\r\nexport function defaultProjects() : Project[]{\r\n    return []\r\n}\r\n\r\nexport function jsonToProject(d : any) : Project{\r\n    let rs : Project = {\r\n            Id : d._id,\r\n\t\t    ProjectName : d.projectName,\r\n\t\t\tProjectDescription : d.projectDescription,\r\n\t\t\tProjectDetail : \"\",\r\n\t\t\tVisibleStatus :  d.visibleStatus,\r\n\t\t\tUserId :  d.user,\r\n\t\t\tShareUrl : \"\"\r\n    }\r\n    return rs\r\n}\r\n\r\nexport function projectToJson(p : Project) {\r\n    let rs : any = {\r\n        projectName : p.ProjectName,\r\n        projectDescription : p.ProjectDescription,\r\n        projectDetail : p.ProjectDetail,\r\n        user : p.UserId,\r\n        visibleStatus : p.VisibleStatus,\r\n        shareUrl : p.ShareUrl\r\n    }\r\n    return rs\r\n}","\r\nimport { ShareActionType, ShareActionTypes } from \"./type\";\r\n\r\nexport function ToggleLoading(data: boolean): ShareActionTypes {\r\n    return {\r\n      type: ShareActionType.TOGGLE_LOADING,\r\n      payload: data\r\n    }\r\n}\r\n\r\nexport function SetFetchAction(data: boolean): ShareActionTypes {\r\n  return {\r\n    type: ShareActionType.SET_FETCH,\r\n    payload: data\r\n  }\r\n}","import Cookies from 'js-cookie'\r\n\r\nexport interface User{\r\n    _id : string,\r\n    userName : string,\r\n    userLastname : string,\r\n    userEmail : string,\r\n    userPassword : string\r\n}\r\n\r\nexport function defaultUser() : User{\r\n    \r\n    let rs : User = {\r\n        _id : \"\",\r\n        userName : \"test\",\r\n        userLastname :  \"\",\r\n        userEmail : \"\",\r\n        userPassword : \"\"\r\n    }\r\n    return rs\r\n}\r\n\r\nexport function isLogin() : boolean{\r\n    const token = Cookies.get(\"ertoken\")\r\n    alert(\"call login check in file :src/interface/user.isLogin\")\r\n        if(token !== \"\" && token !== undefined){\r\n            //pass login\r\n            return true\r\n        }\r\n    return false\r\n}\r\n\r\nexport function jsonToUser(d : any) : User{\r\n    const rs : User = {\r\n        _id : d._id,\r\n        userName : d.userName,\r\n        userLastname : d.userlastname,\r\n        userEmail : d.userEmail,\r\n        userPassword : d.userPassword\r\n    }\r\n    return rs\r\n}","import { User } from \"../../interface/user\";\r\nimport { AuthActionType, AuthActionTypes } from \"./type\";\r\n\r\nexport function SetUser(user: User): AuthActionTypes {\r\n    return {\r\n      type: AuthActionType.SET_USER,\r\n      payload: user\r\n    }\r\n}\r\n\r\nexport function SetLoginState(data:boolean): AuthActionTypes {\r\n  return {\r\n    type: AuthActionType.SET_LOGIN,\r\n    payload: data\r\n  }\r\n}","\r\nimport { Project } from \"../../interface/project\";\r\nimport { ProjectActionType, ProjectActionTypes, UpdateData } from \"./type\";\r\n\r\nexport function SetProject(data: Project[]): ProjectActionTypes {\r\n    return {\r\n      type: ProjectActionType.SET_PROJECT,\r\n      payload: data\r\n    }\r\n}\r\n\r\n\r\nexport function UpdateProject(data: UpdateData<Project>): ProjectActionTypes {\r\n  return {\r\n    type: ProjectActionType.UPDATE_PROJECT,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport function NewProject(data: Project): ProjectActionTypes {\r\n  return {\r\n    type: ProjectActionType.NEW_PROJECT,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport function DeleteProject(id : string) : ProjectActionTypes{\r\n  return {\r\n    type : ProjectActionType.DELETE_PROJECT,\r\n    payload : id\r\n  }\r\n}\r\n\r\nexport function ToggleModal(value : boolean) : ProjectActionTypes{\r\n  return {\r\n    type : ProjectActionType.TOGGLE_MODAL,\r\n    payload : value\r\n  }\r\n}\r\n\r\nexport function ToggleConfrimModal(value : boolean) : ProjectActionTypes{\r\n  return {\r\n    type : ProjectActionType.TOGGLE_CONFRIM_MODAL,\r\n    payload : value\r\n  }\r\n}\r\n\r\nexport function SetProjectSaveType(type : string) : ProjectActionTypes{\r\n  return {\r\n    type : ProjectActionType.SET_PROJECT_SAVE_TYPE,\r\n    payload : type\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport Cookies from \"js-cookie\"\r\nimport { SetFetchAction, ToggleLoading } from \"./share/action\";\r\nimport { jsonToProject, Project } from \"../interface/project\";\r\nimport { jsonToUser } from \"../interface/user\";\r\nimport { SetLoginState, SetUser } from \"./auth/action\";\r\nimport { SetProject, SetProjectSaveType } from \"./project/action\";\r\nimport { truncate } from \"fs\";\r\n\r\n\r\nexport const initApp = () => {\r\n\r\n    return async (dispatch : Dispatch ) => {\r\n\r\n      let baseUrl = \"https://toperbackend.herokuapp.com\"\r\n      let userUrl = baseUrl + \"/user/getuser\"\r\n      let projectUrl = baseUrl + \"/project/getprojects\"\r\n\r\n      let token = Cookies.get(\"ertoken\")\r\n\r\n      if(token === \"\" || token === undefined){\r\n            dispatch(ToggleLoading(false))\r\n            dispatch(SetLoginState(false))\r\n  \r\n            return\r\n      }\r\n\r\n      dispatch(ToggleLoading(true))\r\n      dispatch(SetFetchAction(false))\r\n\r\n      axios.defaults.headers.common['Authorization'] = \"Bearer \" + token\r\n\r\n      axios.all([\r\n        axios.get(userUrl), \r\n        axios.get(projectUrl)\r\n      ])\r\n      .then(axios.spread((userrs, projectrs) => {\r\n\r\n        dispatch(ToggleLoading(false))\r\n\r\n        if(userrs.data.length > 0){\r\n            let userdata = userrs.data[0]\r\n            const user = jsonToUser(userdata)\r\n            dispatch(SetUser(user))\r\n            dispatch(SetLoginState(true))\r\n        }\r\n        let projects : Project[] = []\r\n        projectrs.data.forEach((p : any) =>{\r\n            const project : Project = jsonToProject(p)\r\n            projects.push(project)\r\n        })\r\n\r\n        dispatch(SetProjectSaveType(\"cloud\"))\r\n\r\n        dispatch(SetProject(projects))\r\n\r\n        dispatch(SetFetchAction(true))\r\n\r\n      }));      \r\n      \r\n    };\r\n}","import React, { FunctionComponent, useEffect, useState } from 'react'\r\n\r\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\r\n\r\nimport { DemoCanvasWidget } from '../components/CanvasDiagram';\r\n\r\n\r\nimport { Toolbar } from '../components/Toolbar'\r\nimport { AppToolbar } from '../components/AppToolbar'\r\n\r\nimport { ContextMenus } from '../components/ContextMenus/ContextMenus'\r\nimport { MenuProvider } from 'react-contexify';\r\n\r\nimport { DiagramController } from '../DiagramController/DiagramCtr'\r\nimport { TableEditor } from '../components/TableEditor'\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nimport SimpleContext from '../components/ContextMenus/SimpleContext'\r\nimport * as htmlToImage from 'html-to-image';\r\nimport BaseGenerate from '../api/export/BaseGenerate';\r\nimport MySqlGenerate from '../api/export/MySqlGenerate';\r\n\r\nimport { getAllTable } from '../libs/tableUtil'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport Cookies from 'js-cookie'\r\n\r\nimport axios from 'axios'\r\n\r\nimport { Project, projectToJson } from '../interface/project'\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { RootState } from '../store';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ToggleLoading } from '../reducer/share/action';\r\n\r\nimport { initApp } from '../reducer/loadapp';\r\nimport { saveProjectLocal, UpdateProjectProp } from '../reducer/project/thunkaction';\r\n\r\nimport { ShortCutMenu } from '../components/modal/ShortCutMenu';\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport { ShareModal } from '../components/modal/ShareModal';\r\n\r\n\r\nenum VisibleStatus {\r\n\tPublic,\r\n\tPrivate,\r\n\tProtected\r\n}\r\n\r\nexport interface EditorParamType {\r\n\tprojectId: string\r\n}\r\n\r\nexport const Editor: FunctionComponent = () => {\r\n\r\n\tlet { projectId } = useParams<EditorParamType>();\r\n\r\n\tconst user = useSelector((state: RootState) => state.AuthReducer.user)\r\n\r\n\tconst projectSaveType = useSelector((state: RootState) => state.ProjectReducer.projectSaveType)\r\n\r\n\tconst isFetch = useSelector((state: RootState) => state.ShareReducer.isFetch)\r\n\r\n\tconst darkState = useSelector((state: RootState) => state.themeReducer.darkMode)\r\n\r\n\tconst palletType = darkState ? \"dark\" : \"light\";\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst history = useHistory()\r\n\r\n\tconst [isOnSelectNode, setisOnSelectNode] = useState(true)\r\n\r\n\tconst [update, setupdate] = useState(false)\r\n\r\n\tconst [exportDbModal, setexportDbModal] = useState(false)\r\n\r\n\tconst [diagram, setDiagram] = useState(new DiagramController())\r\n\r\n\tconst [currentProject, setcurrentProject] = useState(initProject())\r\n\r\n\tconst [saveData, setsaveData] = useState(\"\")\r\n\r\n\tconst [isShareProject, setisShareProject] = useState(false)\r\n\r\n\tconst [imageModal, setimageModal] = useState(false)\r\n\r\n\tconst [isEdit, setEdit] = useState(false)\r\n\r\n\tconst [shortcutModal, setshortcutModal] = useState(false)\r\n\r\n\tconst [shareModal, setshareModal] = useState(false)\r\n\r\n\tconst [linkUrl, setlinkUrl] = useState(\"\")\r\n\r\n\tconst darkTheme = createMuiTheme({\r\n\t\tpalette: {\r\n\t\t\ttype: palletType,\r\n\t\t\tprimary: {\r\n\t\t\t\tmain: \"#5661B3\",\r\n\t\t\t\tdark: \"#333333\"\r\n\t\t\t},\r\n\t\t\tsecondary: {\r\n\t\t\t\tmain: \"#333333\",\r\n\t\t\t\tdark: \"#333333\"\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tdiagram.getEngine().registerListener({\r\n\t\t\tonDoubleClick: () => ToggleEditor(),\r\n\t\t})\r\n\t\tisLogger()\r\n\t}, [])\r\n\r\n\tfunction isLogger() {\r\n\r\n\t\tlet pathname = history.location.pathname\r\n\t\tlet pathsplit = pathname.split(\"/\")\r\n\r\n\t\tlet edittype = pathsplit[1]\r\n\r\n\t\tlet token = Cookies.get(\"ertoken\")\r\n\t\tif (token === undefined || token === \"\" ) {\r\n\t\t\tif (edittype === \"share\") {\r\n\t\t\t\tsetisShareProject(true)\r\n\t\t\t\tloaduserAndProject()\r\n\t\t\t}else{\r\n\t\t\t\thistory.push(\"/login\")\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\taxios.defaults.headers.common['Authorization'] = \"Bearer \" + token\r\n\t\t\tif (!isFetch) {\r\n\t\t\t\tdispatch(initApp())\r\n\t\t\t}\r\n\r\n\t\t\tlet pathname = history.location.pathname\r\n\t\t\tlet pathsplit = pathname.split(\"/\")\r\n\r\n\t\t\tlet edittype = pathsplit[1]\r\n\r\n\t\t\tif (edittype === \"editor\") loaduserAndProject()\r\n\t\t\tif (edittype === \"localeditor\") loadLocalProject()\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tfunction addOnSelectListener() {\r\n\r\n\t\tdiagram.getEngine().getModel().getModels().forEach(item => {\r\n\t\t\titem.registerListener({\r\n\t\t\t\tselectionChanged: (e: any) => onSelectNode(e)\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tfunction loadLocalProject() {\r\n\t\tlet projectstr = localStorage.getItem(\"projects\")\r\n\t\tif (projectstr === null) return\r\n\t\tconst projects: any[] = JSON.parse(projectstr)\r\n\t\tlet projectRs = projects.find(p => p.Id === projectId)\r\n\t\tif (projectRs === undefined) return\r\n\t\tlet clonep = currentProject\r\n\t\tclonep.ProjectName = projectRs.ProjectName\r\n\t\tclonep.ProjectDescription = projectRs.ProjectDescription\r\n\t\tdiagram.saveDataByString(projectRs.ProjectDetail)\r\n\t\tsetcurrentProject(clonep)\r\n\t\taddOnSelectListener()\r\n\t}\r\n\r\n\tfunction onSelectNode(e: any) {\r\n\t\tlet isSelectData: boolean = e.isSelected\r\n\t\tsetisOnSelectNode(isSelectData)\r\n\t}\r\n\r\n\tconst loaduserAndProject = () => {\r\n\t\tlet baseUrl = \"https://toperbackend.herokuapp.com/\"\r\n\t\tlet urlSelect = (!isShareProject) ? \"shareproject\" : \"loadproject\"\r\n\t\tlet loadProjectDataApi = `project/${urlSelect}/` + projectId\r\n\t\taxios.get(baseUrl + loadProjectDataApi).then(rs => {\r\n\t\t\tcurrentProject.ProjectName = rs.data.projectName\r\n\t\t\tcurrentProject.ProjectDescription = rs.data.projectDescription\r\n\t\t\tdiagram.saveDataByString(rs.data.projectDetail)\r\n\t\t\taddOnSelectListener()\r\n\t\t})\r\n\t}\r\n\r\n\tfunction onSaveProject() {\r\n\r\n\t\tif(isShareProject){\r\n\t\t\ttoast.error(\"You are not Permission for Edit this Diagram\")\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (projectSaveType === \"cloud\") {\r\n\t\t\tsaveProject()\r\n\t\t} else if (projectSaveType === \"device\") {\r\n\t\t\tconst model = diagram.getEngine().getModel().serialize()\r\n\t\t\tlet update: UpdateProjectProp = {\r\n\t\t\t\tid: projectId,\r\n\t\t\t\tdata: JSON.stringify(model)\r\n\t\t\t}\r\n\t\t\tdispatch(saveProjectLocal(update))\r\n\t\t\ttoast.success(\"Save Project Sucess\")\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tasync function saveProject() {\r\n\t\tconst newproject = currentProject\r\n\t\tlet baseUrl = \"https://toperbackend.herokuapp.com/\"\r\n\t\tlet api = \"project/update/\" + projectId\r\n\t\tconst model = diagram.getEngine().getModel().serialize()\r\n\t\tconst modelstr = JSON.stringify(model)\r\n\r\n\t\tnewproject.ProjectDetail = modelstr\r\n\t\tlet data = projectToJson(newproject)\r\n\t\tdispatch(ToggleLoading(true))\r\n\t\tconst rs = await axios.put(baseUrl + api, data)\r\n\t\tdispatch(ToggleLoading(false))\r\n\t\ttoast.success(\"Save Project Sucess\")\r\n\t}\r\n\r\n\tfunction exportPng(filename: string) {\r\n\t\tlet node = document.getElementById('diagramcv');\r\n\t\tif (node == null) return\r\n\t\thtmlToImage.toPng(node)\r\n\t\t\t.then(function (dataUrl) {\r\n\t\t\t\tvar img = new Image();\r\n\t\t\t\timg.src = dataUrl;\r\n\t\t\t\tvar a = document.createElement('a');\r\n\t\t\t\t// toDataURL defaults to png, so we need to request a jpeg, then convert for file download.\r\n\t\t\t\ta.href = dataUrl\r\n\t\t\t\ta.download = filename;\r\n\t\t\t\ta.click();\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.error('oops, something went wrong!', error);\r\n\t\t\t});\r\n\t}\r\n\r\n\tfunction initProject(): Project {\r\n\t\tlet pid = uuidv4()\r\n\t\tlet project: Project = {\r\n\t\t\tProjectName: \"Projecttyu\",\r\n\t\t\tProjectDescription: \"hello world\",\r\n\t\t\tProjectDetail: \"\",\r\n\t\t\tVisibleStatus: VisibleStatus.Private,\r\n\t\t\tUserId: user._id,\r\n\t\t\tShareUrl: \"xff\"\r\n\r\n\t\t}\r\n\r\n\t\treturn project\r\n\t}\r\n\r\n\tfunction openExport(id: string) {\r\n\r\n\t\tswitch (id) {\r\n\t\t\tcase \"png-ex\":\r\n\t\t\t\texportPng(currentProject.ProjectName + \".png\")\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"json-ex\":\r\n\t\t\t\tsaveSerial()\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"mysql-ex\":\r\n\t\t\t\texportSelect(currentProject.ProjectName+\".sql\" , new MySqlGenerate())\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pos-ex\":\r\n\t\t\t\talert(\"coming soon\")\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"sqlserver-ex\":\r\n\t\t\t\talert(\"coming soon\")\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (id === \"dbexportmenu\") {\r\n\t\t\t//db export\r\n\t\t\tsetexportDbModal(true)\r\n\t\t\t//exportSelect(currentProject.ProjectName + \".sql\", new MySqlGenerate())\r\n\t\t} else if (id === \"imageexportmenu\") {\r\n\t\t\tsetimageModal(true)\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tfunction ToggleEditor() {\r\n\t\tsetEdit(!isEdit)\r\n\t}\r\n\r\n\tfunction onZoomFit() {\r\n\t\tdiagram.getEngine().zoomToFit()\r\n\t}\r\n\r\n\tfunction newTable() {\r\n\t\tdiagram.newNode()\r\n\t\taddOnSelectListener()\r\n\t}\r\n\r\n\tfunction saveSerial() {\r\n\t\tlet modelJson = diagram.getEngine().getModel().serialize()\r\n\t\tlet modelStr = JSON.stringify(modelJson)\r\n\t\tsetsaveData(modelStr)\r\n\t\tdownloadFile(currentProject.ProjectName + \".er\", modelStr)\r\n\t}\r\n\r\n\tconst onChangeFile = (e: any) => {\r\n\t\tconsole.log(e)\r\n\t}\r\n\r\n\r\n\tfunction loadOpenFile() {\r\n\t\tvar elem = document.getElementById(\"importjson\");\r\n\t\tif (elem && document.createEvent) {\r\n\t\t\tvar evt = document.createEvent(\"MouseEvents\");\r\n\t\t\tevt.initEvent(\"click\", true, false);\r\n\t\t\telem.dispatchEvent(evt);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction onLoadFile(e: any) {\r\n\t\tconsole.log(\"on load\")\r\n\t\t/*\r\n\t\tvar input = e.target;\r\n\t\tvar reader = new FileReader();\r\n\t\treader.onload = (es) => {\r\n\t\t\tvar text: any = reader.result;\r\n\t\t\tlet model2 = new DiagramModel()\r\n\t\t\tlet obj: ReturnType<DiagramModel['serialize']> = JSON.parse(text);\r\n\t\t\tmodel2.deserializeModel(obj, diagram.engine)\r\n\t\t\tif (model2 == null) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\te.target.value = null\r\n\t\t\tdiagram.getEngine().setModel(model2)\r\n\r\n\t\t};\r\n\t\treader.readAsText(input.files[0]);\r\n\t\t*/\r\n\t}\r\n\r\n\t/*\r\n\r\n\tfunction loadSerial() {\r\n\r\n\t\tif (saveData == \"\") return\r\n\t\tlet str = saveData\r\n\t\tlet model2 = new DiagramModel()\r\n\t\tlet obj: ReturnType<DiagramModel['serialize']> = JSON.parse(str);\r\n\t\tmodel2.deserializeModel(obj, diagram.engine)\r\n\t\tif (model2 == null) {\r\n\t\t\tconsole.log(\"model null\")\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tdiagram.getEngine().setModel(model2)\r\n\t\ttogglePropUpdate()\r\n\t\tconsole.log(\"load sucess\")\r\n\t}\r\n\r\n\t*/\r\n\r\n\tfunction togglePropUpdate() {\r\n\t\tsetupdate(!update)\r\n\t}\r\n\r\n\tfunction downloadFile(fileName: string, content: string) {\r\n\t\tvar a = document.createElement('a');\r\n\t\ta.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(content));\r\n\t\ta.setAttribute('download', fileName);\r\n\r\n\t\ta.style.display = 'none';\r\n\t\tdocument.body.appendChild(a);\r\n\r\n\t\ta.click();\r\n\r\n\t\tdocument.body.removeChild(a);\r\n\t}\r\n\r\n\tfunction exportSelect(filename: string, codeGen: BaseGenerate) {\r\n\t\tlet tbs = getAllTable(diagram)\r\n\t\tlet relationData = diagram.getRelationData()\r\n\t\tlet str = codeGen.export(tbs, relationData)\r\n\t\tdownloadFile(filename, str)\r\n\t}\r\n\r\n\tfunction resetDiagram() {\r\n\t\tdiagram.clearDiagram()\r\n\t}\r\n\r\n\tfunction exportSql(filename: string) { exportSelect(filename, new MySqlGenerate()) }\r\n\r\n\tfunction zoomIn() { diagram.doZoom(25) }\r\n\r\n\tfunction zoomOut() { diagram.doZoom(-25) }\r\n\r\n\r\n\tfunction onDownloadImage(filename: string) {\r\n\t\tsetimageModal(false)\r\n\t\tif (filename !== \"\") exportPng(filename + \".png\")\r\n\r\n\t}\r\n\r\n\tfunction onCloseDbExport(name: string) {\r\n\t\tsetexportDbModal(false)\r\n\t\talert(name)\r\n\t\tswitch (name) {\r\n\t\t\tcase \"Mysql\":\r\n\t\t\t\texportSql(currentProject.ProjectName + \".sql\")\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"sqlserver\":\r\n\t\t\t\talert(\"coming soon\")\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"postresql\":\r\n\t\t\t\talert(\"coming soon\")\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"oracle\":\r\n\t\t\t\talert(\"coming soon\")\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Laravel\":\r\n\t\t\t\talert(\"test export \")\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Image\":\r\n\t\t\t\texportPng(currentProject.ProjectName + \".png\")\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Json\":\r\n\t\t\t\tsaveSerial()\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction onMenuName(menuname: string) {\r\n\t\tswitch (menuname) {\r\n\t\t\tcase \"shortcutmenu\":\r\n\t\t\t\tsetshortcutModal(true)\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"exportmenu\":\r\n\t\t\t\tsetexportDbModal(true)\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"importmenu\":\r\n\t\t\t\tloadOpenFile()\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"sharemenu\":\r\n\t\t\t\tlet link = history.location.pathname\r\n\t\t\t\tlet linksplit = link.split(\"/\")\r\n\t\t\t\tlink = \"https://toper.netlify.app\" + \"/share/\" + linksplit[2]\r\n\t\t\t\tsetlinkUrl(link)\r\n\t\t\t\tsetshareModal(true)\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction handleZoomEvent(name:string){\r\n\t\tif(name === \"Reset View\") {\r\n\t\t\tdiagram.zoomFit()\r\n\t\t\treturn\r\n\t\t}\r\n\t\tlet zoommap : any = {\r\n\t\t\t\"100%\" : 100,\r\n\t\t\t\"75%\" : 75,\r\n\t\t\t\"50%\" : 50\r\n\t\t}\r\n\t\tdiagram.zoomPercent(zoommap[name])\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ThemeProvider theme={darkTheme}>\r\n\t\t\t<AppToolbar diagram={diagram} onExport={openExport} isDark={darkState}\r\n\t\t\t\tonSave={onSaveProject} onSelectChange={isOnSelectNode} onOpenMenu={onMenuName} />\r\n\t\t\t<Toolbar onZoomIn={zoomIn} isRender={false} isDark={darkState} onRedo={diagram.redo}\r\n\t\t\t\tonZoomOut={zoomOut} onZoomFit={diagram.zoomFit} newTable={newTable} onUndo={diagram.undo}\r\n\t\t\t\tonCut={diagram.cutSelected} onDel={diagram.deleteSelected} onZoomSelectChange={handleZoomEvent}\r\n\t\t\t\tonDup={diagram.duplicateSelected} isNodeSelect={isOnSelectNode} onCopy={diagram.copySelected} />\r\n\r\n\t\t\t<ShortCutMenu isOpen={shortcutModal} onClose={() => setshortcutModal(false)} />\r\n\r\n\t\t\t<ShareModal isOpen={shareModal} linkUrl={linkUrl} onClose={()=>setshareModal(false)}/>\r\n\r\n\t\t\t<input type=\"file\" style={{ display: \"none\" }} id=\"jsonimport\" onChange={() => onLoadFile} />\r\n\r\n\t\t\t<input type=\"file\" style={{ display: \"none\" }} id=\"importjson\" onChange={onChangeFile} />\r\n\r\n\t\t\t<TableEditor isOpen={isEdit} diagramctr={diagram}\r\n\t\t\t\tonclose={ToggleEditor} forceUpdate={update} />\r\n\r\n\t\t\t<MenuProvider id=\"diagram\" storeRef={false} >\r\n\t\t\t\t<DemoCanvasWidget background=\"#FFFF\" color=\"#808080\" isDark={darkState} >\r\n\t\t\t\t\t<CanvasWidget engine={diagram.engine} className=\"canvas\" />\r\n\t\t\t\t</DemoCanvasWidget>\r\n\t\t\t</MenuProvider>\r\n\r\n\t\t\t<SimpleContext />\r\n\r\n\t\t\t<ContextMenus copyFunc={diagram.copySelected} pasteFunc={diagram.pasteSelected} deleteFunc={diagram.deleteSelected}\r\n\t\t\t\tduplicateFunc={diagram.duplicateSelected} cutFunc={diagram.cutSelected}\r\n\t\t\t\tzoomIn={zoomIn} zoomOut={zoomOut} undoFunc={diagram.undo} redoFunc={diagram.redo} />\r\n\t\t</ThemeProvider >\r\n\r\n\t);\r\n\r\n}\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { LoginPayload } from \"../../interface/loginpayload\"\r\nimport { jsonToProject, Project, projectToJson } from \"../../interface/project\";\r\nimport { User, defaultUser, jsonToUser } from \"../../interface/user\";\r\nimport { ToggleLoading } from \"../share/action\";\r\nimport { DeleteProject, NewProject, SetProject, SetProjectSaveType, ToggleModal, UpdateProject } from \"./action\";\r\n\r\n\r\nexport interface UpdateProjectProp {\r\n    id : string,\r\n    data : string\r\n}\r\n\r\nexport const fetchProjectAsync = () => {\r\n    return async (dispatch: Dispatch) => {\r\n        let url = \"https://toperbackend.herokuapp.com/project/getprojects\"\r\n        dispatch(ToggleLoading(true))\r\n        const rs = await axios.get(url)\r\n        if (rs.status === 200) {\r\n            let projects: Project[] = []\r\n            rs.data.forEach((p: any) => {\r\n                const project: Project = jsonToProject(p)\r\n                projects.push(project)\r\n            })\r\n\r\n            dispatch(SetProject(projects))\r\n\r\n            dispatch(SetProjectSaveType(\"cloud\"))\r\n\r\n        }\r\n        dispatch(ToggleLoading(false))\r\n    };\r\n}\r\n\r\nexport const newProjectAsync = (project: Project) => {\r\n    return async (dispatch: Dispatch) => {\r\n        let url = \"https://toperbackend.herokuapp.com/project\"\r\n        let data = projectToJson(project)\r\n        alert(JSON.stringify(data))\r\n        dispatch(ToggleModal(false))\r\n        dispatch(ToggleLoading(true))\r\n        const rs = await axios.post(url, data)\r\n        if (rs.status === 200) {\r\n            dispatch(NewProject(project))\r\n\r\n        }\r\n        dispatch(ToggleLoading(false))\r\n    };\r\n}\r\n\r\nexport const updateProjectAsync = (project: Project, id: string) => {\r\n    return async (dispatch: Dispatch) => {\r\n        let url = \"https://toperbackend.herokuapp.com/project/\" + id\r\n        let data = projectToJson(project)\r\n        alert(JSON.stringify(data))\r\n        dispatch(ToggleModal(false))\r\n        dispatch(ToggleLoading(true))\r\n        const rs = await axios.put(url, data)\r\n        if (rs.status === 200) {\r\n            dispatch(UpdateProject({ id: id, data: project }))\r\n        }\r\n        dispatch(ToggleLoading(false))\r\n    };\r\n}\r\n\r\nexport const deleteProjectAsync = (id: string) => {\r\n    return async (dispatch: Dispatch) => {\r\n        let url = \"https://toperbackend.herokuapp.com/project/delete/\" + id\r\n        dispatch(ToggleLoading(true))\r\n        const rs = await axios.delete(url)\r\n        if (rs.status === 200) {\r\n            dispatch(DeleteProject(id))\r\n        }\r\n        dispatch(ToggleLoading(false))\r\n    };\r\n}\r\n\r\n\r\nexport const fetchProjectLocal = () => {\r\n    return async (dispatch: Dispatch) => {\r\n        let projectsStr = localStorage.getItem(\"projects\")\r\n        let rs: any[] = []\r\n        if (projectsStr === null) {\r\n            localStorage.setItem(\"projects\", JSON.stringify(rs))\r\n            return\r\n        }\r\n        dispatch(SetProjectSaveType(\"device\"))\r\n\r\n        let projects: any[] = JSON.parse(projectsStr)\r\n\r\n        projects.forEach(p => {\r\n            p.ProjectDetail = \"\"\r\n        });\r\n\r\n        dispatch(SetProject(projects))\r\n\r\n        //alert(JSON.stringify(projects))\r\n    };\r\n}\r\n\r\nexport const newProjectLocal = (project: Project) => {\r\n    return async (dispatch: Dispatch) => {\r\n\r\n        let projectstr = localStorage.getItem(\"projects\")\r\n\r\n        if (projectstr !== null) {\r\n            let projectRs: any[] = JSON.parse(projectstr)\r\n            projectRs.push(project)\r\n            alert(JSON.stringify(projectRs))\r\n            localStorage.setItem(\"projects\", JSON.stringify(projectRs))\r\n            dispatch(SetProject(projectRs))\r\n        }\r\n\r\n    };\r\n}\r\n\r\nexport const saveProjectasync = (data : string , id : string) => {\r\n    return async (dispatch: Dispatch) => {\r\n\r\n        \r\n    };\r\n}\r\n\r\n\r\n\r\nexport const saveProjectLocal = (updateData : UpdateProjectProp) => {\r\n    return async (dispatch: Dispatch) => {\r\n\r\n        let projectstr = localStorage.getItem(\"projects\")\r\n\r\n        if (projectstr !== null) {\r\n            let projectRs: any[] = JSON.parse(projectstr)\r\n            console.log(projectRs)\r\n            console.log(updateData.id)\r\n            let indexof = projectRs.findIndex(p=>p.Id === updateData.id)\r\n            if(indexof === -1) return\r\n            console.log(indexof)\r\n            console.log(projectRs[indexof])\r\n            projectRs[indexof].ProjectDetail = updateData.data\r\n            localStorage.setItem(\"projects\", JSON.stringify(projectRs))\r\n        }\r\n\r\n    };\r\n}\r\n\r\nexport const fetchPosts = (loginPayload: LoginPayload) => async (dispatch: any) => {\r\n\r\n    dispatch({ type: 'FETCH_POSTS', payload: \"\" })\r\n}\r\n\r\n","import { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport interface ModalProp{\r\n    isOpen : boolean,\r\n    onClose : () => void\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500],\r\n    },\r\n  });\r\n\r\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\r\n  id: string;\r\n  children: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\n\r\n\r\nexport const DialogContent = withStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nexport const DialogActions = withStyles((theme: Theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);","import { Dialog } from \"@material-ui/core\"\r\nimport { FunctionComponent } from \"react\"\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {DialogContent, ModalProp , DialogActions} from './modalprop'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst shortcutlist : any[] = [\r\n    {\r\n        code : \"CTRL+N\",\r\n        text : \"New Table\"\r\n    },\r\n    {\r\n        code : \"CTRL+S\",\r\n        text : \"Save Project\"\r\n    },\r\n    {\r\n        code : \"CTRL+C\",\r\n        text : \"Copy Table\"\r\n    },\r\n    {\r\n        code : \"CTRL+V\",\r\n        text : \"Cut Table\"\r\n    },\r\n    {\r\n        code : \"CTRL+D\",\r\n        text : \"Duplicate Table\"\r\n    },\r\n    {\r\n        code : \"CTRL+Z\",\r\n        text : \"Redo Action\"\r\n    },\r\n    {\r\n        code : \"CTRL+X\",\r\n        text : \"Undo Action\"\r\n    },\r\n\r\n]\r\n\r\nexport const ShortCutMenu: FunctionComponent<ModalProp> = ({isOpen , onClose}) => {\r\n    return (\r\n        <Dialog open={isOpen} aria-labelledby=\"simple-dialog-title\" >\r\n             <DialogTitle id=\"simple-dialog-title\">Shortcut</DialogTitle>\r\n             <DialogContent dividers>\r\n\r\n             <List>\r\n        {shortcutlist.map((s) => (\r\n          <ListItem button >\r\n        \r\n            <ListItemText primary={s.code} style={{marginRight:50}} /> \r\n\r\n            \r\n            <ListItemText primary={s.text} />\r\n          </ListItem>\r\n        ))}\r\n        </List>\r\n\r\n             </DialogContent>\r\n\r\n             <DialogActions>\r\n                 <Button color=\"primary\" onClick={onClose}>Close</Button>\r\n             </DialogActions>\r\n             \r\n\r\n        </Dialog>\r\n    )\r\n}","import { FunctionComponent, useRef } from \"react\";\r\n\r\nimport {DialogContent , DialogActions, ModalProp } from './modalprop'\r\nimport { Avatar, Box, Dialog, DialogTitle, Typography , TextField , IconButton, makeStyles, Theme, createStyles } from \"@material-ui/core\"\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport { toast } from \"react-toastify\";\r\n\r\ninterface ShareModalProp extends ModalProp {\r\n    linkUrl : string\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n\r\n    modalPaper: {\r\n        minWidth: '75vh',\r\n        maxWidth: '75vh',\r\n    },\r\n\r\n \r\n  }),\r\n);\r\n\r\nexport const ShareModal: FunctionComponent<ShareModalProp> = ({linkUrl, isOpen  , onClose}) => {\r\n\r\n    const classes = useStyles();\r\n    const onCopy = async () => {\r\n        try {\r\n            await navigator.clipboard.writeText(linkUrl);\r\n            toast.success(\"Copy Link Success\")\r\n          } catch (err) {\r\n            toast.error(\"Copy Link Fail\")\r\n          }\r\n    }\r\n\r\n    return (\r\n        <Dialog open={isOpen} aria-labelledby=\"share-dialog\" classes={{ paper: classes.modalPaper }} >\r\n        <DialogTitle id=\"share-dialog\">Share you Diagram</DialogTitle>\r\n        <DialogContent>\r\n\r\n          <TextField\r\n\r\n            margin=\"dense\"\r\n            id=\"linkurl\"\r\n            label=\"Link Url\"\r\n            fullWidth\r\n            value={linkUrl}\r\n            InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\" >\r\n                    <IconButton onClick={onCopy}  >\r\n                        <AssignmentIcon/>\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n   \r\n        </DialogActions>\r\n      </Dialog>\r\n    )\r\n}","export enum AlertActionType {\r\n    SET_ERROR = \"SET_ERROR\",\r\n    HIDE_ERROR = \"HIDE_ERROR\",\r\n}\r\n\r\ninterface HideErrorType {\r\n    type: typeof AlertActionType.HIDE_ERROR\r\n    payload: void\r\n}\r\n\r\ninterface SetErrorType {\r\n    type: typeof AlertActionType.SET_ERROR\r\n    payload: string\r\n}\r\n\r\nexport type AlertActionTypes = SetErrorType |   HideErrorType","import { TableData } from \"../components/TableEditor\";\r\nimport { DiagramController } from \"../DiagramController/DiagramCtr\";\r\nimport { SchemaNodeModel } from \"../schemanode/node/SchemaNodeModel\";\r\n\r\nfunction getAllTable(diagram : DiagramController) : TableData[]{\r\n    let rs : TableData[] = []\r\n    let alltb = diagram.getEngine().getModel().getNodes() as SchemaNodeModel[]\r\n    alltb.forEach(tb => {\r\n      let name =tb.getOptions().name\r\n      if(name == undefined) name = \"\"\r\n      let add : TableData = {\r\n        id : tb.getID(),\r\n        tablename : name,\r\n        fields : tb.getAllField()\r\n      }\r\n      rs.push(add)\r\n    });\r\n    return rs\r\n}\r\n\r\nexport {getAllTable}","import { FunctionComponent } from \"react\";\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport {  Box} from \"@material-ui/core\"\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport { RootState } from \"../../store\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    \r\n  },\r\n  toolbar: {\r\n\r\n    ...theme.mixins.toolbar\r\n  },\r\n\r\n  avatarIcon : {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n\r\n    drawerPaper: {\r\n      backgroundColor : \"#5661B3\",\r\n    color : \"white\",\r\n\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n      },\r\n      toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n      },\r\n\r\n}));\r\n\r\nexport const Sidebar: FunctionComponent = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const user = useSelector((state:RootState) => state.AuthReducer.user)\r\n\r\n    const history = useHistory();\r\n\r\n    const changePath = (p : string) => {\r\n      \r\n      history.push(\"/document/\"+p)\r\n    }\r\n\r\n    return (\r\n        <Drawer\r\n        variant=\"permanent\"\r\n        className={classes.drawer}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n\r\n          <Avatar alt=\"Remy Sharp\" \r\n          style={{marginTop:20 }} className={classes.avatarIcon} >\r\n            <AccountCircleIcon style={{fontSize:70}}></AccountCircleIcon>\r\n            </Avatar>\r\n          <Typography style={{margin:14 , fontSize:20}}>{user.userName}</Typography>\r\n\r\n          <hr style={{width:200}}></hr>\r\n\r\n          </Box>\r\n        \r\n        </div>\r\n     \r\n        <List>\r\n        <div>\r\n        <ListItem button onClick={() => changePath(\"newproject\")}>\r\n            <ListItemIcon>\r\n              <AddCircleOutlineOutlinedIcon color=\"inherit\" style={{color:\"white\"}} />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"New Project\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => changePath(\"filelist\")}>\r\n            <ListItemIcon>\r\n              <DashboardIcon color=\"inherit\" style={{color:\"white\"}}  />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"File List\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => changePath(\"filelist\")}>\r\n            <ListItemIcon color=\"transparent\">\r\n              <ShoppingCartIcon style={{color:\"white\"}}  />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Template\"  />\r\n          </ListItem>\r\n          <ListItem button onClick={() => changePath(\"accout\")}>\r\n            <ListItemIcon>\r\n              <PeopleIcon style={{color:\"white\"}} />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Customers\" />\r\n          </ListItem>\r\n \r\n          <ListItem button onClick={() => changePath(\"accout\")}>\r\n            <ListItemIcon>\r\n              <LayersIcon style={{color:\"white\"}} />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Logout\" />\r\n          </ListItem>\r\n        </div>\r\n        </List>\r\n  \r\n      </Drawer>\r\n        \r\n      )\r\n}","import { AlertActionType , AlertActionTypes} from \"./type\";\r\n\r\nexport function SetErrorAction(err: string): AlertActionTypes {\r\n    return {\r\n      type: AlertActionType.SET_ERROR,\r\n      payload: err\r\n    }\r\n}\r\n\r\nexport function HideErrorAction(v:void): AlertActionTypes {\r\n    return {\r\n      type: AlertActionType.HIDE_ERROR,\r\n      payload: v\r\n    }\r\n}\r\n\r\n","import axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { LoginPayload } from \"../../interface/loginpayload\"\r\nimport { User , defaultUser , jsonToUser } from \"../../interface/user\";\r\nimport {SetLoginState, SetUser} from './action'\r\nimport Cookies from \"js-cookie\"\r\nimport { SetProject } from \"../project/action\";\r\nimport { ToggleLoading } from \"../share/action\";\r\nimport { toast } from \"react-toastify\";\r\nimport { SetErrorAction } from \"../alert/action\";\r\n\r\n\r\nexport const signIn = (login : LoginPayload) => {\r\n    return async (dispatch : Dispatch) => {\r\n      let url = \"https://toperbackend.herokuapp.com/auth/login\"\r\n      try {\r\n        let rs = await axios.post(url , login)\r\n        console.log(rs)\r\n\r\n        if(rs.status === 200){\r\n          const data = rs.data\r\n          if(data.access_token !== \"\"){\r\n              toast.success(\"Login sucess\")\r\n              Cookies.set(\"ertoken\" , data.access_token)\r\n              const user : User = jsonToUser(data)\r\n              dispatch(SetUser(user))\r\n              dispatch(SetLoginState(true))\r\n    \r\n          }\r\n      \r\n        }\r\n      }catch (err) {\r\n        console.log(err)\r\n        toast.error(\"Wrong User or Password\")\r\n      }\r\n    \r\n      \r\n    };\r\n}\r\n\r\nexport const register = (user : any) => {\r\n  return async (dispatch : Dispatch) => {\r\n    let url = \"https://toperbackend.herokuapp.com/auth/register\"\r\n    try {\r\n\r\n      let rs = await axios.post(url , user)\r\n\r\n      const data = rs.data\r\n      if(data.access_token !== \"\"){\r\n            Cookies.set(\"ertoken\" , data.access_token)\r\n            const user : User = jsonToUser(data)\r\n            dispatch(SetUser(user))\r\n            dispatch(SetLoginState(true))\r\n  \r\n      }\r\n        \r\n    } catch (error) {\r\n      console.log(error.response)\r\n      dispatch(SetErrorAction(error.response.data.message))\r\n    }\r\n  \r\n    \r\n  };\r\n}\r\n\r\n\r\nexport const signOut = () => {\r\n  return async (dispatch : Dispatch) => {\r\n    Cookies.set(\"ertoken\" , \"\")\r\n    const user : User = defaultUser()\r\n    dispatch(SetUser(user))\r\n    dispatch(SetLoginState(false))\r\n    dispatch(SetProject([]))\r\n  };\r\n}\r\n\r\n","import React, { FunctionComponent } from 'react'\r\nimport {  useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { signOut } from '../../reducer/auth/thunkaction';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {RootState} from '../../store/index'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n\r\n\r\n}));\r\n\r\nexport const MainHead: FunctionComponent = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const user = useSelector((state: RootState) => state.AuthReducer.user);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const classes = useStyles();\r\n\r\n    const onLogOut = async () => {\r\n        await dispatch(signOut())\r\n        history.push(\"/login\")\r\n    }\r\n\r\n    return (\r\n      <AppBar  className={classes.appBar} elevation={0} position=\"fixed\" color=\"transparent\"  >\r\n      <Toolbar className={classes.toolbar} >\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          className={classes.menuButton}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n          Dashboard\r\n        </Typography>\r\n        <IconButton color=\"inherit\" onClick={onLogOut}>\r\n          \r\n            <ExitToAppIcon />\r\n        \r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default MainHead\r\n","import React , { FunctionComponent } from \"react\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\ninterface ConfrimProp {\r\n    isOpen : boolean,\r\n    onClose : () => void,\r\n    onConfrim : () => void\r\n}\r\n\r\nexport const ConfrimDialog: FunctionComponent<ConfrimProp> = ({isOpen , onClose , onConfrim}) => {\r\n\r\n  const handleClose = () => {\r\n    onClose()\r\n  };\r\n\r\n  const handleConfrim = () => {\r\n    onConfrim()\r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Dialog\r\n        open={isOpen}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Are you want Delete this Project?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleConfrim} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React, { FunctionComponent, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link , useHistory } from 'react-router-dom'\r\n\r\nimport { Project } from '../../interface/project'\r\nimport { deleteProjectAsync, fetchProjectAsync, fetchProjectLocal } from '../../reducer/project/thunkaction'\r\nimport { RootState } from '../../store'\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport { ConfrimDialog } from \"../ConfrimDialog\"\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport CloudQueueIcon from '@material-ui/icons/CloudQueue';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AirplayIcon from '@material-ui/icons/Airplay';\r\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\n\r\nexport const FileList: FunctionComponent = () => {\r\n\r\n  const history = useHistory()\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const [isConfrimModal, setisConfrimModal] = useState(false)\r\n\r\n  const [currentSelect, setcurrentSelect] = useState(\"\")\r\n\r\n  const projects = useSelector((state: RootState) => state.ProjectReducer.projects)\r\n\r\n  const projectSaveType = useSelector((state: RootState) => state.ProjectReducer.projectSaveType)\r\n\r\n  const selectRemove = (id: string | undefined) => {\r\n    if (id === undefined) id = \"\"\r\n    setisConfrimModal(true)\r\n    setcurrentSelect(id)\r\n  }\r\n\r\n  const confrimRemove = () => {\r\n    alert(currentSelect)\r\n    setisConfrimModal(false)\r\n    if (currentSelect === \"\") return\r\n    dispatch(deleteProjectAsync(currentSelect))\r\n  }\r\n\r\n  const switchSaveType = (type:string) => {\r\n    if(type===\"device\"){\r\n      dispatch(fetchProjectLocal())\r\n    }else if(type===\"cloud\"){\r\n      dispatch(fetchProjectAsync())\r\n    }\r\n  }\r\n\r\n  const gotoEdit = (id:string|undefined) => {\r\n    if(id===undefined) return \"\"\r\n    let baseUrl = (projectSaveType === \"cloud\") ? \"/editor\" : \"/localeditor\"\r\n    let url = baseUrl + \"/\" + id\r\n    return url\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <Box display=\"flex\">\r\n\r\n        <Box p={1} flexGrow={1} >\r\n          <h2>Open With</h2>\r\n          <List>\r\n          <ListItem button onClick={()=>switchSaveType(\"cloud\")} selected={projectSaveType === \"cloud\"}>\r\n          <ListItemIcon>\r\n            <CloudQueueIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Cloud\" />\r\n        </ListItem>\r\n        <ListItem button onClick={()=>switchSaveType(\"device\")} selected={projectSaveType === \"device\"}>\r\n          <ListItemIcon>\r\n            <AirplayIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Device\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <OpenInBrowserIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Browse\" />\r\n        </ListItem>\r\n          </List>\r\n\r\n        </Box>\r\n\r\n        <Divider orientation=\"vertical\" flexItem style={{height:\"80vh\"}} />\r\n\r\n        <Box p={1} flexGrow={1} > \r\n        <List>\r\n        {projects.map((p: Project) => (\r\n          <ListItem key={p.Id}>\r\n            <Link to={()=>gotoEdit(p.Id)}>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <FolderIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n            </Link>\r\n\r\n            <ListItemText\r\n              primary={p.ProjectName}\r\n              secondary={'Update at 10min ago'}\r\n            />\r\n            <ListItemSecondaryAction>\r\n            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => history.push(\"/document/editproject/\"+p.Id)}>\r\n                <CreateIcon />\r\n              </IconButton>\r\n              <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => selectRemove(p.Id)}>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n\r\n        ))}\r\n        <ConfrimDialog isOpen={isConfrimModal} onClose={() => setisConfrimModal(false)} onConfrim={confrimRemove} />\r\n\r\n      </List>\r\n        </Box>\r\n\r\n      \r\n\r\n    </Box>\r\n\r\n\r\n\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default FileList","import { Button, TextField } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport React, { FunctionComponent, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { defaultUser, jsonToUser, User } from \"../interface/user\";\r\nimport { RootState } from \"../store\";\r\nimport axios from 'axios'\r\nimport { SetUser } from \"../reducer/auth/action\";\r\n\r\nexport const UserFrom : FunctionComponent = () => {\r\n\r\n    const user = useSelector((state: RootState) => state.AuthReducer.user);\r\n\r\n    const [userName, setuserName] = useState(\"\")\r\n\r\n    const [userLastname, setuserLastname] = useState(\"\")\r\n\r\n    const [userEmail, setuserEmail] = useState(\"\")\r\n\r\n    const [userPassword, setuserPassword] = useState(\"\")\r\n\r\n    const dispatch = useDispatch()  \r\n\r\n    useEffect(() => {\r\n        alert(\"init user form\")\r\n        setuserEmail(user.userEmail)\r\n        setuserName(user.userName)\r\n        setuserPassword(user.userPassword)\r\n    }, [])\r\n\r\n    const onSave = () => {\r\n\r\n        let updateUser : User = {\r\n            ...user,\r\n            userEmail,\r\n            userName,\r\n            userLastname,\r\n            userPassword\r\n        }\r\n\r\n        updateUser.userLastname = \"testt\"\r\n\r\n        alert(JSON.stringify(updateUser))\r\n    \r\n        let url = \"https://toperbackend.herokuapp.com/user/\" + user._id\r\n        \r\n        axios.put(url , updateUser).then(rs=>{\r\n            console.log(rs)\r\n            if(rs.status === 200){\r\n                  let userrs = jsonToUser(rs.data)\r\n                  console.log(userrs)\r\n                  dispatch(SetUser(updateUser))\r\n            }\r\n        })\r\n        \r\n        \r\n\r\n    }\r\n\r\n    return (\r\n        <Box flexGrow={1}>\r\n\r\n            <TextField label=\"User Email\" value={userEmail} \r\n             onChange={(e) => setuserEmail(e.target.value)}  fullWidth style={{ margin: 8 }} />\r\n\r\n            <TextField label=\"User Name\" value={userName} \r\n                onChange={(e) => setuserName(e.target.value)} fullWidth style={{ margin: 8 }} />\r\n            \r\n            <TextField label=\"User Password\" value={userPassword} \r\n                onChange={(e) => setuserPassword(e.target.value)}  fullWidth style={{ margin: 8 }} />\r\n\r\n            <Button onClick={onSave}>Save</Button>\r\n\r\n        </Box>\r\n    )\r\n}","import { Button, TextField } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport React, { FunctionComponent, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { defaultProject, Project } from \"../interface/project\";\r\nimport { RootState } from \"../store\";\r\nimport { newProjectAsync, newProjectLocal, updateProjectAsync } from \"../reducer/project/thunkaction\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useParams , useLocation} from 'react-router';\r\nimport { EditorParamType } from '../pages/editor';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nexport const ProjectForm : FunctionComponent = () => {\r\n\r\n    let pid = \"\"\r\n    \r\n    const [projectId, setprojectId] = useState(\"\")\r\n\r\n    const projectSaveType = useSelector((state:RootState) => state.ProjectReducer.projectSaveType)\r\n\r\n    const userId = useSelector((state:RootState) => state.AuthReducer.user._id)\r\n\r\n    const projects = useSelector((state:RootState) => state.ProjectReducer.projects)\r\n\r\n    const [currentProject, setcurrentProject] = useState(defaultProject())\r\n\r\n    const location = useLocation()\r\n\r\n    const history = useHistory()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [ProjectName, setProjectName] = useState(\"\")\r\n\r\n    const [ProjectDescription, setProjectDescription] = useState(\"\")\r\n\r\n    const user = useSelector((state : RootState) => state.AuthReducer.user)\r\n\r\n    useEffect(() => {\r\n        initProject()\r\n    }, [])\r\n\r\n    function initProject(){\r\n        let str = location.pathname.split(\"/\")\r\n        \r\n        if(str.length = 4){\r\n            pid = str[3]\r\n            setprojectId(pid)\r\n\r\n            let projectdata = projects.find(p=>p.Id === pid)\r\n            if(projectdata !== undefined) {\r\n                setcurrentProject(projectdata)\r\n                alert(\"set project \" + JSON.stringify(projectdata))\r\n                setProjectName(projectdata.ProjectName)\r\n                setProjectDescription(projectdata.ProjectDescription)\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    const onSave = () =>  {\r\n\r\n        currentProject.UserId = userId\r\n        currentProject.ProjectName = ProjectName\r\n        currentProject.ProjectDescription = ProjectDescription\r\n\r\n        if(projectId ===  undefined || projectId === \"\"){\r\n            if(projectSaveType === \"device\"){\r\n                console.log('add device')\r\n                currentProject.Id = uuidv4()\r\n                dispatch(newProjectLocal(currentProject))\r\n            }else if(projectSaveType === \"cloud\"){\r\n                console.log(\"add cloud\")\r\n                dispatch(newProjectAsync(currentProject))\r\n            }\r\n            \r\n        }else{\r\n            dispatch(updateProjectAsync(currentProject , projectId))\r\n        }\r\n        history.push(\"/\")\r\n    }\r\n\r\n    const test = () => {\r\n        let project : Project = {\r\n            ProjectName : ProjectName,\r\n            ProjectDescription : ProjectDescription,\r\n            ProjectDetail : \"\",\r\n            VisibleStatus : 1,\r\n            UserId :  user._id,\r\n            ShareUrl : \"\"\r\n        }\r\n        \r\n        dispatch(newProjectAsync(project))\r\n\r\n        history.push(\"/document/filelist\")\r\n    }\r\n\r\n    return (\r\n        <Box flexGrow={1}>\r\n\r\n            <TextField label=\"Project Name\" value={ProjectName} \r\n                onChange={(e) => setProjectName(e.target.value)} fullWidth style={{ margin: 8 }} />\r\n            <TextField label=\"Project Description\" value={ProjectDescription} \r\n                onChange={(e) => setProjectDescription(e.target.value)} fullWidth style={{ margin: 8 }} />\r\n            <TextField label=\"Create Date\" disabled fullWidth style={{ margin: 8 }} />\r\n            <TextField label=\"Update Date\" disabled fullWidth style={{ margin: 8 }} />\r\n            <Button onClick={onSave} style={{ margin: 8 }}>Save Project</Button>\r\n        </Box>\r\n    )\r\n}","import React, { FunctionComponent, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport {Sidebar} from '../components/Document/Sidebar'\r\n\r\nimport { MainHead } from \"../components/Document/MainHead\";\r\nimport { RootState } from \"../store\";\r\nimport { initApp } from \"../reducer/loadapp\";\r\n\r\nimport { FileList } from \"../components/Document/FileList\";\r\n\r\n//import { ProjectForm } from \"../components/Document/ProjectForm\";\r\nimport { UserFrom } from \"./userform\";\r\nimport { ProjectForm } from \"./projectform\";\r\n\r\nexport default function ExTemplate() {\r\n  return <div>Template</div>;\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nexport const Document: FunctionComponent = () => {\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  const addProjectModal = useSelector((state: RootState) => state.ProjectReducer.addProjectModal)\r\n\r\n  const isFetch = useSelector((state: RootState) => state.ShareReducer.isFetch)\r\n\r\n  const isLoading = useSelector(\r\n    (state: RootState) => state.ShareReducer.isLoading\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if(!isFetch){\r\n      dispatch(initApp());\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n\r\n    <div className={classes.root}>\r\n\r\n      \r\n    <CssBaseline />\r\n    <Sidebar/>\r\n    <MainHead></MainHead>\r\n    <main className={classes.content}>\r\n      <div className={classes.appBarSpacer} />\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n    \r\n          {/* Chart */}\r\n          <Switch>\r\n              <Route path=\"/document/filelist\" component={FileList} />\r\n              <Route path=\"/document/template\" component={ExTemplate} />\r\n              <Route path=\"/document/accout\" component={UserFrom} />\r\n              <Route path=\"/document/newproject\" component={ProjectForm} />\r\n              <Route path=\"/document/editproject/:id\" component={ProjectForm} />\r\n              \r\n            </Switch>\r\n\r\n        \r\n      </Container>\r\n    </main>\r\n  </div>\r\n    \r\n\r\n  );\r\n};\r\n","import React ,  { FunctionComponent, useRef, useState } from \"react\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { useDispatch } from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport LinkMat from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { LoginPayload } from \"../interface/loginpayload\";\r\nimport { initApp } from \"../reducer/loadapp\";\r\nimport { signIn } from \"../reducer/auth/thunkaction\"\r\nimport { Link } from \"react-router-dom\";\r\nimport {ToggleLoading} from '../reducer/share/action'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <LinkMat color=\"inherit\" href=\"https://material-ui.com/\">\r\n          Your Website\r\n        </LinkMat>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n  \r\n\r\nexport const SignIn: FunctionComponent = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const fileData = useRef(\"\")\r\n\r\n    const [userInfo, setuserInfo] = useState(\"\")\r\n\r\n    const [userPassword, setuserPassword] = useState(\"\")\r\n\r\n    const onLogin = async () => {\r\n\r\n        let loginParam: LoginPayload = {\r\n          userEmail : \"\",\r\n          userName: \"\",\r\n          userPassword: userPassword\r\n        }\r\n\r\n        if(isEmail()){\r\n          loginParam.userEmail = userInfo\r\n        }else{\r\n          loginParam.userName = userInfo\r\n        }\r\n\r\n        dispatch(ToggleLoading(true))\r\n        await dispatch(signIn(loginParam))\r\n        dispatch(ToggleLoading(false))\r\n        history.push(\"/\")\r\n    }\r\n\r\n    const isEmail = () => {\r\n      let pattern = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/; \r\n      return pattern.test(userInfo);\r\n    }\r\n\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate >\r\n\r\n        \r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Enter Name or Email\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={(e) => setuserInfo(e.target.value)} value={userInfo}\r\n            />\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={(e) => setuserPassword(e.target.value)} value={userPassword}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={onLogin}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <LinkMat href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </LinkMat>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link to=\"/signup\">\r\n                <LinkMat href=\"#\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </LinkMat>\r\n                </Link>\r\n                \r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n}","import {NodeTheme} from './theme'\r\n\r\nexport enum ThemeActionType {\r\n    SET_NODE_THEME = \"SET_NODE_THEME\"\r\n}\r\n\r\ninterface SetNodeTheme {\r\n    type: typeof ThemeActionType.SET_NODE_THEME,\r\n    payload: NodeTheme\r\n}\r\n  \r\nexport type ThemeActionTypes = SetNodeTheme ","import { User , defaultUser, isLogin } from \"../../interface/user\"\r\nimport { AuthActionType , AuthActionTypes} from './type'\r\n\r\n\r\nexport interface AuthState {\r\n    user : User,\r\n    isLogin : boolean,\r\n    err : string\r\n}\r\n\r\nconst initialState : AuthState = {\r\n    user : defaultUser(),\r\n    isLogin : true,\r\n    err : \"no err\"\r\n}\r\n\r\nexport const AuthReducer =  (state  = initialState, action : AuthActionTypes) => {\r\n    switch (action.type) {\r\n\r\n    case AuthActionType.SET_USER:\r\n        console.log(\"set user reducer : \"+ JSON.stringify(action.payload))\r\n        return { ...state, user : action.payload }\r\n    case AuthActionType.UPDATE_USER:\r\n        return { ...state, ...action.payload }\r\n    case AuthActionType.SET_LOGIN:\r\n        return { ...state, isLogin : action.payload }\r\n    \r\n    default:\r\n        return state\r\n    }\r\n}\r\n","\r\nimport { ShareActionTypes , ShareActionType } from './type'\r\n\r\ninterface ShareState {\r\n    error : string,\r\n    isLoading : boolean,\r\n    isFetch : boolean\r\n}\r\n\r\nconst initialState : ShareState = {\r\n    isFetch : false,\r\n    error : \"\",\r\n    isLoading : false,\r\n}\r\n\r\nexport const ShareReducer =  (state = initialState, action : ShareActionTypes) => {\r\n    switch (action.type) {\r\n    case ShareActionType.TOGGLE_LOADING:\r\n        return { ...state, isLoading : action.payload }\r\n    case ShareActionType.SET_FETCH:\r\n            return { ...state, isFetch : action.payload }\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","\r\nimport { Project , defaultProjects  , defaultProject } from \"../../interface/project\"\r\nimport { ProjectActionTypes , ProjectActionType } from \"./type\"\r\n\r\ninterface ProjectState {\r\n    projects : Project[],\r\n    currentProject : Project,\r\n    addProjectModal : boolean,\r\n    confrimModal : boolean,\r\n    projectSaveType : string\r\n}\r\n\r\nconst initialState : ProjectState = {\r\n    projects : defaultProjects(),\r\n    currentProject : defaultProject(),\r\n    addProjectModal : false,\r\n    confrimModal : false,\r\n    projectSaveType : \"\"\r\n}\r\n\r\nexport const ProjectReducer = (state = initialState, action : ProjectActionTypes) => {\r\n    switch (action.type) {\r\n\r\n    case ProjectActionType.SET_PROJECT:\r\n        return { ...state, projects : action.payload }\r\n    case ProjectActionType.NEW_PROJECT:\r\n        state.projects.push(action.payload)\r\n        return { ...state }\r\n    case ProjectActionType.UPDATE_PROJECT:\r\n        let updateindex = state.projects.findIndex(p=>p.Id === action.payload.id)\r\n        if(updateindex !== -1) state.projects[updateindex] = action.payload.data\r\n        return { ...state }\r\n    case ProjectActionType.DELETE_PROJECT:\r\n        const indexof = state.projects.findIndex(p=>p.Id === action.payload)\r\n        if(indexof !== -1) state.projects.splice(indexof , 1)\r\n        return { ...state }\r\n\r\n    case ProjectActionType.TOGGLE_MODAL:\r\n        return { ...state , addProjectModal : action.payload }\r\n    case ProjectActionType.TOGGLE_CONFRIM_MODAL:\r\n        return { ...state , confrimModal : action.payload }\r\n    case ProjectActionType.SET_PROJECT_SAVE_TYPE:\r\n        return { ...state, projectSaveType : action.payload }\r\n\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import Cookies from 'js-cookie'\r\nimport {ThemeActionType, ThemeActionTypes} from './type'\r\n\r\nexport interface NodeTheme {\r\n    textcolor : string,\r\n    bgcolor : string\r\n}\r\n\r\ninterface ThemeState {\r\n    darkMode : boolean,\r\n    nodeTheme : NodeTheme\r\n}\r\n\r\nconst getDefaultDarkMode = () =>{\r\n    console.log('get mode')\r\n    let darkmode = Cookies.get(\"darkmode\")\r\n    if(darkmode === undefined || darkmode === \"false\") return false\r\n    return true\r\n}\r\n\r\nconst initialState : ThemeState = {\r\n    darkMode : getDefaultDarkMode(),\r\n    nodeTheme : {\r\n        textcolor : \"white\",\r\n        bgcolor : \"#015AA0\"\r\n    }\r\n}\r\n\r\nexport const themeReducer =  (state = initialState, action : ThemeActionTypes) => {\r\n    switch (action.type) {\r\n    case ThemeActionType.SET_NODE_THEME : \r\n        return {...state , nodeTheme : action.payload}\r\n    default: \r\n        return state\r\n    }\r\n}\r\n","\r\nimport { AlertActionType , AlertActionTypes} from './type'\r\n\r\n\r\nexport interface AlertState {\r\n    error : string,\r\n    isOpen : boolean\r\n}\r\n\r\nconst initialState : AlertState = {\r\n    error : \"\",\r\n    isOpen : false\r\n}\r\n\r\nexport const alertReducer =  (state  = initialState, action : AlertActionTypes) => {\r\n    switch (action.type) {\r\n\r\n    case AlertActionType.SET_ERROR:\r\n        return { ...state, error : action.payload , isOpen : true }\r\n    case AlertActionType.HIDE_ERROR:\r\n        return { ...state, error : \"\" , isOpen : false }\r\n\r\n    default:\r\n        return state\r\n    }\r\n}","import { createStore, combineReducers , applyMiddleware } from \"redux\";\r\n\r\nimport {AuthReducer} from \"../reducer/auth/auth\";\r\n\r\nimport {ShareReducer} from '../reducer/share/share'\r\n\r\nimport {ProjectReducer} from '../reducer/project/project'\r\n\r\nimport {themeReducer} from '../reducer/theme/theme'\r\n\r\nimport {alertReducer} from '../reducer/alert/alert'\r\n\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nconst rootReducer = combineReducers({\r\n\tAuthReducer,\r\n    ShareReducer,\r\n    ProjectReducer,\r\n    themeReducer,\r\n    alertReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nconst store = () => {\r\n\t return\tcreateStore(rootReducer , applyMiddleware(thunkMiddleware));\r\n}\r\n\r\nconst rsStore = store()\r\n\r\nexport default rsStore","import {toast} from \"react-toastify\"\r\nimport { SetErrorAction } from \"../../reducer/alert/action\"\r\nimport store from \"../../store/index\"\r\n\r\nexport function NoficationIfError(fn ?: (err : string) => void){\r\n    let error = store.getState().alertReducer.error\r\n    if(fn){\r\n        fn(error)\r\n    }\r\n    if(error !== \"\"){\r\n        toast.error(error)       \r\n        store.dispatch(SetErrorAction(\"\"))\r\n    }\r\n\r\n    \r\n    \r\n    \r\n}","import React ,  { FunctionComponent, useState } from \"react\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport LinkMat from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { LoginPayload } from \"../interface/loginpayload\";\r\nimport { initApp } from \"../reducer/loadapp\";\r\nimport { register } from \"../reducer/auth/thunkaction\"\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { User } from \"../interface/user\";\r\nimport { ToggleLoading } from \"../reducer/share/action\";\r\nimport { NoficationIfError } from \"../api/nofication\";\r\nimport { RootState } from \"../store\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <LinkMat color=\"inherit\" href=\"https://material-ui.com/\">\r\n          Your Website\r\n        </LinkMat>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n  \r\n\r\nexport const SignUp: FunctionComponent = () => {\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [userName, setuserName] = useState(\"\")\r\n\r\n    const [userLastname, setuserLastname] = useState(\"\")\r\n\r\n    const [userEmail, setuserEmail] = useState(\"\")\r\n\r\n    const [userPassword, setuserPassword] = useState(\"\")\r\n\r\n    const errorMsg = useSelector((state : RootState) => state.alertReducer.error)\r\n\r\n    const history = useHistory()\r\n\r\n    const onLogin = async () => {\r\n        let user: any = {\r\n            userName,\r\n            userLastname,\r\n            userPassword,\r\n            userEmail\r\n        }\r\n        dispatch(ToggleLoading(true))\r\n        await dispatch(register(user))\r\n        dispatch(ToggleLoading(false))\r\n        NoficationIfError( (err:string) => {\r\n          console.log(err)\r\n          if(err === \"\"){\r\n            history.push(\"/\")\r\n          }\r\n          return\r\n        })\r\n        \r\n        //\r\n      \r\n        \r\n    }\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign Up\r\n          </Typography>\r\n          <form className={classes.form} noValidate >\r\n          <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"User name\"\r\n\r\n\r\n              onChange={(e) => setuserName(e.target.value)} value={userName}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"lastname\"\r\n              label=\"User Lastname\"\r\n              name=\"lastname\"\r\n              onChange={(e) => setuserLastname(e.target.value)} value={userLastname}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n\r\n              onChange={(e) => setuserEmail(e.target.value)} value={userEmail}\r\n            />\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={(e) => setuserPassword(e.target.value)} value={userPassword}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={onLogin}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <LinkMat href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </LinkMat>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link to=\"/signup\">\r\n                <LinkMat href=\"#\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </LinkMat>\r\n                </Link>\r\n                \r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n}","import React, { FunctionComponent, useEffect, useState } from 'react'\r\n\r\n\r\n\r\nimport {BrowserRouter as Router, Redirect, Route, useHistory } from 'react-router-dom'\r\n\r\nimport { Editor } from './pages/editor'\r\n\r\nimport {Document} from './pages/document'\r\n\r\nimport {SignIn} from './pages/signin'\r\nimport Cookies from 'js-cookie'\r\nimport { SignUp } from './pages/signup'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from './store'\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n\r\nexport const App: FunctionComponent = () => {\r\n\r\n\tconst isLoading = useSelector((state: RootState) => state.ShareReducer.isLoading);\r\n\r\n\tconst isLogin = () => {\r\n\t\tconsole.log(\"check login from app\")\r\n\t\tlet token = Cookies.get(\"ertoken\")\r\n\t\tif(token === \"\" || token === undefined) return false\r\n\t\treturn true\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\r\n\t\t<ToastContainer autoClose={2500} />\r\n\r\n\t\t<Backdrop open={isLoading} >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n\t\t\t<Router>\r\n\r\n\t\t\t<Route exact path=\"/signup\" component={SignUp}/>\r\n\r\n\t\t\t<Route exact path=\"/login\" component={SignIn}/>\r\n\r\n\t\t\t<Route exact path=\"/\" component={Document} >\r\n\t\t\t\t{isLogin() ? <Redirect to=\"/document/filelist\" /> : <Redirect to=\"/login\" />}\r\n\t\t\t\t\r\n\t\t\t</Route>\r\n\t\t\t<Route  path=\"/document\" component={Document} />\r\n\t\t\t<Route exact path=\"/editor/:projectId\" component={Editor} />\r\n\t\t\t<Route exact path=\"/localeditor/:projectId\" component={Editor} />\r\n\t\t\t<Route path=\"/share/:projectId\" component={Editor} />\r\n\t\t\t</Router>\r\n\r\n\t\t\t\r\n\r\n\t\t</React.Fragment>\r\n\r\n\t);\r\n\r\n}\r\n\r\n\r\n\r\n","\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App'\nimport './index.css';\n\nimport { Provider } from 'react-redux';\nimport store from \"./store/index\"\n\nReactDOM.render(   \n  <Provider store={store}>\n\t\t<App />\n\t</Provider>\n  \n,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}