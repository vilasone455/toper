{"version":3,"sources":["components/CanvasDiagram.tsx","components/Toolbar.tsx","components/AppToolbar.tsx","components/ExportEditor.tsx","components/FileMenu.tsx","components/Icons/Copy.jsx","components/Icons/Cut.jsx","components/Icons/Delete.jsx","components/Icons/Duplicate.jsx","components/Icons/Paste.jsx","components/Icons/Redo.jsx","components/Icons/Settings.jsx","components/Icons/Undo.jsx","components/Icons/ZoomIn.jsx","components/Icons/ZoomOut.jsx","components/ContextMenus/KeyMenu.jsx","components/ContextMenus/ContextMenuIconContainer.jsx","components/ContextMenus/ContextMenuShortcutContainer.jsx","components/ContextMenus/ComponentContextMenu.tsx","components/ContextMenus/DiagramContextMenu.tsx","components/ContextMenus/ContextMenus.tsx","DiagramController/actions/DeleteAction.ts","schemanode/node/SchemaNodeModel.ts","DiagramController/actions/NewNodeAction.ts","DiagramController/actions/DuplicateAction.ts","DiagramController/actions/Clipboard.ts","schemanode/port/SchemaPortLabelWidget.tsx","schemanode/node/SchemaNodeWidget.tsx","schemanode/node/SchemaNodeFactory.tsx","libs/engine.ts","App.tsx","DiagramController/DiagramCtr.tsx","components/Appbar.tsx","components/TableEditor.tsx","components/ContextMenus/SimpleContext.tsx","api/export/MySqlGenerate.ts","api/export/BaseGenerate.ts","interface/user.ts","libs/tableUtil.ts","index.tsx"],"names":["CT","styled","div","p","background","DemoCanvasWidget","color","id","this","props","children","React","useStyles","makeStyles","theme","createStyles","root","border","palette","divider","borderRadius","shape","backgroundColor","text","secondary","margin","spacing","Toolbar","onSave","onLoad","onZoomIn","onZoomOut","onZoomFit","newTable","classes","Grid","container","alignItems","className","onClick","Divider","orientation","flexItem","Select","MenuItem","value","flexGrow","title","menu","marginRight","menuButton","AppToolbar","onExport","style","height","marginLeft","Typography","variant","Button","MenuEnum","LEFT","MenuList","Menu","Right","SqlExport","code","fileName","isRender","onDownloadClick","onInputChange","TextField","label","onChange","multiline","rowsMax","marginTop","width","ImageExport","imageType","ExportEditor","isOpen","onclose","exportPng","exportSql","exportTest","useState","Image","currentMenu","setcurrentMenu","currentFileName","setcurrentFileName","useEffect","handleFileNameInput","e","target","Drawer","anchor","open","onClose","display","role","IconButton","size","MySql","light","LoginForm","userName","userPassword","onLogin","onUserName","onUserPassword","AccoutDetail","FileDetail","ListProject","FileMenu","Account","setuserName","setuserPassword","FileSelect","ProjectList","Copy","viewBox","fill","stroke","strokeWidth","x","y","rx","ry","d","Cut","cx","cy","r","x1","y1","x2","y2","Delete","points","Duplicate","transform","Paste","Redo","Settings","Undo","ZoomIn","ZoomOut","Container","span","Key","ContextMenuIconContainer","ContextMenuShortcutContainer","ComponentContextMenu","copyFunc","pasteFunc","deleteFunc","duplicateFunc","cutFunc","zoomIn","zoomOut","DiagramContextMenu","redoFunc","undoFunc","ContextMenus","DeleteAction","areShortcutsAllowed","type","InputType","KEY_DOWN","fire","event","console","log","JSON","stringify","engine","getModel","isLocked","matchesInput","preventDefault","handleAction","getSelectedEntities","filter","model","forEach","remove","repaintCanvas","ctrlKey","Action","SchemaNodeModel","options","name","portsIn","portsOut","fieldOptions","lookupTable","clone","getID","i","length","portId","indexof","findIndex","fieldIndex","f","splice","removeField","port","getOptions","in","indexOf","tb","fields_tb","fields","getAllField","fieldName","fieldType","field","portin","addInPort","portout","addOutPort","add","ai","pk","fk","fkTb","fkField","push","removePort","addField","inId","undefined","fieldOption","targetNode","targetIdPort","sourceInIdPort","alert","targetPort","getPortFromID","sourceport","link","reportPosition","portins","rs","getField","index","fieldOptionIndex","outId","after","uid","uuidv4","DefaultPortModel","alignment","PortModelAlignment","addPort","RIGHT","data","_","portsInOrder","portsOutOrder","c","NodeModel","NewNodeAction","snode","setPosition","addAll","DuplicateAction","clones","entity","BaseModel","map","clearSelection","addNode","setSelected","ClipboardAction","handleCut","handleCopy","handlePaste","getSelectedComponents","selectNodes","copie","serialize","localStorage","setItem","Promise","resolve","reject","clipboardstr","getItem","clipboard","parse","pastemodel","deserializeData","registerModel","deserialize","PortLabel","Label","Port","SchemaPortLabel","storeRef","Node","Title","TitleName","Ports","PortsContainer","SchemaNodeWidget","generatePort","getActionEventBus","fireAction","key","stopPropagation","fireEvent","data-default-node-name","node","selected","isSelected","onDoubleClick","fireDoubleClick","fireDeleteEvent","getInPorts","getOutPorts","SchemaNodeFactory","initialConfig","AbstractReactFactory","GetEngine","createEngine","registerDefaultDeleteItemsAction","getNodeFactories","registerFactory","DiagramModel","m","registerListener","selectionChanged","setModel","VisibleStatus","DiagramController","isLock","copySelected","duplicateSelected","cutSelected","pasteSelected","deleteSelected","undo","initActions","getEngine","getZoomLevel","links","getLinks","getModels","registerAction","entities","linkNode","nodes","getNodes","sourcePort","currentNode","targetNodeId","targetNodeField","mainNodeField","getNode","linkForeignKey","updateNode","tablename","zoomLevel","setZoomLevel","addOrUpdateFieldOption","clientX","clientY","deltaY","inputEdit","padding","fontSize","Appbar","onDelete","onEndEdit","isEdit","setisEdit","textInput","settextInput","AppBar","position","elevation","edge","aria-label","onBlur","styledTable","cell","TableEditor","diagramctr","forceUpdate","getNodeData","currentTable","setTable","getOtherTable","otherTable","currentSelectTableId","setcurrentSelectTableId","currentFieldId","setcurrentFieldId","currentField","useMemo","find","t","loadTableFieldSelect","toggleUpdate","settoggleUpdate","currentEdit","setcurrentEdit","typeSelect","settypeSelect","nodedata","tbname","fieldlist","getFieldsData","setEditField","closeEdit","newtb","handleChange","handleTypeChange","onSelectTableChange","onChangeFieldSelect","targetPortOutId","sourceField","sourceFieldId","linkModel","getFieldOption","optionName","setFieldOption","idField","fieldIndexof","newfieldOption","updateFieldOption","updateNodeName","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","row","component","scope","placeholder","o","checked","removeFieldbyId","AddNewField","newField","SimpleContext","MySqlGenerate","isLastLine","newLineAndTab","getFields","getCreateTable","App","Id","UserName","UserLastName","UserEmail","UserPassword","update","diagram","toggleFileMenu","settoggleFileMenu","currentUserId","projectId","projectName","projectDescription","visibleStatus","Private","userId","projectDetail","currentProject","isExportOpen","setisExportOpen","setsaveData","setEdit","ToggleEditor","Cookies","get","isLogin","filename","document","getElementById","htmlToImage","then","dataUrl","src","a","createElement","href","download","click","catch","error","loadOpenFile","elem","createEvent","evt","initEvent","dispatchEvent","downloadFile","content","setAttribute","encodeURIComponent","body","appendChild","removeChild","doZoom","Fragment","newNode","modelJson","modelStr","exportPdf","codeGen","tbs","getAllTable","str","export","exportSelect","input","reader","FileReader","onload","es","result","model2","obj","deserializeModel","readAsText","files","ReactDOM","render"],"mappings":"ygCAYO,IAAMA,EAAKC,UAAOC,IAAV,KAGK,SAACC,GAAD,OAAOA,EAAEC,cAqChBC,GAhCaJ,UAAOC,IAAV,KAED,SAACC,GAAD,OAAOA,EAAEC,cAMzB,SAACD,GAAD,OAAOA,EAAEG,SACT,SAACH,GAAD,OAAOA,EAAEG,SAGT,SAACH,GAAD,OAAOA,EAAEG,SACT,SAACH,GAAD,OAAOA,EAAEG,SAOT,SAACH,GAAD,OAAOA,EAAEG,SACT,SAACH,GAAD,OAAOA,EAAEG,SAGT,SAACH,GAAD,OAAOA,EAAEG,SACT,SAACH,GAAD,OAAOA,EAAEG,SAOf,uKAIE,OACC,cAACN,EAAD,CAAIO,GAAG,YACNH,WAAYI,KAAKC,MAAML,YAAc,kBACrCE,MAAOE,KAAKC,MAAMH,OAAS,0BAF5B,SAGEE,KAAKC,MAAMC,eARhB,GAAsCC,c,0OClChCC,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CAEJC,OAAO,aAAD,OAAeH,EAAMI,QAAQC,SACnCC,aAAcN,EAAMO,MAAMD,aAC1BE,gBAAiB,UACjBhB,MAAOQ,EAAMI,QAAQK,KAAKC,UAC1B,QAAS,CACPC,OAAQX,EAAMY,QAAQ,IAExB,OAAQ,CACND,OAAQX,EAAMY,QAAQ,EAAG,WAepBC,EAA8C,SAAC,GAAsE,IAArEC,EAAoE,EAApEA,OAASC,EAA2D,EAA3DA,OAASC,EAAkD,EAAlDA,SAAWC,EAAuC,EAAvCA,UAAYC,EAA2B,EAA3BA,UAAYC,EAAe,EAAfA,SAE1GC,EAAUtB,IAEhB,OACE,8BACE,eAACuB,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAW,SAASC,UAAWJ,EAAQlB,KAAvD,UAEI,cAAC,IAAD,CAAgBuB,QAASN,IACzB,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAACO,EAAA,EAAD,CAASC,YAAY,WAAWC,UAAQ,IAC1C,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAACF,EAAA,EAAD,CAASC,YAAY,WAAWC,UAAQ,IACxC,eAACC,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAUC,MAAO,MAAjB,iBACE,cAACD,EAAA,EAAD,CAAUC,MAAO,MAAjB,iBACA,cAACD,EAAA,EAAD,CAAUC,MAAO,OAAjB,qBAEF,cAAC,IAAD,CAAYN,QAAST,IACrB,cAAC,IAAD,CAAcS,QAASR,IACvB,cAAC,IAAD,CAAcQ,QAASP,IACvB,cAACQ,EAAA,EAAD,CAASC,YAAY,WAAWC,UAAQ,IACxC,cAAC,IAAD,CAAeH,QAASX,IACxB,cAAC,IAAD,CAAYW,QAASV,U,kBC5DvBjB,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJ8B,SAAU,GAGZC,MAAO,CACLD,SAAU,GAGZE,KAAO,CACHC,YAAc,IAElBC,WAAY,CACVD,YAAanC,EAAMY,QAAQ,SAUpByB,EAAiD,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,SACxDlB,EAAUtB,IAEhB,OACE,sBAAK0B,UAAWJ,EAAQlB,KAAxB,UACE,qBAAKqC,MAAO,CAACC,OAAS,GAAGC,WAAa,IAAtC,SAEI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKnD,MAAM,UAA/B,2BAMJ,sBAAK+C,MAAO,CAACC,OAAS,IAAtB,UAGA,cAACI,EAAA,EAAD,mBACI,cAACA,EAAA,EAAD,CAAQnB,QAASa,EAAjB,oBACA,cAACM,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,mBACA,cAACF,EAAA,EAAD,CAAYlB,UAAWJ,EAAQa,e,soBCnClC,IAoEFY,GApEQC,GAAO3D,UAAOC,IAAV,MAQJ2D,GAAW5D,UAAOC,IAAV,MAQR4D,GAAO7D,UAAOC,IAAV,MASJ6D,GAAQ9D,UAAOC,IAAV,MAWL8D,GAA8C,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,KAAMC,EAA0D,EAA1DA,SAAUC,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,gBAAkBC,EAAoB,EAApBA,cACxG,OAAKF,EAID,gCACE,6CACA,cAACG,GAAA,EAAD,CAAWC,MAAM,YAAYd,QAAQ,SAASZ,MAAOqB,EAAUM,SAAUH,IACzE,cAACC,GAAA,EAAD,CAAWC,MAAM,SAASd,QAAQ,SAASgB,WAAS,EAClDC,QAAS,GAAIrB,MAAO,CAAEsB,UAAW,GAAIC,MAAO,OAAQtB,OAAQ,KAAOT,MAAOoB,IAC5E,cAACP,EAAA,EAAD,CAAQD,QAAQ,WAAWnD,MAAM,UAAU+C,MAAO,CAAEJ,YAAa,IAAjE,kBACA,cAACS,EAAA,EAAD,CAAQD,QAAQ,YAAYnD,MAAM,UAAUiC,QAAS6B,EAArD,yBATI,yBAeCS,GAAkD,SAAC,GAAwE,IAAtEX,EAAqE,EAArEA,SAAUC,EAA2D,EAA3DA,SAAqBC,GAAsC,EAAjDU,UAAiD,EAAtCV,iBAAkBC,EAAoB,EAApBA,cACjH,OAAKF,EAID,gCACE,+CACA,cAACG,GAAA,EAAD,CAAWC,MAAM,YAAYd,QAAQ,SAASZ,MAAOqB,EAAUM,SAAUH,IAEzE,cAACX,EAAA,EAAD,CAAQD,QAAQ,YAAYnD,MAAM,UAAUiC,QAAS6B,EAArD,yBAPI,0B,SAaPT,O,iBAAAA,I,iBAAAA,I,yBAAAA,I,yBAAAA,I,sBAAAA,Q,KAyCE,IAAMoB,GAA8C,SAAC,GAAuE,IAArEC,EAAoE,EAApEA,OAAQC,EAA4D,EAA5DA,QAASC,EAAmD,EAAnDA,UAAYC,EAAuC,EAAvCA,UAAYC,EAA2B,EAA3BA,WAAalB,EAAc,EAAdA,SAAc,EAE1FmB,mBAAS1B,GAAS2B,OAFwE,mBAEzHC,EAFyH,KAE5GC,EAF4G,OAIlFH,mBAAS,IAJyE,mBAIzHI,EAJyH,KAIxGC,EAJwG,KAMhIC,qBAAU,YACM,IAAXX,GACDU,EAAmBxB,KAGpB,CAACA,IAEJ,IAAM0B,EAAsB,SAACC,GAAD,OAAaH,EAAmBG,EAAEC,OAAOjD,QAUrE,OAEE,cAACkD,GAAA,EAAD,CAAQC,OAAQ,QAASC,KAAMjB,EAAQ3B,MAAO,CAAEuB,MAAO,KAAOsB,QAASjB,EAAvE,SACE,sBACE5B,MAAO,CAAEuB,MAAO,IAAKuB,QAAS,QAC9BC,KAAK,eACL9D,UAAU,GAHZ,UAME,eAACsB,GAAD,WACE,cAACyC,GAAA,EAAD,CAAY/F,MAAM,UAAUgG,KAAK,SAAjC,SAA0C,cAAC,KAAD,MAC1C,eAACzC,GAAD,WACE,cAACC,GAAD,CAAMvB,QAAS,kBAAMiD,EAAe7B,GAAS4C,QAA7C,iBACA,cAACzC,GAAD,CAAMvB,QAAS,kBAAMiD,EAAe7B,GAAS2B,QAA7C,mBACA,cAACxB,GAAD,CAAMvB,QAAS,kBAAM6C,EAAW,kBAAhC,iBAEA,cAAC5C,EAAA,EAAD,CAASa,MAAO,CAAEsB,UAAW,GAAIrE,MAAO,SAAWkG,OAAO,IAE1D,cAAC1C,GAAD,sBACA,cAACA,GAAD,+BAIJ,eAACC,GAAD,WACE,cAAC,GAAD,CAAWI,SAAUoB,GAAe5B,GAAS4C,MAC7ClC,cAAeuB,EAAqB3B,KAAM,GAAIC,SAAUuB,EAAiBrB,gBAjC7D,WAClBe,EAAUM,EAAkB,WAiCtB,cAAC,GAAD,CAAatB,SAAUoB,GAAe5B,GAAS2B,MAC/CjB,cAAeuB,EAAqBd,UAAU,MAAMZ,SAAUuB,EAAiBrB,gBA/BnE,WAClBc,EAAUO,EAAkB,oB,ulBClIzB,IAkJF9B,GAlJQC,GAAO3D,UAAOC,IAAV,MAQJ2D,GAAW5D,UAAOC,IAAV,MAQR4D,GAAO7D,UAAOC,IAAV,MASJ6D,GAAQ9D,UAAOC,IAAV,MAqBLuG,GAA0C,SAAC,GAAoF,IAAlFtC,EAAiF,EAAjFA,SAAWuC,EAAsE,EAAtEA,SAAWC,EAA2D,EAA3DA,aAAeC,EAA4C,EAA5CA,QAAUC,EAAkC,EAAlCA,WAAaC,EAAqB,EAArBA,eACpH,OAAK3C,EAID,gCACE,wCAEI,cAACG,GAAA,EAAD,CAAWC,MAAM,YAAYd,QAAQ,SAAUJ,MAAO,CAAEsB,UAAW,GAAIC,MAAO,QAC5E/B,MAAO6D,EAAUlC,SAAUqC,IAE7B,cAACvC,GAAA,EAAD,CAAWC,MAAM,gBAAgBd,QAAQ,SAAUJ,MAAO,CAAEsB,UAAW,GAAIC,MAAO,QAChF/B,MAAO8D,EAAcnC,SAAUsC,IAEjC,qBAAKzD,MAAO,CAAEsB,UAAW,IAAzB,SAEE,cAACjB,EAAA,EAAD,CAAQD,QAAQ,WAAWnD,MAAM,UAAU+C,MAAO,CAAEJ,YAAa,IACjEV,QAAS,kBAAMqE,EAAQF,EAAWC,IADlC,wBAdF,yBAuBCI,GAA4C,SAAC,GACxD,OAD0E,EAAhB5C,SAKtD,gCACE,yCACI,cAACG,GAAA,EAAD,CAAWC,MAAM,QAAQd,QAAQ,SAASgB,WAAS,EAACpB,MAAO,CAAEsB,UAAW,GAAIC,MAAO,QACjF/B,MAAO,eAET,qBAAKQ,MAAO,CAAEsB,UAAW,IAAzB,0BAGA,sBAAKtB,MAAO,CAAEsB,UAAW,IAAzB,UACE,cAACjB,EAAA,EAAD,CAAQD,QAAQ,WAAWJ,MAAO,CAAEJ,YAAa,IAAjD,oBACA,cAACS,EAAA,EAAD,CAAQD,QAAQ,WAAWJ,MAAO,CAAEJ,YAAa,IAAjD,uBACA,cAACS,EAAA,EAAD,CAAQD,QAAQ,WAAWnD,MAAM,UAAU+C,MAAO,CAAEJ,YAAa,IAAjE,2BAdF,yBAsBC+D,GAA0C,SAAC,GAItD,OAJwE,EAAhB7C,SAQpD,gCACE,4CACI,cAACG,GAAA,EAAD,CAAWC,MAAM,QAAQd,QAAQ,SAASgB,WAAS,EAACpB,MAAO,CAAEsB,UAAW,GAAIC,MAAO,QACjF/B,MAAO,eAET,qBAAKQ,MAAO,CAAEsB,UAAW,IAAzB,0BAGA,sBAAKtB,MAAO,CAAEsB,UAAW,IAAzB,UACE,cAACjB,EAAA,EAAD,CAAQD,QAAQ,WAAWJ,MAAO,CAAEJ,YAAa,IAAjD,oBACA,cAACS,EAAA,EAAD,CAAQD,QAAQ,WAAWJ,MAAO,CAAEJ,YAAa,IAAjD,uBACA,cAACS,EAAA,EAAD,CAAQD,QAAQ,WAAWnD,MAAM,UAAU+C,MAAO,CAAEJ,YAAa,IAAjE,2BAdF,yBAsBCgE,GAA2C,SAAC,GACvD,OADyE,EAAhB9C,SAKrD,gCACE,uCACI,cAACG,GAAA,EAAD,CAAWC,MAAM,QAAQd,QAAQ,SAASgB,WAAS,EAACpB,MAAO,CAAEsB,UAAW,GAAIC,MAAO,QACjF/B,MAAO,eAET,qBAAKQ,MAAO,CAAEsB,UAAW,IAAzB,0BAGA,sBAAKtB,MAAO,CAAEsB,UAAW,IAAzB,UACE,cAACjB,EAAA,EAAD,CAAQD,QAAQ,WAAWJ,MAAO,CAAEJ,YAAa,IAAjD,oBACA,cAACS,EAAA,EAAD,CAAQD,QAAQ,WAAWJ,MAAO,CAAEJ,YAAa,IAAjD,uBACA,cAACS,EAAA,EAAD,CAAQD,QAAQ,WAAWnD,MAAM,UAAU+C,MAAO,CAAEJ,YAAa,IAAjE,2BAdF,0B,SAsBPU,O,qBAAAA,I,2BAAAA,I,8BAAAA,Q,KAOE,IAAMuD,GAA+C,SAAC,GAAqC,IAAnClC,EAAkC,EAAlCA,OAAS4B,EAAyB,EAAzBA,QAAU3B,EAAe,EAAfA,QAAe,EAEzDI,mBAAS1B,GAASwD,SAFuC,mBAExF5B,EAFwF,KAE3EC,EAF2E,OAI/DH,mBAAS,IAJsD,mBAIxFqB,EAJwF,KAI9EU,EAJ8E,OAMvD/B,mBAAS,IAN8C,mBAMxFsB,EANwF,KAM1EU,EAN0E,KAyB/F,OACE,cAACtB,GAAA,EAAD,CAAQC,OAAQ,OAAQC,KAAMjB,EAAQ3B,MAAO,CAAEuB,MAAO,KAAOsB,QAASjB,EAAtE,SACE,sBACE5B,MAAO,CAAEuB,MAAO,IAAKuB,QAAS,QAC9BC,KAAK,eACL9D,UAAU,GAHZ,UAKE,eAAC,GAAD,WACE,cAAC+D,GAAA,EAAD,CAAY/F,MAAM,UAAUgG,KAAK,SAAjC,SAA0C,cAAC,KAAD,MAC1C,eAAC,GAAD,WACE,cAAC,GAAD,CAAM/D,QAAS,kBAAMiD,EAAe7B,GAASwD,UAA7C,oBACA,cAAC,GAAD,CAAM5E,QAAS,kBAAMiD,EAAe7B,GAAS2D,aAA7C,kBACA,cAAC,GAAD,CAAM/E,QAAS,kBAAMiD,EAAe7B,GAAS4D,cAA7C,qBACA,cAAC,GAAD,sBAEA,cAAC/E,EAAA,EAAD,CAASa,MAAO,CAAEsB,UAAW,GAAIrE,MAAO,SAAWkG,OAAO,UAG9D,eAAC,GAAD,WAEE,cAAC,GAAD,CAAWrC,UAAU,EAAMuC,SAAUA,EAAUC,aAAcA,EAC7DE,WAtCe,SAAChB,GAAauB,EAAYvB,EAAEC,OAAOjD,QAsCtBiE,eApCT,SAACjB,GAAawB,EAAgBxB,EAAEC,OAAOjD,QAoCM+D,QAASA,IAEzE,cAAC,GAAD,CAAczC,SAAUoB,IAAgB5B,GAASwD,UAEjD,cAAC,GAAD,CAAYhD,SAAUoB,IAAgB5B,GAAS2D,aAE/C,cAAC,GAAD,CAAanD,SAAUoB,IAAgB5B,GAAS4D,uB,SChN3CC,GAdF,SAAC,GAAD,QAAGlB,YAAH,MAAU,GAAV,MAAchG,aAAd,MAAsB,OAAtB,SACX,sBACEsE,MAAO0B,EACPhD,OAAQgD,EACRmB,QAAQ,YACRC,KAAK,OACLC,OAAQrH,EACRsH,YAAY,IANd,UAQE,sBAAMC,EAAE,IAAIC,EAAE,IAAIlD,MAAM,KAAKtB,OAAO,KAAKyE,GAAG,IAAIC,GAAG,MACnD,sBAAMC,EAAE,gECOGC,GAjBH,SAAC,GAAD,QAAG5B,YAAH,MAAU,GAAV,MAAchG,aAAd,MAAsB,OAAtB,SACV,sBACEsE,MAAO0B,EACPhD,OAAQgD,EACRmB,QAAQ,YACRC,KAAK,OACLC,OAAQrH,EACRsH,YAAY,IANd,UAQE,wBAAQO,GAAG,IAAIC,GAAG,IAAIC,EAAE,MACxB,wBAAQF,GAAG,IAAIC,GAAG,KAAKC,EAAE,MACzB,sBAAMC,GAAG,KAAKC,GAAG,IAAIC,GAAG,OAAOC,GAAG,UAClC,sBAAMH,GAAG,QAAQC,GAAG,QAAQC,GAAG,KAAKC,GAAG,OACvC,sBAAMH,GAAG,OAAOC,GAAG,OAAOC,GAAG,KAAKC,GAAG,WCG1BC,GAhBA,SAAC,GAAD,QAAGpC,YAAH,MAAU,GAAV,MAAchG,aAAd,MAAsB,OAAtB,SACb,sBACEsE,MAAO0B,EACPhD,OAAQgD,EACRmB,QAAQ,YACRC,KAAK,OACLC,OAAQrH,EACRsH,YAAY,IANd,UAQE,0BAAUe,OAAO,iBACjB,sBAAMV,EAAE,mFACR,sBAAMK,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OACjC,sBAAMH,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,WCatBG,GAzBG,SAAC,GAAD,QAAGtC,YAAH,MAAU,GAAV,MAAchG,aAAd,MAAsB,OAAtB,SAChB,qBACEsE,MAAO0B,EACPhD,OAAgB,GAAPgD,EAAa,GACtBmB,QAAQ,YACRC,KAAK,OACLC,OAAO,OACPC,YAAY,IANd,SAQE,mBAAGiB,UAAU,uCAAb,SACE,mBAAGA,UAAU,qCAAb,SACE,mBAAGA,UAAU,mCAAb,SACE,oBAAGA,UAAU,gCAAb,UACE,yBAASF,OAAO,wBAChB,sBACEV,EAAE,2rBACFP,KAAMpH,gBCmBLwI,GAnCD,SAAC,GAAD,QAAGxC,YAAH,MAAU,GAAV,MAAchG,aAAd,MAAsB,OAAtB,SACZ,qBACEsE,MAAO0B,EACPhD,OAAQgD,EACRoB,KAAMpH,EACNmH,QAAQ,sBAJV,SAME,4BACE,4BACE,8BACE,sBACEQ,EAAE,y+BAUJ,sBACEA,EAAE,+HAGJ,sBACEA,EAAE,yICpBCc,GANF,SAAC,GAAD,QAAGzC,YAAH,MAAU,GAAV,MAAchG,aAAd,MAAsB,OAAtB,SACX,qBAAKsE,MAAO0B,EAAMhD,OAAQgD,EAAMmB,QAAQ,cAAcC,KAAMpH,EAA5D,SACE,sBAAM2H,EAAE,4kBCYGe,GAdE,SAAC,GAAD,QAAG1C,YAAH,MAAU,GAAV,MAAchG,aAAd,MAAsB,OAAtB,SACf,sBACEsE,MAAO0B,EACPhD,OAAQgD,EACRmB,QAAQ,YACRC,KAAK,OACLC,OAAQrH,EACRsH,YAAY,IANd,UAQE,wBAAQO,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAC1B,sBAAMJ,EAAE,uuBCJGgB,GANF,SAAC,GAAD,QAAG3C,YAAH,MAAU,GAAV,MAAchG,aAAd,MAAsB,OAAtB,SACX,qBAAKsE,MAAO0B,EAAMhD,OAAQgD,EAAMmB,QAAQ,cAAcC,KAAMpH,EAA5D,SACE,sBAAM2H,EAAE,gsBCcGiB,GAhBA,SAAC,GAAD,QAAG5C,YAAH,MAAU,GAAV,MAAchG,aAAd,MAAsB,OAAtB,SACb,sBACEsE,MAAO0B,EACPhD,OAAQgD,EACRmB,QAAQ,YACRC,KAAK,OACLC,OAAQrH,EACRsH,YAAY,IANd,UAQE,wBAAQO,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAC1B,sBAAMC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QAAQC,GAAG,UACpC,sBAAMH,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,OAChC,sBAAMH,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,WCGrBU,GAfC,SAAC,GAAD,QAAG7C,YAAH,MAAU,GAAV,MAAchG,aAAd,MAAsB,OAAtB,SACd,sBACEsE,MAAO0B,EACPhD,OAAQgD,EACRmB,QAAQ,YACRC,KAAK,OACLC,OAAQrH,EACRsH,YAAY,IANd,UAQE,wBAAQO,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAC1B,sBAAMC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QAAQC,GAAG,UACpC,sBAAMH,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,W,qXCTpC,IAAMW,GAAYnJ,UAAOoJ,KAAV,MAGH,SAAA5I,GAAK,OAAIA,EAAM6F,QACZ,SAAA7F,GAAK,OAAIA,EAAM6F,KAAO,KACrB,SAAA7F,GAAK,OAAIA,EAAM6F,KAAO,KACvB,SAAA7F,GAAK,OAAIA,EAAM6F,KAAO,KAMX,SAAA7F,GAAK,OAAIA,EAAM6F,KAAO,KAOjCgD,GAJH,SAAC,GAAD,IAAG5I,EAAH,EAAGA,SAAH,IAAa4F,YAAb,MAAoB,GAApB,SACV,cAAC,GAAD,CAAWA,KAAMA,EAAjB,SAAwB5F,K,2KClB1B,IAQe6I,GARkBtJ,UAAOC,IAAV,M,0JCA9B,IAOesJ,GAPsBvJ,UAAOC,IAAV,MCmBnBuJ,GAA8D,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAWC,EAAb,EAAaA,UAAYC,EAAzB,EAAyBA,WAAaC,EAAtC,EAAsCA,cAAgBC,EAAtD,EAAsDA,QAAUC,EAAhE,EAAgEA,OAASC,EAAzE,EAAyEA,QAAzE,OAC3E,eAAC,QAAD,CAAMzJ,GAAG,YAAT,UACE,eAAC,QAAD,CAAMgC,QAASsH,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,YAKE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,sBAIJ,eAAC,QAAD,CAAMtH,QAASuH,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,MAKE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,sBAIJ,eAAC,QAAD,CAAMvH,QAASmH,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,OAKE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,sBAIJ,eAAC,QAAD,CAAMnH,QAASoH,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,QAKE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,sBAIJ,eAAC,QAAD,CAAMpH,QAASqH,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,SAKE,cAAC,GAAD,UACE,cAAC,GAAD,0BAIJ,cAAC,aAAD,IAEA,eAAC,QAAD,CAAMrH,QAASwH,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,aAOA,eAAC,QAAD,CAAMxH,QAASyH,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,cAOA,cAAC,aAAD,IAEA,eAAC,QAAD,CAAMzH,QAASoH,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,OAKE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,sBAIJ,eAAC,QAAD,CAAMpH,QAASoH,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,OAKE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,oBACA,cAAC,GAAD,sBAIJ,cAAC,aAAD,IAEA,eAAC,QAAD,WAGE,cAAC,GAAD,UACE,cAAC,GAAD,MAJJ,yBAOE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,0BCrHKM,GAA0D,SAAC,GAAD,IAAEF,EAAF,EAAEA,OAASC,EAAX,EAAWA,QAChFL,EADqE,EACrEA,UAAYO,EADyD,EACzDA,SAAWC,EAD8C,EAC9CA,SAD8C,OAErE,eAAC,QAAD,CAAM5J,GAAG,UAAT,UACE,eAAC,QAAD,CAAMgC,QAASoH,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,QAKE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,sBAIJ,cAAC,aAAD,IAEA,eAAC,QAAD,CAAMpH,QAASwH,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,aAMA,eAAC,QAAD,CAAMxH,QAASyH,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,cAOA,cAAC,aAAD,IAEA,eAAC,QAAD,CAAMzH,QAAS4H,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,OAKE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,sBAIJ,eAAC,QAAD,CAAM5H,QAAS2H,EAAf,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,OAKE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,oBACA,cAAC,GAAD,0BCpDKE,I,OAAsD,SAAC,GAAuF,IAAtFV,EAAqF,EAArFA,SAAWE,EAA0E,EAA1EA,WAAaC,EAA6D,EAA7DA,cAAgBC,EAA6C,EAA7CA,QAAUH,EAAmC,EAAnCA,UAAYI,EAAuB,EAAvBA,OAASC,EAAc,EAAdA,QAE1I,OACE,qCACA,cAAC,GAAD,CAAqBL,UAAWA,EAAWI,OAAQA,EAAQC,QAASA,IACpE,cAAC,GAAD,CAAuBN,SAAUA,EAAUC,UAAWA,EACtDC,WAAYA,EAAYC,cAAeA,EAAeC,QAASA,EAASC,OAAQA,EAAQC,QAASA,S,SCThFK,G,kDACnB,WAAYC,GAAgC,IAAD,8BACzC,cAAM,CACJC,KAAMC,YAAUC,SAChBC,KAAM,YAAgB,IAAbC,EAAY,EAAZA,MACPC,QAAQC,IAAIC,KAAKC,UAAUJ,IAEvB,EAAKK,OAAOC,WAAWC,YAEvB,EAAKC,aAAaR,KACpBA,EAAMS,iBACN,EAAKC,oBAUbA,aAAe,WACbT,QAAQC,IAAI,UACK,EAAKG,OACnBC,WACAK,sBACAC,QAAO,SAAAC,GAAK,OAAKA,EAAMN,cAIjBO,SAAQ,SAAAD,GAAK,OAAIA,EAAME,YAEhC,EAAKV,OAAOW,iBA/B6B,E,yDAgB9BhB,GACX,OAAOA,EAAMiB,SAA0B,WAAfjB,EAAM1G,S,GAlBQ4H,U,8CC0B7BC,GAAb,kDAOC,aAAgD,IAAD,EAAnCC,EAAmC,uDAApB,GAAIzL,EAAgB,kEACvB,kBAAZyL,IACVA,EAAU,CACTC,KAAMD,EACNzL,MAAOA,KAGT,4BACCiK,KAAM,UACNyB,KAAM,WACN1L,MAAO,kBACJyL,KAjBKE,aAMqC,IALrCC,cAKqC,IAJrCC,kBAIqC,EAa9C,EAAKD,SAAW,GAChB,EAAKD,QAAU,GACf,EAAKE,aAAe,GAf0B,EAPhD,8DAyB+B,OAAO,IAzBtC,8BA2BSC,EAAiBC,GAExBzB,QAAQC,IAAI,iBAAmBrK,KAAK8L,SACpCD,EAAMJ,QAAU,GAChBI,EAAMH,SAAW,GAEjB,iEAAcE,EAAaC,GAE3B,IADA,IACSE,EAAI,EAAGA,EAAIF,EAAMJ,QAAQO,OAAQD,IACzCF,EAAMF,aAAaI,GAAGE,OAASJ,EAAMJ,QAAQM,GAAGD,UApCnD,sCAwCiB/L,GAEf,IAAImM,EAAUlM,KAAKyL,QAAQU,WAAU,SAAAxM,GAAC,OAAEA,EAAEmM,SAAW/L,KAEjDqM,EAAapM,KAAK2L,aAAaQ,WAAU,SAAAE,GAAC,OAAEA,EAAEJ,QAAUlM,MAE5C,IAAbmM,KAEgB,IAAhBE,GACFpM,KAAK2L,aAAaW,OAAOF,EAAY,GAGtCpM,KAAKuM,YAAYL,MApDnB,iCAuDYM,GACV,oEAAiBA,GAEbA,EAAKC,aAAaC,GACrB1M,KAAKyL,QAAQa,OAAOtM,KAAKyL,QAAQkB,QAAQH,GAAO,GAEhDxM,KAAK0L,SAASY,OAAOtM,KAAK0L,SAASiB,QAAQH,GAAO,KA7DrD,iCAiEYI,GAIV,IAFA,IAAIC,EAAYD,EAAGE,OACfA,EAAS9M,KAAK+M,cACThB,EAAI,EAAGA,EAAIc,EAAUb,OAAQD,IAClCe,EAAOf,GAAGiB,YAAcH,EAAUd,GAAGiB,YACvChN,KAAKyL,QAAQM,GAAGU,aAAa1I,MAAQ8I,EAAUd,GAAGiB,WAEhDF,EAAOf,GAAGkB,YAAcJ,EAAUd,GAAGkB,YACvCjN,KAAK0L,SAASK,GAAGU,aAAa1I,MAAQ8I,EAAUd,GAAGkB,aA1EvD,+BAiFUC,GAER,IAAIC,EAASnN,KAAKoN,UAAUF,EAAMF,WAC9BK,EAAUrN,KAAKsN,WAAWJ,EAAMD,WAEhCM,EAAoB,CACvBtB,OAASkB,EAAOrB,QAChB0B,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,KAAO,GACPC,QAAU,IAKX,OAFA5N,KAAK2L,aAAakC,KAAKN,GAEhB,CAACJ,EAASE,KAjGnB,kCAoGatB,GAEX/L,KAAK8N,WAAW9N,KAAKyL,QAAQM,IAC7B/L,KAAK8N,WAAW9N,KAAK0L,SAASK,MAvGhC,oCAgHE/L,KAAK+N,SAJe,CACnBf,UAAY,OACZC,UAAY,UA9Gf,6CAoHwBC,GACtB,IAAId,EAAapM,KAAK2L,aAAaQ,WAAU,SAAAE,GAAC,OAAEA,EAAEJ,SAAWiB,EAAMc,QACnE,IAAmB,IAAhB5B,QAEsB6B,IAAtBf,EAAMgB,YAAT,CACAlO,KAAK2L,aAAaS,GAAcc,EAAMgB,YACtC9D,QAAQC,IAAI6C,EAAMgB,aAGlB,IAAIA,EAAchB,EAAMgB,YACxB,QAAkBD,GAAfC,OAEsCD,IAArBC,EAAYP,MAA2BO,EAAYP,UAC3BM,IAAxBC,EAAYN,SAA8BM,EAAYN,aACvCK,IAAff,EAAMc,MAA2Bd,EAAMc,QAlI7D,qCAuIgBG,EAA8BC,EAAwBC,GACpEC,MAAM,WACN,IAAIC,EAAaJ,EAAWK,cAAcJ,GACtCK,EAAazO,KAAKwO,cAAcH,GACpC,GAAkB,OAAfI,GACe,OAAfF,EAAH,CACAD,MAAM,iBACNlE,QAAQC,IAAI,cAAgBoE,EAAWhC,aAAa1I,MAAQ,gBAAkBwK,EAAW9B,aAAa1I,OACtGqG,QAAQC,IAAIoE,EAAWhC,aAAaC,IACpCtC,QAAQC,IAAIkE,EAAW9B,aAAaC,IACpC,IAAIgC,EAAQH,EAAWG,KAAKD,GAI5B,OAFAF,EAAWI,iBACXF,EAAWE,iBACJD,KArJT,oCAyJE,IAAIE,EAAU5O,KAAKyL,QAEfoD,GADW7O,KAAK0L,SACD,IACnBtB,QAAQC,IAAI,sBAAuBuE,EAAQ5C,QAE3C5B,QAAQC,IAAIrK,KAAK2L,cAEjB,IAAK,IAAII,EAAI,EAAGA,EAAI6C,EAAQ5C,OAAQD,IAAK,CACxC3B,QAAQC,IAAI,eAAiB0B,GAE7B,IAAIM,EAAIrM,KAAK8O,SAAS/C,GACtB3B,QAAQC,IAAIgC,GACZwC,EAAGhB,KAAKxB,GAET,OAAOwC,IAvKT,+BA0KUE,GAER,IAAI7B,EAAQlN,KAAKyL,QAAQsD,GAAOtC,aAAa1I,MACzCgG,EAAO/J,KAAK0L,SAASqD,GAAOtC,aAAa1I,MACzChE,EAAKC,KAAKyL,QAAQsD,GAAOjD,QAC7B1B,QAAQC,IAAI,cAAgBtK,GAE5B,IAAIiP,EAAmBhP,KAAK2L,aAAaQ,WAAU,SAAAE,GAAC,OAAEA,EAAEJ,SAAWlM,KAInE,GAFAqK,QAAQC,IAAI,oBAAsB2E,IAET,IAAtBA,EAAwB,CAQ1B,MAPgB,CACfhB,KAAO,GACRiB,MAAQ,GACRjC,UAAY,GACZC,UAAY,IAMb,IAAIiB,EAAclO,KAAK2L,aAAaqD,GAepC,OAdA5E,QAAQC,IAAI,gBAAkB6C,EAAQ,SAAWgB,EAAYT,GAAK,SAAWS,EAAYR,SAE5EO,IAAVf,IAAqBA,EAAQ,SACpBe,IAATlE,IAAoBA,EAAO,IAGb,CAChBiE,KAAOhO,KAAKyL,QAAQsD,GAAOjD,QAC3BmD,MAAQjP,KAAK0L,SAASqD,GAAOjD,QAC7BkB,UAAYE,EACZD,UAAYlD,EACZmE,YAAcA,KA5MjB,iCAkNY1B,EAAwBuC,MAlNpC,8BAsNqCvC,GAcnC,OAXA,iEAAcA,GAEVA,EAAKC,aAAaC,IACe,IAAhC1M,KAAKyL,QAAQkB,QAAQH,IACxBxM,KAAKyL,QAAQoC,KAAKrB,IAGkB,IAAjCxM,KAAK0L,SAASiB,QAAQH,IACzBxM,KAAK0L,SAASmC,KAAKrB,GAGdA,IApOT,gCAuOWzI,GAAgD,IAAjCmL,IAAgC,yDACpDC,EAAMC,eACJzP,EAAI,IAAI0P,mBAAiB,CAC9B3C,IAAI,EACJlB,KAAM2D,EACNpL,MAAOA,EACPuL,UAAWC,sBAAmBnM,OAK/B,OAHK8L,GACJlP,KAAKyL,QAAQa,OAAO,EAAG,EAAG3M,GAEpBK,KAAKwP,QAAQ7P,KAlPtB,iCAqPYoE,GAAgD,IAAjCmL,IAAgC,yDACrDC,EAAMC,eACJzP,EAAI,IAAI0P,mBAAiB,CAC9B3C,IAAI,EACJlB,KAAM2D,EACNpL,MAAOA,EACPuL,UAAWC,sBAAmBE,QAK/B,OAHKP,GACJlP,KAAK0L,SAASY,OAAO,EAAG,EAAG3M,GAErBK,KAAKwP,QAAQ7P,KAhQtB,kCAsQawK,GAAgC,IAAD,OAC1C,qEAAkBA,GAElBnK,KAAKuL,QAAQC,KAAOrB,EAAMuF,KAAKlE,KAC/BxL,KAAKuL,QAAQzL,MAAQqK,EAAMuF,KAAK5P,MAChCE,KAAK2L,aAAexB,EAAMuF,KAAK5C,OAC/B1C,QAAQC,IAAIrK,KAAK2L,cACjB3L,KAAKyL,QAAUkE,OAAMxF,EAAMuF,KAAKE,cAAc,SAAC7P,GAC9C,OAAO,EAAKyO,cAAczO,MAE3BC,KAAK0L,SAAWiE,OAAMxF,EAAMuF,KAAKG,eAAe,SAAC9P,GAChD,OAAO,EAAKyO,cAAczO,MAE3BqK,QAAQC,IAAI,+BAEZD,QAAQC,IAAI,oBArRd,uFA6RgByF,GACd1F,QAAQC,IAAI,gBACZD,QAAQC,IAAIyF,KA/Rd,kCAkSmB,IAAD,OAEhB1F,QAAQC,IAAI,2BAEZ,IAAIyC,EAAS,GAEb1C,QAAQC,IAAIrK,KAAK2L,cAEjB,IARgB,eAQPI,GAER,IAAIiD,EAAmB,EAAKrD,aAAaQ,WAAU,SAAAE,GAAC,OAAEA,EAAEJ,SAAW,EAAKR,QAAQM,GAAGD,WAEnF,GADA1B,QAAQC,IAAI,mBAAqB2E,IACR,IAAtBA,EAAyB,iBAC5BlC,EAAOe,KAAK,CACX5B,OAAS,EAAKR,QAAQM,GAAGD,QACzBkB,UAAY,EAAKvB,QAAQM,GAAGU,aAAa1I,MACzCkJ,UAAY,EAAKvB,SAASK,GAAGU,aAAa1I,MAC1CyJ,GAAK,EAAK7B,aAAaqD,GAAkBxB,GACzCC,GAAK,EAAK9B,aAAaqD,GAAkBvB,MAVlC1B,EAAI,EAAGA,EAAI/L,KAAKyL,QAAQO,OAAQD,IAAK,EAArCA,GAgBT,OAAO,sGAENP,KAAMxL,KAAKuL,QAAQC,KACnB1L,MAAOE,KAAKuL,QAAQzL,MACpBgN,OAASA,EACT8C,aAAcD,OAAM3P,KAAKyL,SAAS,SAACe,GAClC,OAAOA,EAAKV,WAEb+D,cAAeF,OAAM3P,KAAK0L,UAAU,SAACc,GACpC,OAAOA,EAAKV,eAnUhB,+BA2UE,IAHc,IAAD,OAETgB,EAAS,GAFA,WAGJf,GACR,IAAIiD,EAAmB,EAAKrD,aAAaQ,WAAU,SAAAE,GAAC,OAAEA,EAAEJ,SAAW,EAAKR,QAAQM,GAAGD,WACnF,IAAyB,IAAtBkD,EAAyB,iBAC5B,IAAI9B,EAAQ,CACXF,UAAY,EAAKvB,QAAQM,GAAGU,aAAa1I,MACzCkJ,UAAY,EAAKvB,SAASK,GAAGU,aAAa1I,MAC1CmK,YAAc,EAAKvC,aAAaqD,IAEjClC,EAAOe,KAAKX,IARJnB,EAAI,EAAGA,EAAI/L,KAAKyL,QAAQO,OAAQD,IAAK,EAArCA,GAeT,MALS,CACRP,KAAOxL,KAAKuL,QAAQC,KACpB1L,MAAQE,KAAKuL,QAAQzL,MACrBgN,OAASA,KAxVZ,mCA8VE,OAAO9M,KAAKyL,UA9Vd,oCAkWE,OAAOzL,KAAK0L,aAlWd,GAAqCqE,cCvBhBC,G,kDACnB,WAAYlG,GAAgC,IAAD,8BACzC,cAAM,CACJC,KAAMC,YAAUC,SAChBC,KAAM,YAAgB,IAAbC,EAAY,EAAZA,MACFL,IACD,EAAKU,OAAOC,WAAWC,YAEvB,EAAKC,aAAaR,KACpBA,EAAMS,iBACN,EAAKC,qBAUbA,aAAe,WAEb,IAAIoF,EAAS,IAAI3E,GAAgB,CACnCE,KAAM,UACN1L,MAAO,mBAELmQ,EAAMlC,SAAS,CAACf,UAAY,KAAOC,UAAY,QAE/CgD,EAAMC,YAAY,IAAK,KAEX,EAAK1F,OAAOC,WAElB0F,OAAOF,GAIb,EAAKzF,OAAOW,iBAnC6B,E,yDAe9BhB,GACX,OAAOA,EAAMiB,SAA0B,SAAfjB,EAAM1G,S,GAjBS4H,UCDtB+E,G,kDACnB,WAAYtG,GAAgC,IAAD,8BACzC,cAAM,CACJC,KAAMC,YAAUC,SAChBC,KAAM,YAAgB,IAAbC,EAAY,EAAZA,MACFL,IACD,EAAKU,OAAOC,WAAWC,YAEvB,EAAKC,aAAaR,KACpBA,EAAMS,iBACN,EAAKC,qBAUbA,aAAe,WACb,IAAMG,EAAQ,EAAKR,OAAOC,WAEpB4F,EAAuBrF,EAC1BF,sBACAC,QAAO,SAAAuF,GAAM,OAAIA,aAAkBC,eACnCxF,QAAO,SAAAuF,GAAM,OAAKA,EAAO5F,cACzB8F,KAAI,SAAAF,GAAM,OAAIA,EAAOzE,WAExBb,EAAMyF,iBAENJ,EAAOpF,SAAQ,SAAAY,GAETA,aAAiBkE,cACnB/E,EAAM0F,QAAQ7E,GACdA,EAAM8E,aAAY,OAQtB,EAAKnG,OAAOW,iBA1C6B,E,yDAe9BhB,GACX,OAAOA,EAAMiB,SAA0B,SAAfjB,EAAM1G,S,GAjBW4H,UCExBuF,G,kDACnB,WAAY9G,GAAgC,IAAD,8BACzC,cAAM,CACJC,KAAMC,YAAUC,SAChBC,KAAM,YAAgB,IAAbC,EAAY,EAAZA,MACP,GAAKL,IACD,EAAKU,OAAOC,WAAWC,YAEvB,EAAKC,aAAaR,GAAQ,CAC5BA,EAAMS,iBAEN,IAAMvF,EAAU8E,EACD,SAAX9E,EAAE5B,MAAiB,EAAKoN,YACb,SAAXxL,EAAE5B,MAAiB,EAAKqN,aACb,SAAXzL,EAAE5B,MAAiB,EAAKsN,mBAWpCC,sBAAwB,kBACtB,EAAKxG,OACFC,WACAK,sBACAC,QAAO,SAAAuF,GAAM,OAAIA,aAAkBhF,MACnCP,QAAO,SAAAuF,GAAM,OAAKA,EAAO5F,eA7Ba,E,yDAmB9BP,GACP,OAAOA,EAAMiB,UAA2B,SAAfjB,EAAM1G,MAAkC,SAAf0G,EAAM1G,MACzC,SAAf0G,EAAM1G,Q,kCAYV,IAAIwN,EAAcjR,KAAKgR,wBAEjBE,EADUD,EAAY,GAAGpF,QACPsF,YAExBC,aAAaC,QAAQ,YAAa/G,KAAKC,UAAU2G,IAEjDD,EAAYhG,SAAQ,SAAAD,GAAK,OAAIA,EAAME,YAEnClL,KAAKwK,OAAOW,kB,mCAMZ,IAEM+F,EAFYlR,KAAKgR,wBACK,GAAGnF,QACPsF,YAGxB/G,QAAQC,IAAI6G,GAEZE,aAAaC,QAAQ,YAAa/G,KAAKC,UAAU2G,M,gCAGzCnR,GACR,OAAO,IAAIuR,SAAmB,SAACC,EAASC,GAEtCD,EADS,IAAIjG,S,oCAUf,IAAImG,EAAeL,aAAaM,QAAQ,aAErB,MAAhBD,IAAsBA,EAAe,IAExC,IAAME,EAAYrH,KAAKsH,MAAMH,GAC7B,GAAKE,EAAL,CAEAvH,QAAQC,IAAIsH,GAGZ,IAAIE,EAAa,IAAIvG,GAEjBwG,EAAwB,CAC1BpC,KAAOiC,EACPnH,OAASxK,KAAKwK,OACduH,cAAe,cAGjBF,EAAWG,YAAYF,GAGvBD,EAAW3B,YAAY,IAAK,KAE5B9F,QAAQC,IAAIwH,GACA7R,KAAKwK,OAAOC,WAClB0F,OAAO0B,GAKb7R,KAAKwK,OAAOW,qB,GApG6BE,U,mhBCIrC,IAAM4G,GAAYxS,UAAOC,IAAV,MASTwS,GAAQzS,UAAOC,IAAV,MAKLyS,GAAO1S,UAAOC,IAAV,MAUL0S,GAAb,uKAEE,IAAM5F,EACL,cAAC,cAAD,CAAYhC,OAAQxK,KAAKC,MAAMuK,OAAQgC,KAAMxM,KAAKC,MAAMuM,KAAxD,SACC,cAAC2F,GAAD,MAGIpO,EAAQ,cAACmO,GAAD,UAAQlS,KAAKC,MAAMuM,KAAKC,aAAa1I,QAEnD,OACC,cAAC,gBAAD,CAAchE,GAAG,WAAWsS,UAAU,EAAtC,SACC,eAACJ,GAAD,WACCjS,KAAKC,MAAMuM,KAAKC,aAAaC,GAAKF,EAAOzI,EACzC/D,KAAKC,MAAMuM,KAAKC,aAAaC,GAAK3I,EAAQyI,WAb/C,GAAqCrM,a,2gCCzB7B,IAAMmS,GAAO7S,UAAOC,IAAV,MAiBJ6S,GAAQ9S,UAAOC,IAAV,MAQL8S,GAAY/S,UAAOC,IAAV,MAMT+S,GAAQhT,UAAOC,IAAV,MAOLgT,GAAiBjT,UAAOC,IAAV,MAwBfiT,GAAb,4MA+BCC,aAAe,SAACpG,GAEf,OAAO,cAAC,GAAD,CAAiBhC,OAAQ,EAAKvK,MAAMuK,OAAQgC,KAAMA,GAAWA,EAAKV,UAjC3E,yDAGe3B,GACbnK,KAAKC,MAAMuK,OAAOqI,oBAAoBC,WAAW,CAC/C3I,MAAM,6BACJA,GADG,IAEN4I,IAAK,GACLnI,eAAgB,aACToI,gBAAiB,mBAT3B,sCAcmBxI,GAEjBxK,KAAK8S,WADG,CAAE/I,KAAM,UAAWqB,SAAS,EAAM3H,KAAM,aAflD,sCAmBiB+G,GACfJ,QAAQC,IAAI,qBACC4D,GAAVzD,EAEFA,EAAOyI,UAAU,GAAK,iBAEtB7I,QAAQC,IAAI,UAzBf,+BAsCW,IAAD,OACR,OACC,eAACiI,GAAD,CACCY,yBAAwBlT,KAAKC,MAAMkT,KAAK1G,aAAajB,KACrD4H,SAAUpT,KAAKC,MAAMkT,KAAKE,aAC1BzT,WAAYI,KAAKC,MAAMkT,KAAK1G,aAAa3M,MAAOwT,cAAe,kBAAM,EAAKC,gBAAgB,EAAKtT,MAAMuK,SAHtG,UAIC,eAAC+H,GAAD,WACC,cAACC,GAAD,UAAYxS,KAAKC,MAAMkT,KAAK1G,aAAajB,OACzC,cAAC3F,GAAA,EAAD,CAAa9D,QAAS,kBAAK,EAAKyR,gBAAgB,EAAKvT,MAAMuK,SAAS1K,MAAM,UAAUgG,KAAK,QAAzF,SACS,cAAC,KAAD,SAIV,eAAC2M,GAAD,WACC,cAACC,GAAD,UAAiB/C,OAAM3P,KAAKC,MAAMkT,KAAKM,aAAczT,KAAK4S,gBAC1D,cAACF,GAAD,UAAiB/C,OAAM3P,KAAKC,MAAMkT,KAAKO,cAAe1T,KAAK4S,0BArDhE,GAAsCzS,aCrEzBwT,GAAb,kDAEC,aAAe,uCACR,WAHR,gEAOqBxJ,GAEnB,OACC,cAAC,gBAAD,CAAcpK,GAAG,YAAYsS,UAAU,EAAO3C,KAAMvF,EAAMa,MAA1D,SACC,cAAC,GAAD,CAAkBR,OAAQxK,KAAKwK,OAAQ2I,KAAMhJ,EAAMa,YAXvD,oCAgBe4I,GACb,OAAO,IAAItI,GAAgB,SAAU,sBAjBvC,GAAuCuI,wBCAvC,SAASC,KAEL,IAAIjF,EAAKkF,IAAa,CAACC,kCAAkC,IAGzDnF,EAAGoF,mBAAmBC,gBAAgB,IAAIP,IAG1C,IAAM3I,EAAQ,IAAImJ,eAGdlE,EAAS,IAAI3E,GAAgB,CACnCE,KAAM,UACN1L,MAAO,mBAGemQ,EAAMlC,SAAS,CAACf,UAAY,KAAOC,UAAY,QACnEgD,EAAMlC,SAAS,CAACf,UAAY,cAAgBC,UAAY,YACxCgD,EAAMlC,SAAS,CAACf,UAAY,eAAiBC,UAAY,QAkDzE,OAjDAgD,EAAMlC,SAAS,CAACf,UAAY,kBAAoBC,UAAY,QAE5DgD,EAAMC,YAAY,IAAK,KAKRlF,EAAMmF,OAAOF,GAIrBhF,SAAQ,SAAAmJ,GACXA,EAAEC,iBAAiB,CAExBC,iBAAkB,kBA0CJvU,EA1CkBqU,EAAEtI,aA+CjC1B,QAAQC,IAAItK,GALhB,IAAiBA,GAzCLuT,cAAgB,kBAAgBc,EAAEtI,aAsC1CwC,MAAM,gBAPNO,EAAG0F,SAASvJ,GAGL6D,EAgBIiF,KAAf,ICxDKU,GCjBQC,GAAb,WAKE,aAAe,IAAD,gCAHdC,YAGc,OAFdlK,YAEc,OA0KdmK,aAAe,WACb,EAAK7B,WAAW,CAAE/I,KAAM,UAAWqB,SAAS,EAAM3H,KAAM,UA3K5C,KAmLdmR,kBAAoB,WAClB,EAAK9B,WAAW,CAAE/I,KAAM,UAAWqB,SAAS,EAAM3H,KAAM,UApL5C,KAuLdoR,YAAc,kBACZ,EAAK/B,WAAW,CAAE/I,KAAM,UAAWqB,SAAS,EAAM3H,KAAM,UAxL5C,KA2LdqR,cAAgB,kBACd,EAAKhC,WAAW,CAAE/I,KAAM,UAAWqB,SAAS,EAAM3H,KAAM,UA5L5C,KA8LdsR,eAAiB,kBACf,EAAKjC,WAAW,CAAE/I,KAAM,UAAWqB,SAAS,EAAM3H,KAAM,YA/L5C,KAiMduR,KAAO,kBACL,EAAKlC,WAAW,CAAE/I,KAAM,UAAWqB,SAAS,EAAM3H,KAAM,UAjMxDzD,KAAK0U,QAAS,EACd1U,KAAKwK,OAASsJ,KAEd9T,KAAKiV,cAEL7K,QAAQC,IAAIrK,KAAKkV,YAAYzK,WAAW0K,gBAExC,IAAIC,EAAQpV,KAAKkV,YAAYzK,WAAW4K,WAE3BrV,KAAKkV,YAAYzK,WAAW6K,YAEzClL,QAAQC,IAAI+K,GAjBhB,0DAgCiB,IAAD,OAGY,CACtB,IAAIvL,IAAa,GACjB,IAAImG,IAAc,GAClB,IAAII,IAAgB,GACpB,IAAIQ,IAAgB,IAId3F,SAAQ,SAAAI,GAAM,OACpB,EAAKb,OACFqI,oBACA0C,eAAelK,QA9CxB,iCAmDalB,GACTnK,KAAKwK,OAAOqI,oBAAoBC,WAAW,CACzC3I,MAAM,6BACDA,GADA,IAEH4I,IAAK,GACLnI,eAAgB,aAChBoI,gBAAiB,mBAzDzB,oCAgEI,IAAIwC,EAAWxV,KAAKwK,OACjBC,WACAK,sBACAC,QAAO,SAAAC,GAAK,OAAKA,EAAMN,cAE1B,GAAuB,GAAnB8K,EAASxJ,OAAb,CAEA,IAAImH,EAAOqC,EAAS,GAEpB,GAAIrC,aAAgB7H,MAAoB,EAIxC,OAFS6H,KA3Eb,iCAiFInT,KAAKyV,aAjFT,iCAqFI,IAAIC,EAAQ1V,KAAKkV,YAAYzK,WAAWkL,WACxCrH,MAAMoH,EAAM,GAAGjJ,aAAajB,MAC5B,IAAIoK,EAAaF,EAAM,GAAGhC,cAAc,GACpCnF,EAAamH,EAAM,GAAGjC,aAAa,GAGnC/E,EAAOkH,EAAWlH,KAAKH,GAE3BA,EAAWI,iBACXiH,EAAWjH,iBAEX3O,KAAKkV,YAAYzK,WAAW0F,OAAOzB,GACnC1O,KAAKkV,YAAY/J,kBAjGrB,qCAoGiB9F,GACb,IAAI8N,EAAOnT,KAAK6V,mBACJ5H,GAARkF,IACJA,EAAK1G,aAAajB,KAAOnG,EACzBrF,KAAKkV,YAAY/J,mBAxGrB,gCA2GY2K,EACRC,EAAyBC,GACzB,IAAI7C,EAAOnT,KAAK6V,cAChB,QAAY5H,GAARkF,EAAJ,CACA,IAAIhF,EAAanO,KAAKwK,OAAOC,WAAWwL,QAAQH,GAC5CpH,EAAOyE,EAAK+C,eAAe/H,EAAY4H,EAAiBC,QAChD/H,GAARS,IACJ1O,KAAKwK,OAAOC,WAAW0F,OAAOzB,GAC9B1O,KAAKwK,OAAOW,oBAnHhB,qCAsHiBgI,GACbnT,KAAKwK,OAAOW,kBAvHhB,iCA0HayB,GACT,IAAIuG,EAAOnT,KAAK6V,mBAEJ5H,GAARkF,IAEJA,EAAKgD,WAAWvJ,GAEhB5M,KAAKkV,YAAY/J,mBAjIrB,iCAuII,IAAIgI,EAAOnT,KAAK6V,mBAiBJ5H,GAARkF,IAEJA,EAAKgD,WAjBI,CACPC,UAAW,MACXtJ,OAAQ,CAAC,CACPE,UAAW,KACXC,UAAW,OACV,CACDD,UAAW,YACXC,UAAW,WACV,CACDD,UAAW,KACXC,UAAW,UASfjN,KAAKkV,YAAY/J,mBA5JrB,6BAgKS9I,GACL,IAAI2I,EAAQhL,KAAKkV,YAAYzK,WACzB4L,EAAYrL,EAAMmK,eACtB/K,QAAQC,IAAIgM,GACZrL,EAAMsL,aAAaD,EAAYhU,GAC/BrC,KAAKkV,YAAY/J,kBArKrB,wCAwKoBkB,GAChB,IAAI8G,EAAOnT,KAAK6V,mBACJ5H,GAARkF,GACJA,EAAKoD,uBAAuBlK,KA3KhC,gCAqLIrM,KAAK8S,WAAW,CAAE/I,KAAM,UAAWqB,SAAS,EAAM3H,KAAM,WArL5D,6BAyMS0G,GACLnK,KAAK8S,WAAW,CACd0D,QAASrM,EAAMqM,QACfC,QAAStM,EAAMsM,QACf1M,KAAM,QACN2M,OAAQ,MA9Md,8BAkNUvM,GACNnK,KAAK8S,WAAW,CACd0D,QAASrM,EAAMqM,QACfC,QAAStM,EAAMsM,QACf1M,KAAM,QACN2M,QAAS,MAvNf,kCA8NI,OAAO1W,KAAKwK,WA9NhB,K,yCCPMpK,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJ8B,SAAU,GAEZqU,UAAY,CACV7V,gBAAkB,UAClB8V,QAAU,EACV9W,MAAQ,QACRW,OAAQ,OACRG,aAAc,EACdiW,SAAW,IAIbnU,WAAY,CACVD,YAAanC,EAAMY,QAAQ,IAE7BqB,MAAO,CACLD,SAAU,QAWFwU,GAAyC,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,SAAWxU,EAAwB,EAAxBA,MAAQyU,EAAgB,EAAhBA,UACrEtV,EAAUtB,KAD2E,EAG/DyE,oBAAS,GAHsD,mBAGpFoS,EAHoF,KAG5EC,EAH4E,OAKzDrS,mBAAS,IALgD,mBAKpFsS,EALoF,KAKzEC,EALyE,KAwB3F,OACE,qBAAKtV,UAAWJ,EAAQlB,KAAxB,SACE,cAAC6W,GAAA,EAAD,CAAQC,SAAS,SAASC,UAAW,EAArC,SACE,eAAC,KAAD,WACE,cAAC1R,GAAA,EAAD,CAAY2R,KAAK,QAAQ1V,UAAWJ,EAAQgB,WAAY5C,MAAM,UAAU2X,aAAW,OAAnF,SACE,cAAC,KAAD,MAEAR,EACD,uBAAO5U,MAAO8U,EAAWnT,SAzBlC,SAAsBqB,GACpB+R,EAAa/R,EAAEC,OAAOjD,QAwBkCqV,OArB1D,WACER,GAAWD,GAEXD,EAAUG,IAkBmErV,UAAWJ,EAAQiV,YAG1F,cAAC3T,EAAA,EAAD,CAAaC,QAAQ,KAAKnB,UAAWJ,EAAQa,MAAOR,QAhB5D,WACEmV,GAAU,GACVE,EAAa7U,IAcP,SACGA,IAGH,cAACsD,GAAA,EAAD,CAAY/F,MAAM,UAAUiC,QAASgV,EAArC,SAA+C,cAAC,KAAD,c,iFC1CnD3W,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoX,YAAa,CACX,eAAkB,WAClB,OAAU,SAAU,SAAY,QAAS,WAAc,aACvD,SAAY,QAAS,UAAa,gCAEpCC,KAAM,CACJhB,QAAS,SAOFiB,GAA6C,SAAC,GAAkD,IAAhDrT,EAA+C,EAA/CA,OAAQsT,EAAuC,EAAvCA,WAAYrT,EAA2B,EAA3BA,QAASsT,EAAkB,EAAlBA,YAGlFrW,EAAUtB,KAH0F,EAKzEyE,mBAASmT,EAAYF,IALoD,mBAKnGG,EALmG,KAKrFC,EALqF,OAOtErT,mBAwBpC,WAGE,IAAIgK,EAAkB,GAYtB,OAXYiJ,EAAW5C,YAAYzK,WAAWkL,WACxC1K,SAAQ,SAAA2B,GACZ,IAAIpB,EAAOoB,EAAGH,aAAajB,UACfyC,GAARzC,IAAmBA,EAAO,IAC9B,IAAI+B,EAAiB,CACnBxN,GAAI6M,EAAGd,QACPsK,UAAW5K,EACXsB,OAAQF,EAAGG,eAEb8B,EAAGhB,KAAKN,MAEHsB,EAvCoCsJ,IAP6D,mBAOnGC,EAPmG,aASxEvT,mBAAS,KAT+D,mBASnGsS,EATmG,KASxFC,EATwF,OAY9EvS,oBAAS,GAZqE,mBAYnGoS,EAZmG,KAY3FC,EAZ2F,OAclDrS,mBAAS,IAdyC,mBAcnGwT,EAdmG,KAc7EC,EAd6E,OAgB9DzT,mBAAS,IAhBqD,mBAgBnG0T,EAhBmG,KAgBnFC,EAhBmF,KAkBpGC,EAAeC,mBAAQ,kBAsI7B,WACE,GAA4B,IAAxBL,EAA4B,MAAO,GACvC,IAAIzL,EAAKwL,EAAWO,MAAK,SAAAC,GAAC,OAAIA,EAAE7Y,KAAOsY,KACvC,YAAUpK,GAANrB,EAAwB,GACrBA,EAAGE,OA1IuB+L,KAAwB,CAACR,IAlB8C,EAoBlExT,oBAAS,GApByD,mBAoBnGiU,EApBmG,KAoBrFC,EApBqF,OAsBpElU,mBAAS,IAtB2D,mBAsBnGmU,EAtBmG,KAsBtFC,EAtBsF,OAwBtEpU,mBAAS,IAxB6D,mBAwBnGqU,EAxBmG,KAwBvFC,EAxBuF,KAkD1G,SAASnB,EAAYF,GACnB,IAAIjJ,EAAgB,CAClB9O,GAAI,GACJqW,UAAW,GACXtJ,OAAQ,IAENqG,EAAO2E,EAAWjC,cAEtB,QAAY5H,GAARkF,EAAmB,OAAOtE,EAE9B,GAAIsE,aAAgB7H,GAAiB,CACnClB,QAAQC,IAAI,8BACZ,IAAI+O,EAAWjG,EACXkG,EAASD,EAAS3M,aAAajB,UACpByC,IAAXoL,IAAsBA,EAAS,IACnCxK,EAAGuH,UAAYiD,EACfxK,EAAG9O,GAAKqZ,EAAStN,QACjB+C,EAAG/B,OAMP,SAAuBqG,GACrB,IAAImG,EAAYnG,EAAKpG,cAGrB,OAFA3C,QAAQC,IAAI,kBACZD,QAAQC,IAAIiP,GACLA,EAVOC,CAAcH,GAG5B,OAAOvK,EAUT,SAAS2K,EAAazZ,EAAYiN,GAChCkK,GAAU,GACVE,EAAapK,GACbiM,EAAelZ,GAGjB,SAAS0Z,IACPvC,GAAU,GAKZ,WACE,IAAIwC,EAAQzB,EAER/L,EAAUwN,EAAM5M,OAAOX,WAAU,SAAAE,GAAC,OAAIA,EAAEW,WAAagM,KAEzD,IAAgB,GAAZ9M,EAAe,OAEnBwN,EAAM5M,OAAOZ,GAASc,UAAYmK,EAEhB,IAAd+B,IAAkBQ,EAAM5M,OAAOZ,GAASe,UAAYiM,GACxDhB,EAASwB,GAET5B,EAAW3B,WAAWuD,GAhBtBvD,GACA8C,EAAe,IAkBjB,SAASU,EAAatU,GACpB+R,EAAa/R,EAAEC,OAAOjD,OAGxB,SAASuX,EAAiBvU,GACxB8T,EAAc9T,EAAEC,OAAOjD,OAoCzB,SAASwX,EAAoBxU,GAC3BiT,EAAwBjT,EAAEC,OAAOjD,OAUnC,SAASyX,EAAoBzU,GAC3B,IAAI0U,EAAkB1U,EAAEC,OAAOjD,MAC3B2X,EAAc/B,EAAanL,OAAO6L,MAAK,SAAAtM,GAAC,OAAIA,EAAEW,WAAagM,KAK/D,GAHAR,EAAkBuB,SAEuB9L,GAAnBgK,EAAalY,GAAmB,QAAwBkO,GAAnBgK,EAAalY,KAClDsY,QAAuCpK,GAAf+L,EAA9C,CACA1L,MAAM,WAEN,IAAI2L,OAAqChM,GAApB+L,EAAYhM,KAAqB,GAAKgM,EAAYhM,KACvE8J,EAAWoC,UAAU7B,EAAsB0B,EAAiBE,IAmC9D,SAASE,EAAe9N,EAAU+N,GAChC,IAAIlM,EAAc7B,EAAE6B,YACpB,YAAmBD,GAAfC,GACF9D,QAAQC,IAAI,0BACL,GAES,MAAd+P,EAA2BlM,EAAYT,GACzB,MAAd2M,EAA2BlM,EAAYR,QAA3C,EAIF,SAAS2M,EAAehV,EAAQiV,EAA6BF,GAE3D,QAAenM,GAAXqM,EAAJ,CAEAlQ,QAAQC,IAAI+P,GAEZ,IAAIG,EAAetC,EAAanL,OAAOX,WAAU,SAAAE,GAAC,OAAIA,EAAE2B,MAAQsM,KAC5D1N,EAAKqL,EACLuC,EAAiB5N,EAAGE,OAAOyN,GAAcrM,iBACvBD,GAAlBuM,IAEc,MAAdJ,IACFI,EAAe/M,IAAM+M,EAAe/M,IAEpB,MAAd2M,IACFI,EAAe9M,IAAM8M,EAAe9M,IAGtCd,EAAGE,OAAOyN,GAAcrM,YAAcsM,EACtCtC,EAAStL,GAETxC,QAAQC,IAAImQ,GACZ1C,EAAW2C,kBAAkB7N,EAAGE,OAAOyN,IACvCxB,GAAiBD,KAGnB,OAxNA3T,qBAAU,WACR+S,EAASF,EAAYF,IACrB1N,QAAQC,IAAI,eACX,CAAC7F,EAAQsU,EAAcf,IAqNnB,cAACxS,GAAA,EAAD,CAAQC,OAAQ,QAASC,KAAMjB,EAAQ3B,MAAO,CAAEuB,MAAO,KAAOsB,QAASjB,EAAvE,SACL,gCACE,cAAC,GAAD,CAAQsS,SAjIZ,gBAEc9I,GADD6J,EAAWjC,gBAEtBiC,EAAW/C,iBACXtQ,MA6H8BlC,MAAO0V,EAAa7B,UAAWY,UAnD/D,SAAsB3R,GACpB,IAAIqU,EAAQzB,EACZyB,EAAMtD,UAAY/Q,EAClB6S,EAASwB,GAET5B,EAAW4C,eAAerV,GAE1B0T,GAAiBD,MA6Cf,cAAC6B,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAUnD,aAAW,eAArB,UACE,cAACoD,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWjZ,UAAWJ,EAAQkW,KAA9B,wBACA,cAACmD,GAAA,EAAD,CAAWjZ,UAAWJ,EAAQkW,KAA9B,uBACA,cAACmD,GAAA,EAAD,CAAWjZ,UAAWJ,EAAQkW,KAA9B,gBACA,cAACmD,GAAA,EAAD,CAAWjZ,UAAWJ,EAAQkW,KAA9B,gBACA,cAACmD,GAAA,EAAD,CAAWjZ,UAAWJ,EAAQkW,KAA9B,yBAGJ,cAACoD,GAAA,EAAD,UACG/C,EAAanL,OAAO0D,KAAI,SAACyK,EAAYlM,GAAb,OACvB,eAAC+L,GAAA,EAAD,CAA8BhZ,UAAWJ,EAAQkW,KAAjD,UACIX,GAAU+B,GAAeiC,EAAIjO,UAC7B,qCACE,cAAC+N,GAAA,EAAD,CAAWG,UAAU,KAAKC,MAAM,MAAMrZ,UAAWJ,EAAQkW,KAAzD,SACE,uBAAOF,OAAQ,kBAAM+B,KACnBzV,SAAU2V,EAActX,MAAO8U,MAEnC,cAAC4D,GAAA,EAAD,CAAWG,UAAU,KAAKC,MAAM,MAAMrZ,UAAWJ,EAAQkW,KAAzD,SACE,yBAAQ5T,SAAU4V,EAAkBvX,MAAO6W,EAA3C,UACE,wBAAQ7W,MAAM,MAAd,sBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,0BAGJ,eAAC0Y,GAAA,EAAD,CAAWG,UAAU,KAAKC,MAAM,MAAMrZ,UAAWJ,EAAQkW,KAAzD,UAEE,wBAAQwD,YAAY,eAAe/Y,MAAOgW,EAAsBrU,SAAU6V,EAA1E,SACGzB,EAAW5H,KAAI,SAAA6K,GAAC,OAAI,wBAAmBhZ,MAAOgZ,EAAEtb,GAA5B,SAAiCsb,EAAEjF,WAAtBiF,EAAEtb,SAGtC,wBAAQqb,YAAY,eAAe/Y,MAAOkW,EAAgBvU,SAAU8V,EAApE,SACGrB,EAAajI,KAAI,SAAAnE,GAAC,OAAI,wBAA0BhK,MAAOgK,EAAE4C,MAAnC,SAA2C5C,EAAEW,WAAhCX,EAAEW,sBAK5C,qCACE,cAAC+N,GAAA,EAAD,CAAWjZ,UAAWJ,EAAQkW,KAAMsD,UAAU,KAAKC,MAAM,MAAMpZ,QAAS,kBAAMyX,EAAayB,EAAIjO,UAAWiO,EAAIjO,YAA9G,SACGiO,EAAIjO,YAGP,cAAC+N,GAAA,EAAD,CAAWjZ,UAAWJ,EAAQkW,KAAMsD,UAAU,KAAKC,MAAM,MAAMpZ,QAAS,kBAAMyX,EAAayB,EAAIjO,UAAWiO,EAAIjO,YAA9G,SACGiO,EAAIhO,eAKX,cAAC8N,GAAA,EAAD,CAAWjZ,UAAWJ,EAAQkW,KAA9B,SACE,uBAAO7N,KAAK,WAAWuR,QAAUnB,EAAec,EAAK,MACnDjX,SAAU,SAACqB,GAAD,OAAOgV,EAAehV,EAAG4V,EAAIjN,KAAM,QAD/C,YACgEiN,EAAIjN,SAEtE,cAAC+M,GAAA,EAAD,UACE,uBAAOhR,KAAK,WAAWuR,QAAUnB,EAAec,EAAK,MACnDjX,SAAU,SAACqB,GAAD,OAAOgV,EAAehV,EAAG4V,EAAIjN,KAAM,WAEjD,cAAC+M,GAAA,EAAD,CAAWjZ,UAAWJ,EAAQkW,KAA9B,SACE,cAAC/R,GAAA,EAAD,CAAY9D,QAAS,kBAtKrC,SAAqBhC,GACnB,QAAUkO,GAANlO,EAAJ,CACA,IAAIoT,EAAO2E,EAAWjC,mBACV5H,GAARkF,IACJA,EAAKoI,gBAAgBxb,GACrBgZ,GAAiBD,GACjBhB,EAAW5C,YAAY/J,kBAgKkBoB,CAAY0O,EAAIjN,OAAOlI,KAAK,QAAvD,SACE,cAAC,KAAD,UAhDSmV,EAAIjO,qBAwD3B,cAACnH,GAAA,EAAD,CAAY/F,MAAM,UAAU2X,aAAW,iBAAiByD,UAAU,OAAOnZ,QAAS,kBAhMtF,WACE,IAAIoR,EAAO2E,EAAWjC,cACtB,QAAY5H,GAARkF,EAAJ,CACAA,EAAKqI,cAEL,IAAI9B,EAAQzB,EACZyB,EAAM5M,OAAOe,KAAK,CAChBb,UAAW,OACXC,UAAW,QAEbiL,EAASwB,GAETX,GAAiBD,GAEjBhB,EAAW5C,YAAY/J,iBAkLmEsQ,IAAxF,SACE,cAAC,KAAD,YC7SOC,GAvDkC,kBAC/C,eAAC,QAAD,CAAM3b,GAAG,WAAT,UACA,eAAC,QAAD,WACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,QAKE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,sBAIJ,cAAC,aAAD,IAEA,eAAC,QAAD,WACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,aAMA,eAAC,QAAD,WACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,cAOA,cAAC,aAAD,IAEA,eAAC,QAAD,WACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,OAKE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,sBAIJ,eAAC,QAAD,WACE,cAAC,GAAD,UACE,cAAC,GAAD,MAFJ,OAKE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,oBACA,cAAC,GAAD,0B,UC5BS4b,G,wKA7BDzO,GAAqD,IAAvC0O,EAAsC,wDACtDC,EAAgB,UAChBhN,EAAE,UAAM3B,EAAMF,UAAZ,YAAyBE,EAAMD,WAErC,OADiB,GAAd2O,IAAqB/M,GAAMgN,GACvBhN,I,qCAGIjC,GAAmB,IAAD,OACzBE,EAAM,GAOV,OANAF,EAAGE,OAAO7B,SAAQ,SAACoB,EAASN,GACxB,IAAI6P,GAAa,EACdhP,EAAGE,OAAOd,OAAO,GAAKD,IAAG6P,GAAa,GACzC9O,GAAU,EAAKgP,UAAUzP,EAAIuP,MAG3B,gBAAN,OAAuBhP,EAAGwJ,UAA1B,kBAA6CtJ,EAA7C,Y,6BAGG4C,GAAqB,IAAD,OAEnBb,EAAE,GAKP,OAJAa,EAAKzE,SAAQ,SAAAxD,GACVoH,GAAM,EAAKkN,eAAetU,GAC1BoH,GAAM,WAEFA,M,qGC3BA3B,GACN,MAAM,K,qCAGKN,GACX,MAAM,K,6BAGH8C,GAEL,MAAO,O,gBNuBR8E,O,mBAAAA,I,qBAAAA,I,0BAAAA,Q,KAkBE,IAAMwH,GAAyB,WAAO,IAAD,EAEnBnX,mBO9CL,CACZoX,GAAK,GACLC,SAAW,GACXC,aAAgB,GAChBC,UAAY,GACZC,aAAe,KPuCqB,gCAIfxX,oBAAS,IAJM,mBAIpCyX,EAJoC,aAMbzX,mBAAS,IAAI4P,KANA,mBAMpC8H,EANoC,aAQC1X,oBAAS,IARV,mBAQpC2X,EARoC,KAQpBC,EARoB,OAUD5X,mBAAS,IAVR,mBAUpC6X,EAVoC,aAYC7X,mBAmEnB,CACvB8X,UAFSvN,eAGTwN,YAAc,UACdC,mBAAqB,GACrBC,cAAgBtI,GAAcuI,QAC9BC,OAASN,EACTO,cAAgB,MArFyB,mBAYpCC,EAZoC,aAcHrY,oBAAS,IAdN,mBAcpCsY,EAdoC,KActBC,EAdsB,OAgBXvY,mBAAS,IAhBE,mBAgB1BwY,GAhB0B,aAkBjBxY,oBAAS,GAlBQ,mBAkBpCoS,EAlBoC,KAkB5BqG,EAlB4B,KAoB3CnY,qBAAU,WACToX,EAAQrH,YAAYb,iBAAiB,CACpCf,cAAe,kBAAMiK,OAKvB,WACaC,KAAQC,IAAI,WAJxBC,KACE,IAkCH,SAAShZ,EAAUiZ,GAClB,IAAIxK,EAAOyK,SAASC,eAAe,aACvB,MAAR1K,GACJ2K,KAAkB3K,GAChB4K,MAAK,SAAUC,IACL,IAAIlZ,OACVmZ,IAAMD,EACV,IAAIE,EAAIN,SAASO,cAAc,KAE/BD,EAAEE,KAAOJ,EACTE,EAAEG,SAAWV,EACbO,EAAEI,WAEFC,OAAM,SAAUC,GAChBpU,QAAQoU,MAAM,8BAA+BA,MAmBhD,SAASjB,IACRD,GAASrG,GAoCV,SAASwH,IACR,IAAIC,EAAOd,SAASC,eAAe,aACnC,GAAIa,GAAQd,SAASe,YAAa,CACjC,IAAIC,EAAMhB,SAASe,YAAY,eAC/BC,EAAIC,UAAU,SAAS,GAAM,GAC7BH,EAAKI,cAAcF,IAgDrB,SAASG,EAAarb,EAAoBsb,GACzC,IAAId,EAAIN,SAASO,cAAc,KAE/BD,EAAEe,aAAa,OAAQ,iCAAmCC,mBAAmBF,IAC7Ed,EAAEe,aAAa,WAAYvb,GAE3Bwa,EAAErb,MAAM8C,QAAU,OAClBiY,SAASuB,KAAKC,YAAYlB,GAE1BA,EAAEI,QAEFV,SAASuB,KAAKE,YAAYnB,GAc3B,SAAS3U,IAAUgT,EAAQ+C,OAAO,IAElC,SAAS9V,IAAW+S,EAAQ+C,QAAQ,IAIpC,OACC,eAAC,IAAMC,SAAP,WAEC,cAAC,EAAD,CAAY3c,SA9Hd,WAAwBwa,GAAgB,MA+HtC,cAAC,EAAD,CAAS9b,SAAUiI,EAClBhI,UAAWiI,EAAShI,UAAWid,EAAchd,SArHhD,WACC8a,EAAQiD,WAoH2Dpe,OAjHpE,WACC,IAAIqe,EAAYlD,EAAQrH,YAAYzK,WAAW0G,YAE3CuO,EAAWpV,KAAKC,UAAUkV,GAG1B5Q,EAAe,CAClB+N,YAAc,QACdC,mBAAqB,SACrBC,cAAgBtI,GAAcuI,QAC9BC,OAAS,GACTC,cAAgBwC,GAGjBpC,EAAYqC,GAEZtV,QAAQC,IAAIoV,GAEZV,EAAa,YAAcW,GAE3BX,EAAalQ,EAAG+N,YAAc,MAAQtS,KAAKC,UAAUsE,KA8FnDxN,OAAQod,IACT,cAAC,GAAD,CACCja,OAAQ2Y,EAAc1Y,QAAS,kBAAM2Y,GAAgB,IAAQxY,WAVhE,SAAgBS,GAAYiJ,MAAMjJ,IAW/BX,UAAWA,EAAWib,UAAWjb,EAAWC,UAjB/C,SAAmBgZ,IATnB,SAAsBA,EAAkBiC,GACvC,IAAIC,EQtPN,SAAqBtD,GACjB,IAAI1N,EAAmB,GAYvB,OAXY0N,EAAQrH,YAAYzK,WAAWkL,WACrC1K,SAAQ,SAAA2B,GACZ,IAAIpB,EAAMoB,EAAGH,aAAajB,UACfyC,GAARzC,IAAmBA,EAAO,IAC7B,IAAI+B,EAAkB,CACpBxN,GAAK6M,EAAGd,QACRsK,UAAY5K,EACZsB,OAASF,EAAGG,eAEd8B,EAAGhB,KAAKN,MAEHsB,ERyOCiR,CAAYvD,GAElBwD,EAAMH,EAAQI,OAAOH,GACzBvR,MAAMyR,GAENhB,EAAapB,EAAWoC,GAGaE,CAAatC,EAAW,IAAIhC,KAiBGjY,SAAUwZ,EAAeN,cAE5F,uBAAO7S,KAAK,OAAOhK,GAAG,YAAY8C,MAAO,CAAE8C,QAAS,QAAU3B,SAtFhE,SAAoBqB,GACnBiJ,MAAM,UACN,IAAI4R,EAAQ7a,EAAEC,OACd8E,QAAQC,IAAIhF,GACZ,IAAI8a,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAACC,GAChB,IAAIvf,EAAYof,EAAOI,OAEvBnW,QAAQC,IAAItJ,GACZ,IAAIyf,EAAS,IAAIrM,eACbsM,EAA6CnW,KAAKsH,MAAM7Q,GAC5Dyf,EAAOE,iBAAiBD,EAAKlE,EAAQ/R,QACvB,MAAVgW,GAIJnb,EAAEC,OAAOjD,MAAQ,KACjBka,EAAQrH,YAAYX,SAASiM,IAJ5BpW,QAAQC,IAAI,eAOd8V,EAAOQ,WAAWT,EAAMU,MAAM,OAmE7B,cAAC,GAAD,CAAUpc,OAAQgY,EAAgBpW,QA7LpB,SAACF,EAAoBC,GAEpCmI,MAAM,WAAapI,EAAWC,IA2LuB1B,QAAS,kBAAMgY,GAAmBD,MACtF,cAAC,GAAD,CAAahY,OAAQyS,EAAQa,WAAYyE,EACzC9X,QAAS8Y,EAAcxF,YAAauE,IAEpC,cAAC,gBAAD,CAAcvc,GAAG,UAAUsS,UAAU,EAArC,SACC,cAAC,EAAD,CAAkBzS,WAAW,UAAUE,MAAM,UAA7C,SACC,cAAC,eAAD,CAAc0K,OAAQ+R,EAAQ/R,OAAQ1I,UAAU,eAIlD,cAAC,GAAD,IAEA,cAAC,GAAD,CAAcoH,SAAUqT,EAAQ5H,aAAcxL,UAAWoT,EAAQzH,cAAe1L,WAAYmT,EAAQxH,eACpG1L,cAAekT,EAAQ3H,kBAAmBtL,QAASiT,EAAQ1H,YAC3DtL,OAAQA,EAAQC,QAASA,QSxR5BqX,IAASC,OACL,cAAC,GAAD,IAEFlD,SAASC,eAAe,W","file":"static/js/main.ba268ad7.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\n//import { useSelector } from 'react-redux'\r\n\r\n\r\n\r\nexport interface DemoCanvasWidgetProps {\r\n\tcolor?: string;\r\n\tbackground?: string;\r\n}\r\n\r\nexport const CT = styled.div<{ color: string; background: string }>`\r\ndisplay : flex;\r\njustify-content: center;\r\nbackground-color: ${(p) => p.background};\r\n\r\n\r\n`;\r\n\r\n\texport const Container = styled.div<{ color: string; background: string }>`\r\n\r\n\t\tbackground-color: ${(p) => p.background};\r\n\t\tbackground-size: 50px 50px;\r\n\t\r\n\t\tbackground-image: linear-gradient(\r\n\t\t\t\t0deg,\r\n\t\t\t\ttransparent 24%,\r\n\t\t\t\t${(p) => p.color} 25%,\r\n\t\t\t\t${(p) => p.color} 26%,\r\n\t\t\t\ttransparent 27%,\r\n\t\t\t\ttransparent 74%,\r\n\t\t\t\t${(p) => p.color} 75%,\r\n\t\t\t\t${(p) => p.color} 76%,\r\n\t\t\t\ttransparent 77%,\r\n\t\t\t\ttransparent\r\n\t\t\t),\r\n\t\t\tlinear-gradient(\r\n\t\t\t\t90deg,\r\n\t\t\t\ttransparent 24%,\r\n\t\t\t\t${(p) => p.color} 25%,\r\n\t\t\t\t${(p) => p.color} 26%,\r\n\t\t\t\ttransparent 27%,\r\n\t\t\t\ttransparent 74%,\r\n\t\t\t\t${(p) => p.color} 75%,\r\n\t\t\t\t${(p) => p.color} 76%,\r\n\t\t\t\ttransparent 77%,\r\n\t\t\t\ttransparent\r\n\t\t\t);\r\n\t`;\r\n\r\n\r\nexport class DemoCanvasWidget extends React.Component<DemoCanvasWidgetProps> {\r\n\t//public schemax  = useSelector(getSchema)\r\n\trender() {\r\n\t\t//console.log(this.schemax)\r\n\t\treturn (\r\n\t\t\t<CT id=\"diagramcv\"\r\n\t\t\t\tbackground={this.props.background || 'rgb(60, 60, 60)'}\r\n\t\t\t\tcolor={this.props.color || 'rgba(255,255,255, 0.05)'}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</CT>\r\n\t\t);\r\n\t}\r\n}","import React , {FunctionComponent} from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Redo from '@material-ui/icons/Redo';\r\nimport Undo from '@material-ui/icons/Undo';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\r\nimport ZoomOutIcon from '@material-ui/icons/ZoomOut';\r\nimport BookmarksIcon from '@material-ui/icons/Bookmarks';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport TableChartIcon from '@material-ui/icons/TableChart';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n\r\n      border: `1px solid ${theme.palette.divider}`,\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: '#F1F1F1',\r\n      color: theme.palette.text.secondary,\r\n      '& svg': {\r\n        margin: theme.spacing(1.0),\r\n      },\r\n      '& hr': {\r\n        margin: theme.spacing(0, 0.5),\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\ninterface ToolbarFunction{\r\n  onZoomIn : () => void,\r\n  onZoomOut : () => void,\r\n  onZoomFit : () => void,\r\n  onSave : () => void,\r\n  onLoad : () => void,\r\n  newTable: () => void\r\n}\r\n\r\nexport const Toolbar: FunctionComponent<ToolbarFunction> = ({onSave , onLoad , onZoomIn , onZoomOut , onZoomFit , newTable }) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Grid container alignItems=\"center\" className={classes.root}>\r\n        \r\n          <TableChartIcon onClick={newTable}></TableChartIcon>\r\n          <LaunchIcon></LaunchIcon>\r\n          <FileCopy></FileCopy>\r\n          <PrintIcon></PrintIcon>\r\n          <Divider orientation=\"vertical\" flexItem />\r\n        <Redo />\r\n        <Undo />\r\n        <Divider orientation=\"vertical\" flexItem />\r\n        <Select>\r\n        <MenuItem value={\"50%\"}>50%</MenuItem>\r\n          <MenuItem value={\"75%\"}>75%</MenuItem>\r\n          <MenuItem value={\"100%\"}>100%</MenuItem>\r\n        </Select>\r\n        <ZoomInIcon onClick={onZoomIn} />\r\n        <ZoomOutIcon  onClick={onZoomOut}/>\r\n        <ZoomOutIcon  onClick={onZoomFit}/>\r\n        <Divider orientation=\"vertical\" flexItem />\r\n        <BookmarksIcon onClick={onSave}></BookmarksIcon>\r\n        <DeleteIcon onClick={onLoad}></DeleteIcon>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","\r\nimport React , {FunctionComponent} from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Button  from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n\r\n    },\r\n    menu : {\r\n        marginRight : 10\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n  }),\r\n);\r\n\r\ninterface ToolbarFunction {\r\n  onExport : () => void,\r\n\r\n}\r\n\r\nexport const AppToolbar: FunctionComponent<ToolbarFunction> = ({onExport }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{height : 30,marginLeft : 20 }}>\r\n \r\n          <Typography variant=\"h6\" color=\"inherit\" >\r\n            Visual Draw\r\n            \r\n          </Typography>\r\n          \r\n      </div>\r\n      <div style={{height : 40}}>\r\n \r\n          \r\n      <Button>File</Button>\r\n          <Button onClick={onExport}>Export</Button>\r\n          <Button> Print</Button>\r\n          <Button>Help</Button>\r\n          <Typography className={classes.title}></Typography>\r\n\r\n          \r\n   \r\n      </div>\r\n  \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import React, { FunctionComponent, useEffect, useState } from 'react'\r\nimport Drawer from '@material-ui/core/Drawer';\r\n\r\nimport styled from '@emotion/styled';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n//mongodb+srv://topster:<password>@cluster0.hbfnd.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\r\n//aaebaYCK6opQGeRA\r\n\r\nexport interface TableEditorProp {\r\n  isOpen: boolean,\r\n  onclose: () => void\r\n}\r\n\r\n\r\nexport const LEFT = styled.div<{}>`\r\nwidth : 30%;\r\nheight: 100vh;\r\ncolor : white;\r\nfont-size : 20px;\r\nbackground-color: #005AA0;\r\n`;\r\n\r\nexport const MenuList = styled.div<{}>`\r\n\r\ncolor : white;\r\n\r\npadding : 15px;\r\nmargin-bottom : 10px;\r\n`;\r\n\r\nexport const Menu = styled.div<{}>`\r\n\r\ncolor : white;\r\nfont-size : 15px;\r\nmargin : 8px;\r\n\r\n`;\r\n\r\n\r\nexport const Right = styled.div<{}>`\r\nwidth : 70%;\r\nbackground-color: \"white\";\r\nmargin : 15px;\r\nfont-size : 20px;\r\n\r\n`;\r\n\r\n\r\n\r\n\r\nexport const SqlExport: FunctionComponent<ExportSqlProp> = ({ code, fileName, isRender, onDownloadClick , onInputChange }) => {\r\n  if (!isRender) {\r\n    return (<div></div>)\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div>Export sql</div>\r\n        <TextField label=\"file name\" variant=\"filled\" value={fileName} onChange={onInputChange} />\r\n        <TextField label=\"Filled\" variant=\"filled\" multiline\r\n          rowsMax={20} style={{ marginTop: 20, width: \"100%\", height: 400 }} value={code}  />\r\n        <Button variant=\"outlined\" color=\"primary\" style={{ marginRight: 10 }}>Copy</Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDownloadClick} >Download</Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport const ImageExport: FunctionComponent<ExportImageProp> = ({ fileName, isRender, imageType, onDownloadClick , onInputChange }) => {\r\n  if (!isRender) {\r\n    return (<div></div>)\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div>Export Image</div>\r\n        <TextField label=\"file name\" variant=\"filled\" value={fileName} onChange={onInputChange} />\r\n\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDownloadClick}  >Download</Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nenum MenuEnum {\r\n  Image,\r\n  MySql,\r\n  SqlServer,\r\n  Postresql,\r\n  Laravel\r\n}\r\n\r\n\r\ninterface ExportProp {\r\n  isOpen: boolean,\r\n  fileName : string,\r\n  onclose: () => void,\r\n  exportPng: (filename : string) => void,\r\n  exportPdf: (filename : string) => void,\r\n  exportSql: (filename : string) => void,\r\n  exportTest : (a : string) => void\r\n}\r\n\r\ninterface ExportEvent {\r\n  onclose: () => void,\r\n  exportPng: () => void,\r\n  exportPdf: (filename : string) => void,\r\n  exportSql: (filename : string) => void\r\n}\r\n\r\ninterface MenuExport {\r\n  isRender: boolean,\r\n  fileName: string,\r\n  onInputChange : (e : any) => void,\r\n  onDownloadClick: () => void\r\n}\r\n\r\ninterface ExportImageProp extends MenuExport {\r\n  imageType: string\r\n}\r\n\r\ninterface ExportSqlProp extends MenuExport {\r\n  code: string,\r\n}\r\n\r\nexport const ExportEditor: FunctionComponent<ExportProp> = ({ isOpen, onclose, exportPng,  exportSql , exportTest , fileName}) => {\r\n\r\n  const [currentMenu, setcurrentMenu] = useState(MenuEnum.Image)\r\n\r\n  const [currentFileName, setcurrentFileName] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    if(isOpen === false){\r\n      setcurrentFileName(fileName)\r\n    }\r\n    \r\n  }, [fileName])\r\n\r\n  const handleFileNameInput = (e : any) => setcurrentFileName(e.target.value)\r\n\r\n  const onExportSql = () => {\r\n    exportSql(currentFileName + \".sql\")\r\n  }\r\n\r\n  const onExportPng = () => {\r\n    exportPng(currentFileName + \".png\")\r\n  }\r\n\r\n  return (\r\n\r\n    <Drawer anchor={\"right\"} open={isOpen} style={{ width: 400 }} onClose={onclose}>\r\n      <div\r\n        style={{ width: 500, display: \"flex\" }}\r\n        role=\"presentation\"\r\n        className=\"\"\r\n      >\r\n\r\n        <LEFT>\r\n          <IconButton color=\"inherit\" size=\"medium\"><HighlightOffIcon></HighlightOffIcon></IconButton>\r\n          <MenuList>\r\n            <Menu onClick={() => setcurrentMenu(MenuEnum.MySql)}>Sql</Menu>\r\n            <Menu onClick={() => setcurrentMenu(MenuEnum.Image)}>Image</Menu>\r\n            <Menu onClick={() => exportTest('filename test')}>Pdf</Menu>\r\n\r\n            <Divider style={{ marginTop: 10, color: \"white\" }} light={true}></Divider>\r\n\r\n            <Menu>Laravel</Menu>\r\n            <Menu>Golang Gin</Menu>\r\n\r\n          </MenuList>\r\n        </LEFT>\r\n        <Right>\r\n          <SqlExport isRender={currentMenu == MenuEnum.MySql}\r\n          onInputChange={handleFileNameInput} code={\"\"} fileName={currentFileName} onDownloadClick={onExportSql} />\r\n          <ImageExport isRender={currentMenu == MenuEnum.Image} \r\n          onInputChange={handleFileNameInput} imageType=\"png\" fileName={currentFileName} onDownloadClick={onExportPng} />\r\n        </Right>\r\n\r\n      </div>\r\n    </Drawer>\r\n  )\r\n}\r\n","import React, { FunctionComponent , useState} from 'react'\r\nimport Drawer from '@material-ui/core/Drawer';\r\n\r\nimport styled from '@emotion/styled';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Cookies from 'js-cookie'\r\n\r\nexport interface TableEditorProp {\r\n  isOpen: boolean,\r\n  onclose : () => void,\r\n  onLogin : (userName : string , userPassword : string) => void\r\n}\r\n\r\n\r\nexport const LEFT = styled.div<{}>`\r\nwidth : 25%;\r\nheight: 100vh;\r\ncolor : white;\r\nfont-size : 20px;\r\nbackground-color: #005AA0;\r\n`;\r\n\r\nexport const MenuList = styled.div<{}>`\r\n\r\ncolor : white;\r\n\r\npadding : 15px;\r\nmargin-bottom : 10px;\r\n`;\r\n\r\nexport const Menu = styled.div<{}>`\r\n\r\ncolor : white;\r\nfont-size : 20px;\r\nmargin : 8px;\r\n\r\n`;\r\n\r\n\r\nexport const Right = styled.div<{}>`\r\nwidth : 75%;\r\nbackground-color: \"white\";\r\nmargin : 15px;\r\nfont-size : 20px;\r\n\r\n`;\r\n\r\ninterface MenuProp {\r\n  isRender : boolean,\r\n\r\n}\r\n\r\ninterface LoginProp extends MenuProp{\r\n  userName : string,\r\n  userPassword : string,\r\n  onUserName : (e : any) => void,\r\n  onUserPassword : (e : any) => void,\r\n  onLogin : (userName : string , userPassword : string) => void\r\n}\r\n\r\nexport const LoginForm: FunctionComponent<LoginProp> = ({ isRender , userName , userPassword , onLogin , onUserName , onUserPassword }) => {\r\n  if (!isRender) {\r\n    return (<div></div>)\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div>Login</div>\r\n        \r\n            <TextField label=\"User Name\" variant=\"filled\"  style={{ marginTop: 20, width: \"100%\" }}\r\n              value={userName} onChange={onUserName}></TextField>\r\n\r\n            <TextField label=\"User Password\" variant=\"filled\"  style={{ marginTop: 20, width: \"100%\" }}\r\n              value={userPassword} onChange={onUserPassword}></TextField>\r\n\r\n            <div style={{ marginTop: 15 }}>\r\n         \r\n              <Button variant=\"outlined\" color=\"primary\" style={{ marginRight: 10 }} \r\n              onClick={() => onLogin(userName , userPassword)}>Login</Button>\r\n            </div>\r\n       \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport const AccoutDetail: FunctionComponent<MenuProp> = ({ isRender  }) => {\r\n  if (!isRender) {\r\n    return (<div></div>)\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div>Accout</div>\r\n            <TextField label=\"Title\" variant=\"filled\" multiline style={{ marginTop: 20, width: \"100%\" }}\r\n              value={\"E-commerce\"}></TextField>\r\n\r\n            <div style={{ marginTop: 15 }}>Status Share</div>\r\n\r\n\r\n            <div style={{ marginTop: 15 }}>\r\n              <Button variant=\"outlined\" style={{ marginRight: 10 }}>Public</Button>\r\n              <Button variant=\"outlined\" style={{ marginRight: 10 }}>Protected</Button>\r\n              <Button variant=\"outlined\" color=\"primary\" style={{ marginRight: 10 }}>Private</Button>\r\n            </div>\r\n       \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport const FileDetail: FunctionComponent<MenuProp> = ({ isRender  }) => {\r\n\r\n\r\n\r\n  if (!isRender) {\r\n    return (<div></div>)\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div>Propertie</div>\r\n            <TextField label=\"Title\" variant=\"filled\" multiline style={{ marginTop: 20, width: \"100%\" }}\r\n              value={\"E-commerce\"}></TextField>\r\n\r\n            <div style={{ marginTop: 15 }}>Status Share</div>\r\n\r\n\r\n            <div style={{ marginTop: 15 }}>\r\n              <Button variant=\"outlined\" style={{ marginRight: 10 }}>Public</Button>\r\n              <Button variant=\"outlined\" style={{ marginRight: 10 }}>Protected</Button>\r\n              <Button variant=\"outlined\" color=\"primary\" style={{ marginRight: 10 }}>Private</Button>\r\n            </div>\r\n       \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport const ListProject: FunctionComponent<MenuProp> = ({ isRender  }) => {\r\n  if (!isRender) {\r\n    return (<div></div>)\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div>List</div>\r\n            <TextField label=\"Title\" variant=\"filled\" multiline style={{ marginTop: 20, width: \"100%\" }}\r\n              value={\"E-commerce\"}></TextField>\r\n\r\n            <div style={{ marginTop: 15 }}>Status Share</div>\r\n\r\n\r\n            <div style={{ marginTop: 15 }}>\r\n              <Button variant=\"outlined\" style={{ marginRight: 10 }}>Public</Button>\r\n              <Button variant=\"outlined\" style={{ marginRight: 10 }}>Protected</Button>\r\n              <Button variant=\"outlined\" color=\"primary\" style={{ marginRight: 10 }}>Private</Button>\r\n            </div>\r\n       \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nenum MenuEnum {\r\n  Account,\r\n  FileSelect,\r\n  ProjectList\r\n  \r\n}\r\n\r\nexport const FileMenu: FunctionComponent<TableEditorProp> = ({ isOpen , onLogin , onclose  }) => {\r\n\r\n  const [currentMenu, setcurrentMenu] = useState(MenuEnum.Account)\r\n\r\n  const [userName, setuserName] = useState(\"\")\r\n\r\n  const [userPassword, setuserPassword] = useState(\"\")\r\n\r\n  const onUserNameFunc = (e : any) => {setuserName(e.target.value)}\r\n\r\n  const onUserPasswordFunc = (e : any) => {setuserPassword(e.target.value)}\r\n\r\n\r\n\r\n  function isLogin(){\r\n\t\tlet token = Cookies.get(\"ertoken\")\r\n\t\tif(token === undefined || token === \"\") {\r\n\t\t\t//show login\r\n\t\t}else{\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n  return (\r\n    <Drawer anchor={\"left\"} open={isOpen} style={{ width: 400 }} onClose={onclose}>\r\n      <div\r\n        style={{ width: 500, display: \"flex\" }}\r\n        role=\"presentation\"\r\n        className=\"\">\r\n\r\n        <LEFT>\r\n          <IconButton color=\"inherit\" size=\"medium\"><HighlightOffIcon></HighlightOffIcon></IconButton>\r\n          <MenuList>\r\n            <Menu onClick={() => setcurrentMenu(MenuEnum.Account)}>Accout</Menu>\r\n            <Menu onClick={() => setcurrentMenu(MenuEnum.FileSelect)}>File</Menu>\r\n            <Menu onClick={() => setcurrentMenu(MenuEnum.ProjectList)}>Project</Menu>\r\n            <Menu>Setting</Menu>\r\n\r\n            <Divider style={{ marginTop: 10, color: \"white\" }} light={true}></Divider>\r\n          </MenuList>\r\n        </LEFT>\r\n        <Right>\r\n\r\n          <LoginForm isRender={true} userName={userName} userPassword={userPassword} \r\n          onUserName={onUserNameFunc} onUserPassword={onUserPasswordFunc} onLogin={onLogin} />\r\n\r\n          <AccoutDetail isRender={currentMenu === MenuEnum.Account} />\r\n\r\n          <FileDetail isRender={currentMenu === MenuEnum.FileSelect} /> \r\n          \r\n          <ListProject isRender={currentMenu === MenuEnum.ProjectList} />\r\n\r\n        </Right>\r\n\r\n      </div>\r\n    </Drawer>\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react';\n\nconst Copy = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\" />\n    <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\" />\n  </svg>\n);\n\nexport default Copy;\n","import React from 'react';\n\nconst Cut = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"6\" cy=\"6\" r=\"3\" />\n    <circle cx=\"6\" cy=\"18\" r=\"3\" />\n    <line x1=\"20\" y1=\"4\" x2=\"8.12\" y2=\"15.88\" />\n    <line x1=\"14.47\" y1=\"14.48\" x2=\"20\" y2=\"20\" />\n    <line x1=\"8.12\" y1=\"8.12\" x2=\"12\" y2=\"12\" />\n  </svg>\n);\n\nexport default Cut;\n","import React from 'react';\n\nconst Delete = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <polyline points=\"3 6 5 6 21 6\" />\n    <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\" />\n    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\" />\n    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\" />\n  </svg>\n);\n\nexport default Delete;\n","import React from 'react';\n\nconst Duplicate = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={(size * 18) / 24}\n    viewBox=\"0 0 24 18\"\n    fill=\"none\"\n    stroke=\"none\"\n    strokeWidth=\"2\"\n  >\n    <g transform=\"translate(-678.000000, -2727.000000)\">\n      <g transform=\"translate(100.000000, 2626.000000)\">\n        <g transform=\"translate(578.000000, 98.000000)\">\n          <g transform=\"translate(0.000000, 0.000000)\">\n            <polygon points=\"0 0 24 0 24 24 0 24\" />\n            <path\n              d=\"M15,8 C14.45,8 14,8.45 14,9 L14,11 L12,11 C11.45,11 11,11.45 11,12 C11,12.55 11.45,13 12,13 L14,13 L14,15 C14,15.55 14.45,16 15,16 C15.55,16 16,15.55 16,15 L16,13 L18,13 C18.55,13 19,12.55 19,12 C19,11.45 18.55,11 18,11 L16,11 L16,9 C16,8.45 15.55,8 15,8 Z M2,12 C2,9.42 3.4,7.17 5.48,5.96 C5.8,5.77 6.01,5.45 6.01,5.08 C6.01,4.31 5.17,3.83 4.5,4.22 C1.82,5.78 0,8.68 0,12 C0,15.32 1.82,18.22 4.5,19.78 C5.17,20.17 6.01,19.69 6.01,18.92 C6.01,18.55 5.8,18.23 5.48,18.04 C3.4,16.83 2,14.58 2,12 Z M15,3 C10.04,3 6,7.04 6,12 C6,16.96 10.04,21 15,21 C19.96,21 24,16.96 24,12 C24,7.04 19.96,3 15,3 Z M15,19 C11.14,19 8,15.86 8,12 C8,8.14 11.14,5 15,5 C18.86,5 22,8.14 22,12 C22,15.86 18.86,19 15,19 Z\"\n              fill={color}\n            />\n          </g>\n        </g>\n      </g>\n    </g>\n  </svg>\n);\n\nexport default Duplicate;\n","import React from 'react';\n\nconst Paste = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    fill={color}\n    viewBox=\"0 0 512.001 512.001\"\n  >\n    <g>\n      <g>\n        <g>\n          <path\n            d=\"M481,371c11.046,0,20-8.954,20-20v-92c0-33.084-26.916-60-60-60h-39v-79c0-44.112-35.888-80-80-80h-47.533\n\t\t\t\tc-7.739-23.749-29.864-40-55.16-40h-25.614c-25.296,0-47.421,16.251-55.16,40H91c-44.112,0-80,35.888-80,80v312\n\t\t\t\tc0,44.112,35.888,80,80,80h88c11.046,0,20-8.954,20-20c0-11.046-8.954-20-20-20H91c-22.056,0-40-17.944-40-40V120\n\t\t\t\tc0-22.056,17.944-40,40-40h2v59c0,11.046,8.954,20,20,20h189c11.046,0,20-8.954,20-20V80c22.056,0,40,17.944,40,40v79h-65.007\n\t\t\t\tC263.914,199,237,225.913,237,258.993v193.015c0,33.08,26.916,59.993,60.01,59.993L441,511.926c33.084,0,60-26.913,60-59.992\n\t\t\t\tc0-11.046-8.954-20-20-20c-11.046,0-20,8.954-20,20c0,11.024-8.972,19.992-20.01,19.992L297,472c-11.028,0-20-8.969-20-19.993\n\t\t\t\tV258.993c0-11.024,8.969-19.993,19.993-19.993H441c11.028,0,20,8.972,20,20v92C461,362.046,469.955,371,481,371z M282,119H133V80\n\t\t\t\th21c9.177,0,17.177-6.246,19.403-15.149l2.798-11.194C178.211,45.616,185.404,40,193.693,40h25.614\n\t\t\t\tc8.289,0,15.481,5.616,17.492,13.657l2.798,11.194C241.823,73.754,249.823,80,259,80h23V119z\"\n          />\n          <path\n            d=\"M401,279h-64c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20h64c11.046,0,20-8.954,20-20\n\t\t\t\tC421,287.954,412.047,279,401,279z\"\n          />\n          <path\n            d=\"M401,349h-64c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20h64c11.046,0,20-8.954,20-20\n\t\t\t\tC421,357.954,412.047,349,401,349z\"\n          />\n        </g>\n      </g>\n    </g>\n  </svg>\n);\n\nexport default Paste;\n","import React from 'react';\n\nconst Redo = ({ size = 16, color = 'gray' }) => (\n  <svg width={size} height={size} viewBox=\"0 0 512 512\" fill={color}>\n    <path d=\"m431 481c0 11.046-8.954 20-20 20h-66c-11.046 0-20-8.954-20-20s8.954-20 20-20h66c11.046 0 20 8.954 20 20zm63.358-352.994-112.284-111.215c-7.848-7.773-20.511-7.713-28.284.135s-7.712 20.511.135 28.284l106.808 105.79h-285.733c-96.495 0-175 78.505-175 175s78.505 175 175 175h69c11.046 0 20-8.954 20-20s-8.954-20-20-20h-69c-74.439 0-135-60.561-135-135s60.561-135 135-135h284.836l-105.037 105.917c-7.778 7.843-7.725 20.506.118 28.284 3.9 3.868 8.992 5.799 14.083 5.799 5.146 0 10.292-1.975 14.202-5.917l111.225-112.157c11.332-11.332 17.573-26.4 17.573-42.426s-6.241-31.094-17.642-42.494z\" />\n  </svg>\n);\n\nexport default Redo;\n","import React from 'react';\n\nconst Settings = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"12\" cy=\"12\" r=\"3\" />\n    <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\" />\n  </svg>\n);\n\nexport default Settings;\n","import React from 'react';\n\nconst Undo = ({ size = 16, color = 'gray' }) => (\n  <svg width={size} height={size} viewBox=\"0 0 512 512\" fill={color}>\n    <path d=\"m 81,481 c 0,11.046 8.954,20 20,20 h 66 c 11.046,0 20,-8.954 20,-20 0,-11.046 -8.954,-20 -20,-20 h -66 c -11.046,0 -20,8.954 -20,20 z M 17.642,128.006 129.926,16.791 c 7.848,-7.773 20.511,-7.713 28.284,0.135 7.773,7.848 7.712,20.511 -0.135,28.284 L 51.267,151 H 337 c 96.495,0 175,78.505 175,175 0,96.495 -78.505,175 -175,175 h -69 c -11.046,0 -20,-8.954 -20,-20 0,-11.046 8.954,-20 20,-20 h 69 c 74.439,0 135,-60.561 135,-135 0,-74.439 -60.561,-135 -135,-135 H 52.164 l 105.037,105.917 c 7.778,7.843 7.725,20.506 -0.118,28.284 -3.9,3.868 -8.992,5.799 -14.083,5.799 -5.146,0 -10.292,-1.975 -14.202,-5.917 L 17.573,212.926 C 6.241,201.594 0,186.526 0,170.5 0,154.474 6.241,139.406 17.642,128.006 Z\" />\n  </svg>\n);\n\nexport default Undo;\n","import React from 'react';\n\nconst ZoomIn = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"11\" cy=\"11\" r=\"8\" />\n    <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\" />\n    <line x1=\"11\" y1=\"8\" x2=\"11\" y2=\"14\" />\n    <line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\" />\n  </svg>\n);\n\nexport default ZoomIn;\n","import React from 'react';\n\nconst ZoomOut = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"11\" cy=\"11\" r=\"8\" />\n    <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\" />\n    <line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\" />\n  </svg>\n);\n\nexport default ZoomOut;\n","import React from 'react';\r\n\r\nimport styled from '@emotion/styled';\r\n\r\nconst Container = styled.span`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  height: ${props => props.size}px;\r\n  padding: 0 ${props => props.size / 4}px;\r\n  margin: 2px ${props => props.size / 8}px;\r\n  font-size: ${props => props.size / 2}px;\r\n  font-family: monospace;\r\n  color: #000000c4;\r\n  background: #ececec;\r\n  border-radius: 4px;\r\n  border: 1px solid #ffffff17;\r\n  box-shadow: inset 0 0 ${props => props.size / 4}px #0000000a;\r\n`;\r\n\r\nconst Key = ({ children, size = 16 }) => (\r\n  <Container size={size}>{children}</Container>\r\n);\r\n\r\nexport default Key;","\r\nimport styled from '@emotion/styled';\r\nconst ContextMenuIconContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 16px;\r\n  height: 16px;\r\n  margin-right: 16px;\r\n`;\r\n\r\nexport default ContextMenuIconContainer;","import styled from '@emotion/styled';\r\n\r\nconst ContextMenuShortcutContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  justify-content: flex-end;\r\n  margin-left: 8px;\r\n`;\r\n\r\nexport default ContextMenuShortcutContainer;","import React , {FunctionComponent} from 'react';\r\n\r\nimport { Menu, Item, Separator } from 'react-contexify';\r\n\r\nimport {\r\n  Duplicate,\r\n  Copy,\r\n  Delete,\r\n  Paste,\r\n  Redo,\r\n  Settings,\r\n  Undo,\r\n  Cut,\r\n  ZoomIn,\r\n  ZoomOut,\r\n} from '../Icons';\r\nimport Key from './KeyMenu';\r\nimport ContextMenuIconContainer from './ContextMenuIconContainer';\r\nimport ContextMenuShortcutContainer from './ContextMenuShortcutContainer';\r\nimport {ComponentFunction} from './FunctionList'\r\n\r\n  export const ComponentContextMenu : FunctionComponent<ComponentFunction> = ({copyFunc , pasteFunc , deleteFunc , duplicateFunc , cutFunc , zoomIn , zoomOut} ) => (\r\n  <Menu id=\"component\">\r\n    <Item onClick={duplicateFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Duplicate />\r\n      </ContextMenuIconContainer>\r\n      Duplicate\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>D</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={cutFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Cut />\r\n      </ContextMenuIconContainer>\r\n      Cut\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>X</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={copyFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Copy />\r\n      </ContextMenuIconContainer>\r\n      Copy\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>C</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={pasteFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Paste />\r\n      </ContextMenuIconContainer>\r\n      Paste\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>V</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={deleteFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Delete />\r\n      </ContextMenuIconContainer>\r\n      Delete\r\n      <ContextMenuShortcutContainer>\r\n        <Key>Delete</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Separator />\r\n\r\n    <Item onClick={zoomIn}>\r\n      <ContextMenuIconContainer>\r\n        <ZoomIn />\r\n      </ContextMenuIconContainer>\r\n      Zoom in\r\n    </Item>\r\n\r\n    <Item onClick={zoomOut}>\r\n      <ContextMenuIconContainer>\r\n        <ZoomOut />\r\n      </ContextMenuIconContainer>\r\n      Zoom out\r\n    </Item>\r\n\r\n    <Separator />\r\n\r\n    <Item onClick={pasteFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Undo />\r\n      </ContextMenuIconContainer>\r\n      Undo\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>Z</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={pasteFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Redo />\r\n      </ContextMenuIconContainer>\r\n      Redo\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>SHIFT</Key>\r\n        <Key>Z</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Separator />\r\n\r\n    <Item\r\n     \r\n    >\r\n      <ContextMenuIconContainer>\r\n        <Settings />\r\n      </ContextMenuIconContainer>\r\n      Edit configurations...\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>E</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n  </Menu>\r\n);\r\n\r\nexport default ComponentContextMenu;","import React , {FunctionComponent} from 'react';\r\n\r\nimport { Menu, Item, Separator } from 'react-contexify';\r\n\r\nimport { Redo, Undo, Paste, ZoomIn, ZoomOut } from '../Icons';\r\nimport Key from './KeyMenu';\r\nimport ContextMenuIconContainer from './ContextMenuIconContainer';\r\nimport ContextMenuShortcutContainer from './ContextMenuShortcutContainer';\r\n\r\nimport {ContextFunction} from './FunctionList'\r\n\r\n\r\nexport const DiagramContextMenu : FunctionComponent<ContextFunction> = ({zoomIn , zoomOut , \r\n  pasteFunc , redoFunc , undoFunc} ) => (\r\n  <Menu id=\"diagram\">\r\n    <Item onClick={pasteFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Paste />\r\n      </ContextMenuIconContainer>\r\n      Paste\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>V</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Separator />\r\n\r\n    <Item onClick={zoomIn}>\r\n      <ContextMenuIconContainer>\r\n        <ZoomIn />\r\n      </ContextMenuIconContainer>\r\n      Zoom in\r\n    </Item>\r\n    <Item onClick={zoomOut}>\r\n      <ContextMenuIconContainer>\r\n        <ZoomOut />\r\n      </ContextMenuIconContainer>\r\n      Zoom out\r\n    </Item>\r\n\r\n    <Separator />\r\n\r\n    <Item onClick={undoFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Undo />\r\n      </ContextMenuIconContainer>\r\n      Undo\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>Z</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={redoFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Redo />\r\n      </ContextMenuIconContainer>\r\n      Redo\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>SHIFT</Key>\r\n        <Key>Z</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n  </Menu>\r\n);\r\n\r\nexport default DiagramContextMenu;","import React , {FunctionComponent} from 'react';\r\n\r\nimport {ComponentContextMenu} from './ComponentContextMenu';\r\nimport {DiagramContextMenu} from './DiagramContextMenu';\r\n\r\nimport 'react-contexify/dist/ReactContexify.min.css';\r\nimport {AllContextFunction} from './FunctionList'\r\n\r\n\r\n\r\nexport const ContextMenus: FunctionComponent<AllContextFunction> = ({copyFunc , deleteFunc , duplicateFunc , cutFunc , pasteFunc , zoomIn , zoomOut} ) => {\r\n\r\n  return (\r\n    <>\r\n    <DiagramContextMenu  pasteFunc={pasteFunc} zoomIn={zoomIn} zoomOut={zoomOut}  />\r\n    <ComponentContextMenu  copyFunc={copyFunc} pasteFunc={pasteFunc} \r\n    deleteFunc={deleteFunc} duplicateFunc={duplicateFunc} cutFunc={cutFunc} zoomIn={zoomIn} zoomOut={zoomOut} />\r\n  </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","\nimport {Action, InputType, BaseModel } from '@projectstorm/react-canvas-core';\n\n\n/**\n * Handles delete actions.\n */\nexport default class DeleteAction extends Action {\n  constructor(areShortcutsAllowed : boolean) {\n    super({\n      type: InputType.KEY_DOWN,\n      fire: ({ event }) => {\n        console.log(JSON.stringify(event))\n        //if (!areShortcutsAllowed) return;\n        if (this.engine.getModel().isLocked()) return;\n        \n        if (this.matchesInput(event)) {\n          event.preventDefault();\n          this.handleAction();\n        }\n      },\n    });\n  }\n\n  matchesInput(event : any) : boolean{\n    return event.ctrlKey && event.code === 'Delete'\n  }\n\n  handleAction = () => {\n    console.log(\"delete\")\n    const entities = this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(model => !model.isLocked());\n\n    //this.fireEvent(entities);\n\n    entities.forEach(model => model.remove());\n\n    this.engine.repaintCanvas();\n  };\n\n \n}\n","import * as _ from 'lodash';\r\nimport { NodeModel, NodeModelGenerics, PortModel, PortModelAlignment } from '@projectstorm/react-diagrams-core';\r\nimport { SchemaPortModel } from '../port/SchemaPortModel';\r\nimport { BasePositionModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\r\nimport { DefaultLinkModel, DefaultPortModel, DiagramEngine, LinkModel } from '@projectstorm/react-diagrams';\r\nimport { TableData  } from '../../components/TableEditor';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nexport interface DefaultNodeModelOptions extends BasePositionModelOptions {\r\n\tname?: string;\r\n\tcolor?: string;\r\n}\r\n\r\nexport interface Field{\r\n\tinId ?: string,\r\n\toutId ?: string,\r\n\tfieldName : string,\r\n\tfieldType : string,\r\n\tfieldOption ?: FieldOption\r\n}\r\n\r\nexport interface FieldOption {\r\n\tportId : string,\r\n\tai ?: boolean\r\n\tpk ?: boolean,\r\n\tfk ?: boolean,\r\n\tfkTb ?: string,\r\n\tfkField ?: string\r\n}\r\n\r\nexport interface SchemaNodeModelGenerics extends NodeModelGenerics {\r\n\tOPTIONS: DefaultNodeModelOptions;\r\n}\r\n\r\nexport class SchemaNodeModel extends NodeModel<SchemaNodeModelGenerics> {\r\n\tprotected portsIn: DefaultPortModel[];\r\n\tprotected portsOut: DefaultPortModel[];\r\n\tprotected fieldOptions : FieldOption[]\t\r\n\r\n\tconstructor(name: string, color: string);\r\n\tconstructor(options?: DefaultNodeModelOptions);\r\n\tconstructor(options: any = {}, color?: string) {\r\n\t\tif (typeof options === 'string') {\r\n\t\t\toptions = {\r\n\t\t\t\tname: options,\r\n\t\t\t\tcolor: color\r\n\t\t\t};\r\n\t\t}\r\n\t\tsuper({\r\n\t\t\ttype: 'default',\r\n\t\t\tname: 'Untitled',\r\n\t\t\tcolor: 'rgb(0,192,255)',\r\n\t\t\t...options\r\n\t\t});\r\n\t\tthis.portsOut = [];\r\n\t\tthis.portsIn = [];\r\n\t\tthis.fieldOptions = []\r\n\t}\r\n\r\n\tperformanceTune() : boolean { return false}\r\n\r\n\tdoClone(lookupTable: {}, clone: SchemaNodeModel): void {\r\n\r\n\t\tconsole.log('original id : ' + this.getID())\r\n\t\tclone.portsIn = [];\r\n\t\tclone.portsOut = [];\r\n\t\t\r\n\t\tsuper.doClone(lookupTable, clone);\r\n\t\tlet fields = []\r\n\t\tfor (let i = 0; i < clone.portsIn.length; i++) {\r\n\t\t\tclone.fieldOptions[i].portId = clone.portsIn[i].getID()\r\n\t\t}\r\n\t}\r\n\r\n\tremoveFieldbyId(id : string): void{\r\n\t\t\r\n\t\tlet indexof = this.portsIn.findIndex(p=>p.getID() == id );\r\n\r\n\t\tlet fieldIndex = this.fieldOptions.findIndex(f=>f.portId == id)\r\n\r\n\t\tif(indexof === -1) return\r\n\r\n\t\tif(fieldIndex !== -1){\r\n\t\t\tthis.fieldOptions.splice(fieldIndex, 1);\r\n\t\t}\r\n\r\n\t\tthis.removeField(indexof)\r\n\t}\r\n\r\n\tremovePort(port: DefaultPortModel): void {\r\n\t\tsuper.removePort(port);\r\n\t\r\n\t\tif (port.getOptions().in) {\r\n\t\t\tthis.portsIn.splice(this.portsIn.indexOf(port), 1);\r\n\t\t} else {\r\n\t\t\tthis.portsOut.splice(this.portsOut.indexOf(port), 1);\r\n\t\t}\r\n\t}\r\n\r\n\tupdateNode(tb : TableData){\r\n\t\r\n\t\tlet fields_tb = tb.fields\r\n\t\tlet fields = this.getAllField()\r\n\t\tfor (let i = 0; i < fields_tb.length; i++) {\r\n\t\t\tif(fields[i].fieldName !== fields_tb[i].fieldName){\r\n\t\t\t\tthis.portsIn[i].getOptions().label = fields_tb[i].fieldName\r\n\t\t\t}\r\n\t\t\tif(fields[i].fieldType !== fields_tb[i].fieldType){\r\n\t\t\t\tthis.portsOut[i].getOptions().label = fields_tb[i].fieldType\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\r\n\taddField(field : Field) : DefaultPortModel[] {\r\n\t\t\r\n\t\tlet portin = this.addInPort(field.fieldName)\r\n\t\tlet portout = this.addOutPort(field.fieldType)\r\n\t\t\r\n\t\tlet add : FieldOption = {\r\n\t\t\tportId : portin.getID(),\r\n\t\t\tai : false,\r\n\t\t\tpk : false,\r\n\t\t\tfk : false,\r\n\t\t\tfkTb : \"\",\r\n\t\t\tfkField : \"\"\r\n\t\t}\r\n\r\n\t\tthis.fieldOptions.push(add)\r\n\r\n\t\treturn [portin , portout]\r\n\t}\r\n\r\n\tremoveField(i : number){\r\n\r\n\t\tthis.removePort(this.portsIn[i])\r\n\t\tthis.removePort(this.portsOut[i])\r\n\t}\r\n\r\n\tAddNewField(){\r\n\r\n\t\tlet field : Field = {\r\n\t\t\tfieldName : \"test\",\r\n\t\t\tfieldType : \"int\"\r\n\t\t}\r\n\t\tthis.addField(field)\r\n\r\n\t}\r\n\r\n\taddOrUpdateFieldOption(field : Field)  : void{\r\n\t\tlet fieldIndex = this.fieldOptions.findIndex(f=>f.portId === field.inId)\r\n\t\tif(fieldIndex === -1) return\r\n\t\t\r\n\t\tif(field.fieldOption === undefined) return \r\n\t\tthis.fieldOptions[fieldIndex] = field.fieldOption\r\n\t\tconsole.log(field.fieldOption)\r\n\r\n\t\t//fieldrs.\r\n\t\tlet fieldOption = field.fieldOption\r\n\t\tif(fieldOption == undefined) return\r\n\t\t\r\n\t\tlet targetNodeId = (fieldOption.fkTb === undefined) ? \"\" : fieldOption.fkTb\r\n\t\tlet targetPortId = (fieldOption.fkField === undefined) ? \"\" : fieldOption.fkField\r\n\t\tlet sourceIdPort = (field.inId === undefined) ? \"\" : field.inId\r\n\t\t\r\n\t\t//this.linkForeignKey(targetNodeId , targetPortId ,  sourceIdPort)\r\n\t}\r\n\r\n\tlinkForeignKey(targetNode : SchemaNodeModel ,targetIdPort : string , sourceInIdPort : string): LinkModel | undefined{\r\n\t\talert('do link')\r\n\t\tlet targetPort = targetNode.getPortFromID(targetIdPort) as DefaultPortModel\r\n\t\tlet sourceport = this.getPortFromID(sourceInIdPort)  as DefaultPortModel  // find  sourePort\r\n\t\tif(sourceport === null) return undefined\r\n\t\tif(targetPort === null) return undefined\r\n\t\talert('complete link')\r\n\t\tconsole.log(\"main field \" + sourceport.getOptions().label + \" link with : \" + targetPort.getOptions().label)\r\n\t\tconsole.log(sourceport.getOptions().in)\r\n\t\tconsole.log(targetPort.getOptions().in)\r\n\t\tlet link =  targetPort.link(sourceport)\r\n\r\n\t\ttargetPort.reportPosition()\r\n\t\tsourceport.reportPosition()\r\n\t\treturn link\r\n\t}\r\n\r\n\tgetAllField() : Field[]{\r\n\t\tlet portins = this.portsIn\r\n\t\tlet portouts = this.portsOut\r\n\t\tlet rs : Field[] = []\r\n\t\tconsole.log(\"get field lenght : \"+ portins.length)\r\n\r\n\t\tconsole.log(this.fieldOptions)\r\n\r\n\t\tfor (let i = 0; i < portins.length; i++) {\r\n\t\t\tconsole.log(\"check field \" + i )\r\n\t\t\t\r\n\t\t\tlet f = this.getField(i)\r\n\t\t\tconsole.log(f)\r\n\t\t\trs.push(f)\r\n\t\t}\r\n\t\treturn rs\r\n\t}\r\n\r\n\tgetField(index : number) : Field{\r\n\r\n\t\tlet field = this.portsIn[index].getOptions().label\r\n\t\tlet type = this.portsOut[index].getOptions().label\r\n\t\tlet id = this.portsIn[index].getID()\r\n\t\tconsole.log(\"check id : \" + id)\r\n\t\t\r\n\t\tlet fieldOptionIndex = this.fieldOptions.findIndex(f=>f.portId === id)\r\n\r\n\t\tconsole.log(\"fieldopt index : \" + fieldOptionIndex)\r\n\r\n\t\tif(fieldOptionIndex === -1){\r\n\t\t\tlet r : Field = {\r\n\t\t\t\tinId : '',\r\n\t\t\toutId : '',\r\n\t\t\tfieldName : '',\r\n\t\t\tfieldType : '',\r\n\t\r\n\t\t\t}\r\n\t\t\treturn r\r\n\t\t}\r\n\r\n\t\tlet fieldOption = this.fieldOptions[fieldOptionIndex]\r\n\t\tconsole.log(\"field name : \" + field + \" pk : \" + fieldOption.pk + \" fk : \" + fieldOption.fk)\r\n\r\n\t\tif(field === undefined) field = \"\"\r\n\t\tif(type === undefined) type = \"\"\r\n\r\n\t\t\r\n\t\tlet rs : Field = {\r\n\t\t\tinId : this.portsIn[index].getID(),\r\n\t\t\toutId : this.portsOut[index].getID(),\r\n\t\t\tfieldName : field,\r\n\t\t\tfieldType : type,\r\n\t\t\tfieldOption : fieldOption\r\n\t\t}\r\n\r\n\t\treturn rs\r\n\t}\r\n\r\n\tupdatePort(port: SchemaPortModel , index : number){\r\n\t\t\r\n\t}\r\n\r\n\taddPort<T extends DefaultPortModel>(port: T): T {\r\n\r\n\r\n\t\tsuper.addPort(port);\r\n\t\t\r\n\t\tif (port.getOptions().in) {\r\n\t\t\tif (this.portsIn.indexOf(port) === -1) {\r\n\t\t\t\tthis.portsIn.push(port);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.portsOut.indexOf(port) === -1) {\r\n\t\t\t\tthis.portsOut.push(port);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn port;\r\n\t}\r\n\r\n\taddInPort(label: string, after = true): DefaultPortModel {\r\n\t\tlet uid = uuidv4()\r\n\t\tconst p = new DefaultPortModel({\r\n\t\t\tin: true,\r\n\t\t\tname: uid,\r\n\t\t\tlabel: label,\r\n\t\t\talignment: PortModelAlignment.LEFT\r\n\t\t});\r\n\t\tif (!after) {\r\n\t\t\tthis.portsIn.splice(0, 0, p);\r\n\t\t}\r\n\t\treturn this.addPort(p);\r\n\t}\r\n\r\n\taddOutPort(label: string, after = true): DefaultPortModel {\r\n\t\tlet uid = uuidv4()\r\n\t\tconst p = new DefaultPortModel({\r\n\t\t\tin: false,\r\n\t\t\tname: uid,\r\n\t\t\tlabel: label,\r\n\t\t\talignment: PortModelAlignment.RIGHT\r\n\t\t});\r\n\t\tif (!after) {\r\n\t\t\tthis.portsOut.splice(0, 0, p);\r\n\t\t}\r\n\t\treturn this.addPort(p);\r\n\t}\r\n\r\n\t//when convert back to model it is no function to add field and add fieldoption : \r\n\t//fix you need \r\n\r\n\tdeserialize(event: DeserializeEvent<this>) {\r\n\t\tsuper.deserialize(event);\r\n\r\n\t\tthis.options.name = event.data.name;\r\n\t\tthis.options.color = event.data.color;\r\n\t\tthis.fieldOptions = event.data.fields\r\n\t\tconsole.log(this.fieldOptions)\r\n\t\tthis.portsIn = _.map(event.data.portsInOrder, (id : any) => {\r\n\t\t\treturn this.getPortFromID(id);\r\n\t\t}) as DefaultPortModel[];\r\n\t\tthis.portsOut = _.map(event.data.portsOutOrder, (id : any) => {\r\n\t\t\treturn this.getPortFromID(id);\r\n\t\t}) as DefaultPortModel[];\r\n\t\tconsole.log(\"deserial call on shemaModel\")\r\n\r\n\t\tconsole.log(\"after deserial\")\r\n\r\n\t}\r\n\r\n\tdeserializeFieldOption(){\r\n\r\n\t}\r\n\r\n\tserializeClone(c : any){\r\n\t\tconsole.log('serial clone')\r\n\t\tconsole.log(c)\r\n\t}\r\n\r\n\tserialize(): any {\r\n\r\n\t\tconsole.log(\"call serialize on model\")\r\n\r\n\t\tlet fields = []\r\n\r\n\t\tconsole.log(this.fieldOptions)\r\n\r\n\t\tfor (let i = 0; i < this.portsIn.length; i++) {\r\n\t\t\t\r\n\t\t\tlet fieldOptionIndex = this.fieldOptions.findIndex(f=>f.portId === this.portsIn[i].getID())\r\n\t\t\tconsole.log(\"fieldOptIndex : \" + fieldOptionIndex)\r\n\t\t\tif(fieldOptionIndex === -1) continue\r\n\t\t\tfields.push({\r\n\t\t\t\tportId : this.portsIn[i].getID(),\r\n\t\t\t\tfieldName : this.portsIn[i].getOptions().label,\r\n\t\t\t\tfieldType : this.portsOut[i].getOptions().label,\r\n\t\t\t\tai : this.fieldOptions[fieldOptionIndex].ai,\r\n\t\t\t\tpk : this.fieldOptions[fieldOptionIndex].pk\r\n\t\t\t})\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\t\r\n\t\treturn {\r\n\t\t\t...super.serialize(),\r\n\t\t\tname: this.options.name,\r\n\t\t\tcolor: this.options.color,\r\n\t\t\tfields : fields,\r\n\t\t\tportsInOrder: _.map(this.portsIn, (port) => {\r\n\t\t\t\treturn port.getID();\r\n\t\t\t}),\r\n\t\t\tportsOutOrder: _.map(this.portsOut, (port) => {\r\n\t\t\t\treturn port.getID();\r\n\t\t\t})\r\n\t\t};\r\n\t}\r\n\r\n\ttoJson() : any{\r\n\t\t\r\n\t\tlet fields = []\r\n\t\tfor (let i = 0; i < this.portsIn.length; i++) {\r\n\t\t\tlet fieldOptionIndex = this.fieldOptions.findIndex(f=>f.portId === this.portsIn[i].getID())\r\n\t\t\tif(fieldOptionIndex === -1) continue\r\n\t\t\tlet field = {\r\n\t\t\t\tfieldName : this.portsIn[i].getOptions().label,\r\n\t\t\t\tfieldType : this.portsOut[i].getOptions().label,\r\n\t\t\t\tfieldOption : this.fieldOptions[fieldOptionIndex]\r\n\t\t\t}\r\n\t\t\tfields.push(field)\r\n\t\t}\r\n\t\tlet rs = {\r\n\t\t\tname : this.options.name,\r\n\t\t\tcolor : this.options.color,\r\n\t\t\tfields : fields\r\n\t\t}\r\n\t\treturn rs\r\n\t}\r\n\r\n\tgetInPorts(): DefaultPortModel[] {\r\n\t\treturn this.portsIn;\r\n\t}\r\n\r\n\tgetOutPorts(): DefaultPortModel[] {\r\n\t\treturn this.portsOut;\r\n\t}\r\n\r\n\t\r\n}","import { DiagramModel, LinkModel, NodeModel } from '@projectstorm/react-diagrams';\r\n\r\nimport { Action, InputType } from '@projectstorm/react-canvas-core';\r\n\r\nimport {BaseModel} from '@projectstorm/react-canvas-core';\r\nimport { SchemaNodeModel } from '../../schemanode/node/SchemaNodeModel';\r\n\r\n/**\r\n * Handle duplication (clone) actions.\r\n */\r\nexport default class NewNodeAction extends Action {\r\n  constructor(areShortcutsAllowed : boolean) {\r\n    super({\r\n      type: InputType.KEY_DOWN,\r\n      fire: ({ event }) => {\r\n        if (!areShortcutsAllowed) return;\r\n        if (this.engine.getModel().isLocked()) return;\r\n\r\n        if (this.matchesInput(event)) {\r\n          event.preventDefault();\r\n          this.handleAction();\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  matchesInput(event : any) : boolean{\r\n    return event.ctrlKey && event.code === 'KeyB'\r\n  }\r\n\r\n  handleAction = () => {\r\n     \r\n    let snode =  new SchemaNodeModel({\r\n\t\tname: 'Product',\r\n\t\tcolor: 'rgb(0,192,255)'\r\n\t});\r\n    snode.addField({fieldName : \"Id\" , fieldType : \"int\"})\r\n\r\n    snode.setPosition(100, 100);\r\n\r\n    let model = this.engine.getModel() as DiagramModel\r\n\r\n    model.addAll(snode)\r\n\r\n    //this.engine.fireEvent({ nodes: clones }, 'componentsAdded');\r\n\r\n    this.engine.repaintCanvas();\r\n  };\r\n}\r\n","import { DiagramModel, LinkModel, NodeModel } from '@projectstorm/react-diagrams';\n\nimport { Action, InputType } from '@projectstorm/react-canvas-core';\n\nimport {BaseModel} from '@projectstorm/react-canvas-core';\n\n/**\n * Handle duplication (clone) actions.\n */\nexport default class DuplicateAction extends Action {\n  constructor(areShortcutsAllowed : boolean) {\n    super({\n      type: InputType.KEY_DOWN,\n      fire: ({ event }) => {\n        if (!areShortcutsAllowed) return;\n        if (this.engine.getModel().isLocked()) return;\n\n        if (this.matchesInput(event)) {\n          event.preventDefault();\n          this.handleAction();\n        }\n      },\n    });\n  }\n\n  matchesInput(event : any) : boolean{\n    return event.ctrlKey && event.code === 'KeyD'\n  }\n\n  handleAction = () => {\n    const model = this.engine.getModel() as DiagramModel\n\n    const clones : BaseModel[] = model \n      .getSelectedEntities()\n      .filter(entity => entity instanceof BaseModel)\n      .filter(entity => !entity.isLocked())\n      .map(entity => entity.clone());\n\n    model.clearSelection();\n\n    clones.forEach(clone => {\n\n      if (clone instanceof NodeModel) {\n        model.addNode(clone)\n        clone.setSelected(true);\n      }\n      \n      \n    });\n\n    //this.engine.fireEvent({ nodes: clones }, 'componentsAdded');\n\n    this.engine.repaintCanvas();\n  };\n}\n","import { Action, InputType , DeserializeEvent } from '@projectstorm/react-canvas-core';\r\n\r\nimport {BaseModel} from '@projectstorm/react-canvas-core';\r\nimport { DiagramModel, NodeModel } from '@projectstorm/react-diagrams';\r\nimport Base from 'antd/lib/typography/Base';\r\nimport { SchemaNodeModel } from '../../schemanode/node/SchemaNodeModel';\r\n\r\n\r\n/**\r\n * Handles clipboard actions.\r\n */\r\nexport default class ClipboardAction extends Action {\r\n  constructor(areShortcutsAllowed : boolean) {\r\n    super({\r\n      type: InputType.KEY_DOWN,\r\n      fire: ({ event }) => {\r\n        if (!areShortcutsAllowed) return;\r\n        if (this.engine.getModel().isLocked()) return;\r\n\r\n        if (this.matchesInput(event)) {\r\n          event.preventDefault();\r\n\r\n          const e : any = event;\r\n          if (e.code === 'KeyX') this.handleCut();\r\n          if (e.code === 'KeyC') this.handleCopy();\r\n          if (e.code === 'KeyV') this.handlePaste();\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  matchesInput(event : any) : boolean{\r\n        return event.ctrlKey && (event.code === 'KeyX' || event.code === \"KeyC\" || \r\n        event.code === \"KeyV\")     \r\n  }\r\n\r\n  getSelectedComponents = () =>\r\n    this.engine\r\n      .getModel()\r\n      .getSelectedEntities()\r\n      .filter(entity => entity instanceof SchemaNodeModel)\r\n      .filter(entity => !entity.isLocked());\r\n\r\n  /** Cut */\r\n  handleCut() {\r\n    let selectNodes = this.getSelectedComponents() as SchemaNodeModel[]\r\n    let clonenode = selectNodes[0].clone()\r\n    const copie = clonenode.serialize()\r\n\r\n    localStorage.setItem('clipboard', JSON.stringify(copie));\r\n\r\n    selectNodes.forEach(model => model.remove());\r\n\r\n    this.engine.repaintCanvas();\r\n\r\n  };\r\n\r\n  /** Copy */\r\n  handleCopy() {\r\n    let selectNodes = this.getSelectedComponents() as SchemaNodeModel[]\r\n    let clonenode = selectNodes[0].clone()\r\n    const copie = clonenode.serialize()\r\n\r\n\r\n    console.log(copie)\r\n\r\n    localStorage.setItem('clipboard', JSON.stringify(copie));\r\n  };\r\n\r\n  onPromise(id : string) {\r\n    return new Promise<BaseModel>((resolve, reject) => {\r\n      let rs = new SchemaNodeModel()\r\n      resolve(rs);\r\n    });\r\n  }\r\n\r\n\r\n  /** Paste */\r\n  handlePaste() {\r\n\r\n\r\n    let clipboardstr = localStorage.getItem('clipboard')\r\n\r\n    if(clipboardstr == null) clipboardstr = \"\"\r\n\r\n    const clipboard = JSON.parse(clipboardstr);\r\n    if (!clipboard) return;\r\n\r\n    console.log(clipboard)\r\n\r\n\r\n    let pastemodel = new SchemaNodeModel()\r\n \r\n    let deserializeData : any = {\r\n      data : clipboard,\r\n      engine : this.engine,\r\n      registerModel: () => {},\r\n    }\r\n\r\n    pastemodel.deserialize(deserializeData)\r\n    \r\n  \r\n    pastemodel.setPosition(100, 100);\r\n\r\n    console.log(pastemodel)\r\n    let model = this.engine.getModel() as DiagramModel\r\n    model.addAll(pastemodel)\r\n\r\n\r\n    //this.engine.fireEvent( nodes: models , 'componentsAdded');\r\n\r\n    this.engine.repaintCanvas();\r\n  };\r\n\r\n\r\n\r\n\r\n  \r\n}\r\n","import * as React from 'react';\r\nimport { DiagramEngine, PortWidget } from '@projectstorm/react-diagrams-core';\r\nimport { SchemaPortModel } from './SchemaPortModel';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { MenuProvider  } from 'react-contexify';\r\n\r\n\r\nexport interface DefaultPortLabelProps {\r\n\tport: SchemaPortModel;\r\n\tengine: DiagramEngine;\r\n\r\n}\r\n\r\n\r\n\texport const PortLabel = styled.div`\r\n\t\tdisplay: flex;\r\n\t\tmargin-top: 1px;\r\n\t\talign-items: center;\r\n\t\t&:hover {\r\n\t\t\tbackground: rgb(192, 255, 0);\r\n\t\t}\r\n\t`;\r\n\r\n\texport const Label = styled.div`\r\n\t\tpadding: 0 5px;\r\n\t\tflex-grow: 1;\r\n\t`;\r\n\r\n\texport const Port = styled.div`\r\n\t\twidth: 16px;\r\n\t\theight: 21px;\r\n\t\tbackground: rgba(255, 255, 244, 0.1);\r\n\t\t&:hover {\r\n\t\t\tbackground: rgb(192, 255, 0);\r\n\t\t}\r\n\t`;\r\n\r\n\r\nexport class SchemaPortLabel extends React.Component<DefaultPortLabelProps> {\r\n\trender() {\r\n\t\tconst port = (\r\n\t\t\t<PortWidget engine={this.props.engine} port={this.props.port}>\r\n\t\t\t\t<Port />\r\n\t\t\t</PortWidget>\r\n\t\t);\r\n\t\tconst label = <Label>{this.props.port.getOptions().label}</Label>;\r\n\r\n\t\treturn (\r\n\t\t\t<MenuProvider id=\"nodeedit\" storeRef={false} >\r\n\t\t\t\t<PortLabel>\r\n\t\t\t\t{this.props.port.getOptions().in ? port : label}\r\n\t\t\t\t{this.props.port.getOptions().in ? label : port}\r\n\t\t\t\t</PortLabel>\r\n\t\t\t</MenuProvider>\r\n\t\t\t\r\n\t\t);\r\n\t}\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\r\nimport { SchemaNodeModel } from './SchemaNodeModel';\r\nimport { SchemaPortLabel } from '../port/SchemaPortLabelWidget';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/core';\r\nimport { SchemaPortModel } from '../port/SchemaPortModel';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\n\texport const Node = styled.div<{ background ?: string; selected: boolean }>`\r\n\t\r\n\t\r\n\r\n\t\tborder-style: solid;\r\n\r\n\t\tborder-color : grey;\r\n\r\n\t\tborder-width: thin;\r\n\r\n\t\tcolor: white;\r\n\t\t\r\n\t\toverflow: visible;\r\n\t\tfont-size: 13px;\r\n\t\t\r\n\t`;\r\n\r\n\texport const Title = styled.div`\r\n\t\tbackground-color: #005AA0;\r\n\t\tdisplay: flex;\r\n\t\tfont-weight: 600;\r\n\t\twhite-space: nowrap;\r\n\t\tjustify-items: center;\r\n\t`;\r\n\r\n\texport const TitleName = styled.div`\r\n\t\tmargin-left : 10px;\r\n\t\tflex-grow: 1;\r\n\t\tpadding: 10px 5px;\r\n\t`;\r\n\r\n\texport const Ports = styled.div`\r\n\t\tdisplay: flex;\r\n\t\tcolor : #5E666E;\r\n\t\tfont-weight: 600;\r\n\t\tbackground-color: white;\r\n\t`;\r\n\r\n\texport const PortsContainer = styled.div`\r\n\t\tflex-grow: 1;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\t&:first-of-type {\r\n\t\t\tmargin-right: 10px;\r\n\t\t}\r\n\t\t&:only-child {\r\n\t\t\tmargin-right: 0px;\r\n\t\t}\r\n\t`;\r\n\r\n\r\nexport interface DefaultNodeProps {\r\n\tnode: SchemaNodeModel;\r\n\tengine: DiagramEngine;\r\n}\r\n\r\n/**\r\n * Default node that models the DefaultNodeModel. It creates two columns\r\n * for both all the input ports on the left, and the output ports on the right.\r\n */\r\n\r\n\r\nexport class SchemaNodeWidget extends React.Component<DefaultNodeProps> {\r\n\r\n\r\n\t  fireAction (event : any) {\r\n\t\tthis.props.engine.getActionEventBus().fireAction({\r\n\t\t  event: {\r\n\t\t\t...event,\r\n\t\t\tkey: '',\r\n\t\t\tpreventDefault: () => {},\r\n          stopPropagation: () => {},\r\n\t\t  },\r\n\t\t});\r\n\t  }\r\n\r\n\t  fireDeleteEvent(engine : DiagramEngine){\r\n\t\tlet e = { type: 'keydown', ctrlKey: true, code: 'Delete' }\r\n\t\tthis.fireAction(e);\r\n\t  }\r\n\r\n\tfireDoubleClick(engine : DiagramEngine){\r\n\t\tconsole.log(\"double click\")\r\n\t\tif(engine != undefined){\r\n\t\r\n\t\t\tengine.fireEvent({ }, 'onDoubleClick');\r\n\t\t}else{\r\n\t\t\tconsole.log(\"unid\")\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\r\n\tgeneratePort = (port : SchemaPortModel) => {\r\n\t\r\n\t\treturn <SchemaPortLabel engine={this.props.engine} port={port} key={port.getID()}  />;\r\n\t};\r\n\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Node\r\n\t\t\t\tdata-default-node-name={this.props.node.getOptions().name}\r\n\t\t\t\tselected={this.props.node.isSelected()}\r\n\t\t\t\tbackground={this.props.node.getOptions().color} onDoubleClick={() => this.fireDoubleClick(this.props.engine)}>\r\n\t\t\t\t<Title>\r\n\t\t\t\t\t<TitleName>{this.props.node.getOptions().name}</TitleName>\r\n\t\t\t\t\t<IconButton  onClick={()=> this.fireDeleteEvent(this.props.engine)} color=\"inherit\" size=\"small\">\r\n          \t\t\t\t<DeleteOutlineIcon/>\r\n        \t\t\t</IconButton>\r\n\r\n\t\t\t\t</Title>\r\n\t\t\t\t<Ports>\r\n\t\t\t\t\t<PortsContainer>{_.map(this.props.node.getInPorts(), this.generatePort)}</PortsContainer>\r\n\t\t\t\t\t<PortsContainer>{_.map(this.props.node.getOutPorts(), this.generatePort)}</PortsContainer>\r\n\t\t\t\t</Ports>\r\n\t\t\t</Node>\r\n\t\t);\r\n\t}\r\n}","import * as React from 'react';\r\nimport { SchemaNodeModel } from './SchemaNodeModel';\r\nimport { SchemaNodeWidget } from './SchemaNodeWidget';\r\nimport { AbstractReactFactory , GenerateWidgetEvent } from '@projectstorm/react-canvas-core';\r\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\r\nimport { MenuProvider  } from 'react-contexify';\r\n\r\nexport class SchemaNodeFactory extends AbstractReactFactory<SchemaNodeModel, DiagramEngine> {\r\n\r\n\tconstructor() {\r\n\t\tsuper('default');\r\n\t}\r\n\t\r\n\r\n\tgenerateReactWidget(event : any): JSX.Element {\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<MenuProvider id=\"component\" storeRef={false} data={event.model}>\r\n\t\t\t\t<SchemaNodeWidget engine={this.engine} node={event.model}  />\r\n\t\t\t</MenuProvider>\r\n\t\t\t)\r\n\t}\r\n\r\n\tgenerateModel(initialConfig : any) {\r\n\t\treturn new SchemaNodeModel('Node 2', 'rgb(192,255,0)');\r\n\t}\r\n}","import createEngine, { DefaultLinkModel, DefaultNodeModel , DiagramEngine,  DiagramModel , PathFindingLinkFactory } from \"@projectstorm/react-diagrams\";\r\n\r\n\r\nimport {SchemaNodeModel} from '../schemanode/node/SchemaNodeModel'\r\nimport {SchemaNodeFactory} from '../schemanode/node/SchemaNodeFactory'\r\n\r\n\r\nfunction GetEngine() : DiagramEngine  {\r\n \r\n    let rs = createEngine({registerDefaultDeleteItemsAction: false,\r\n})\r\n\r\n    rs.getNodeFactories().registerFactory(new SchemaNodeFactory());\r\n\r\n\r\n    const model = new DiagramModel();\r\n\r\n\r\n    let snode =  new SchemaNodeModel({\r\n\t\tname: 'Product',\r\n\t\tcolor: 'rgb(0,192,255)'\r\n\t});\r\n\r\n    let productIdPort = snode.addField({fieldName : \"Id\" , fieldType : \"int\"})\r\n    snode.addField({fieldName : \"ProductName\" , fieldType : \"varchar\"})\r\n    let pnameport = snode.addField({fieldName : \"ProductPrice\" , fieldType : \"int\"})\r\n    snode.addField({fieldName : \"ProductCategory\" , fieldType : \"int\"})\r\n\r\n    snode.setPosition(100, 100);\r\n\r\n\r\n\r\n\r\n    const models = model.addAll(snode);\r\n\r\n    //snode2.addLinkForeignKey(link1.getID())\r\n    \r\n    models.forEach(m => {\r\n        m.registerListener({\r\n            \r\n\t\t\tselectionChanged: () => onclick(m.getID()),\r\n            onDoubleClick : () => ondbclick(m.getID())\r\n\t\t});\r\n\r\n    });\r\n\r\n    \r\n\r\n\t\r\n\r\n    /*\r\n    var node1 = new DefaultNodeModel({\r\n\t\tname: 'Node 1',\r\n\t\tcolor: 'rgb(0,192,255)'\r\n\t});\r\n\tnode1.setPosition(100, 100);\r\n\tlet port1 = node1.addOutPort('id');\r\n    node1.addInPort('int');\r\n\r\n\t//3-B) create another default node\r\n\tvar node2 = new DefaultNodeModel('Node 2', 'rgb(192,255,0)');\r\n\tlet port2 = node2.addInPort('product_id');\r\n    node2.addOutPort('int');\r\n\tnode2.setPosition(400, 100);\r\n\r\n\t// link the ports\r\n\tlet link1 = port1.link<DefaultLinkModel>(port2);\r\n\tlink1.getOptions().testName = 'Test';\r\n\tlink1.addLabel('Hello World!');\r\n    */\r\n    \r\n\r\n    rs.setModel(model);\r\n\r\n   \r\n    return rs\r\n}\r\n\r\nfunction ondbclick(id : string){\r\n    alert('double')\r\n}\r\n\r\nfunction onclick(id : String){\r\n    //alert(id)\r\n    //const dispatch = useDispatch()\r\n    //dispatch(ToggleEditor())\r\n    //store.dispatch(ToggleEditor())\r\n    console.log(id)\r\n   \r\n}\r\n\r\nconst engine = GetEngine()\r\nexport {engine , GetEngine}","import React, { FunctionComponent, useEffect , useState } from 'react'\r\n\r\n\r\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\r\n\r\nimport { DemoCanvasWidget } from './components/CanvasDiagram';\r\n\r\n\r\nimport { Toolbar } from './components/Toolbar'\r\nimport { AppToolbar } from './components/AppToolbar'\r\nimport {  DiagramModel } from \"@projectstorm/react-diagrams\";\r\n\r\nimport { ExportEditor } from './components/ExportEditor'\r\nimport {FileMenu}  from './components/FileMenu'\r\n\r\nimport { ContextMenus } from './components/ContextMenus/ContextMenus'\r\nimport { MenuProvider } from 'react-contexify';\r\n\r\nimport { DiagramController } from './DiagramController/DiagramCtr'\r\nimport { TableEditor } from './components/TableEditor'\r\n\r\nimport SimpleContext from './components/ContextMenus/SimpleContext'\r\nimport * as htmlToImage from 'html-to-image';\r\nimport BaseGenerate from './api/export/BaseGenerate';\r\nimport MySqlGenerate from './api/export/MySqlGenerate';\r\n\r\nimport {getAllTable} from './libs/tableUtil'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport Cookies from 'js-cookie'\r\n\r\nimport axios from 'axios'\r\n\r\nimport {User , defaultUser} from './interface/user'\r\n\r\nenum VisibleStatus {\r\n\tPublic,\r\n\tPrivate,\r\n\tProtected\r\n}\r\n\r\ninterface Project{\r\n\tprojectId ?: string,\r\n\tprojectName : string,\r\n\tprojectDescription : string,\r\n\tcreateAt ?: string,\r\n\tupdateAt ?: string,\r\n\tvisibleStatus : VisibleStatus,\r\n\tshareUrl ?: string  ,\r\n\tuserId : string,\r\n\tprojectDetail : any\r\n}\r\n\r\nexport const App: FunctionComponent = () => {\r\n\r\n\tconst [user, setuser] = useState(defaultUser())\r\n\r\n\tconst [update, setupdate] = useState(false)\r\n\r\n\tconst [diagram, setDiagram] = useState(new DiagramController())\r\n\r\n\tconst [toggleFileMenu, settoggleFileMenu] = useState(true)\r\n\r\n\tconst [currentUserId, setcurrentUserId] = useState(\"\")\r\n\r\n\tconst [currentProject, setcurrentProject] = useState(initProject())\r\n\r\n\tconst [isExportOpen, setisExportOpen] = useState(false)\r\n\r\n\tconst [saveData, setsaveData] = useState(\"\")\r\n\r\n\tconst [isEdit, setEdit] = useState(false)\r\n\r\n\tuseEffect(() => {\r\n\t\tdiagram.getEngine().registerListener({\r\n\t\t\tonDoubleClick: () => ToggleEditor()\r\n\t\t})\r\n\t\tisLogin()\r\n\t}, [])\r\n\r\n\tfunction isLogin(){\r\n\t\tlet token = Cookies.get(\"ertoken\")\r\n\t\tif(token === undefined || token === \"\") {\r\n\t\t\t//show login\r\n\t\t}else{\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\tconst onLogin = (userName : string , userPassword : string) => {\r\n\t\tlet url = \"localhost:8080/auth/login\"\r\n\t\talert('on login' + userName + userPassword)\r\n\t\t/*\r\n\t\taxios.post(url , {userName , userPassword}).then(rs=>{\r\n\t\t\tif(rs.status == 200){\r\n\t\t\t\tif(rs.data.access_token !== \"\"){\r\n\t\t\t\t\tlet data = rs.data\r\n\t\t\t\t\tlet userdata : User = {\r\n\t\t\t\t\t\tId : data.id,\r\n\t\t\t\t\t\tUserName : data.userName,\r\n\t\t\t\t\t\tUserLastName : data.userLastname,\r\n\t\t\t\t\t\tUserEmail : data.userEmail,\r\n\t\t\t\t\t\tUserPassword : userPassword\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetuser(userdata)\r\n\t\t\t\t\tCookies.set(\"ertoken\" , rs.data.access_token)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\t*/\r\n\t}\r\n\r\n\tfunction exportPng(filename : string) {\r\n\t\tlet node = document.getElementById('diagramcv');\r\n\t\tif (node == null) return\r\n\t\thtmlToImage.toPng(node)\r\n\t\t\t.then(function (dataUrl) {\r\n\t\t\t\tvar img = new Image();\r\n\t\t\t\timg.src = dataUrl;\r\n\t\t\t\tvar a = document.createElement('a');\r\n\t\t\t\t// toDataURL defaults to png, so we need to request a jpeg, then convert for file download.\r\n\t\t\t\ta.href = dataUrl\r\n\t\t\t\ta.download = filename;\r\n\t\t\t\ta.click();\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.error('oops, something went wrong!', error);\r\n\t\t\t});\r\n\t}\r\n\r\n\tfunction initProject() : Project{\r\n\t\tlet pid = uuidv4()\r\n\t\tlet project : Project = {\r\n\t\t\tprojectId : pid,\r\n\t\t\tprojectName : \"Project\",\r\n\t\t\tprojectDescription : \"\",\r\n\t\t\tvisibleStatus : VisibleStatus.Private,\r\n\t\t\tuserId : currentUserId,\r\n\t\t\tprojectDetail : \"\"\r\n\t\t}\r\n\t\treturn project\r\n\t}\r\n\r\n\tfunction openExport() { setisExportOpen(true) }\r\n\r\n\tfunction ToggleEditor() {\r\n\t\tsetEdit(!isEdit)\r\n\t}\r\n\r\n\tfunction onZoomFit() {\r\n\t\talert('zoom fit ')\r\n\t\tdiagram.getEngine().zoomToFit()\r\n\t}\r\n\r\n\tfunction newTable() {\r\n\t\tdiagram.newNode()\r\n\t}\r\n\r\n\tfunction saveSerial() {\r\n\t\tlet modelJson = diagram.getEngine().getModel().serialize()\r\n\r\n\t\tlet modelStr = JSON.stringify(modelJson)\r\n\r\n\t\t//new code\r\n\t\tlet rs : Project = {\r\n\t\t\tprojectName : \"topss\",\r\n\t\t\tprojectDescription : \"......\",\r\n\t\t\tvisibleStatus : VisibleStatus.Private,\r\n\t\t\tuserId : \"\",\r\n\t\t\tprojectDetail : modelJson\r\n\t\t}\r\n\r\n\t\tsetsaveData(modelStr)\r\n\r\n\t\tconsole.log(modelJson)\r\n\r\n\t\tdownloadFile(\"someer.er\" , modelStr)\r\n\t\t//new code\r\n\t\tdownloadFile(rs.projectName + \".er\" , JSON.stringify(rs))\r\n\t}\r\n\r\n\r\n\tfunction loadOpenFile() {\r\n\t\tvar elem = document.getElementById(\"fileinput\");\r\n\t\tif (elem && document.createEvent) {\r\n\t\t\tvar evt = document.createEvent(\"MouseEvents\");\r\n\t\t\tevt.initEvent(\"click\", true, false);\r\n\t\t\telem.dispatchEvent(evt);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction onLoadFile(e: any) {\r\n\t\talert(\"select\")\r\n\t\tvar input = e.target;\r\n\t\tconsole.log(e)\r\n\t\tvar reader = new FileReader();\r\n\t\treader.onload = (es) => {\r\n\t\t\tvar text: any = reader.result;\r\n\r\n\t\t\tconsole.log(text)\r\n\t\t\tlet model2 = new DiagramModel()\r\n\t\t\tlet obj: ReturnType<DiagramModel['serialize']> = JSON.parse(text);\r\n\t\t\tmodel2.deserializeModel(obj, diagram.engine)\r\n\t\t\tif (model2 == null) {\r\n\t\t\t\tconsole.log(\"model null\")\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\te.target.value = null\r\n\t\t\tdiagram.getEngine().setModel(model2)\r\n\r\n\t\t};\r\n\t\treader.readAsText(input.files[0]);\r\n\t}\r\n\r\n\tfunction loadSerial() {\r\n\r\n\t\tif (saveData == \"\") return\r\n\t\tlet str = saveData\r\n\t\tlet model2 = new DiagramModel()\r\n\t\tlet obj: ReturnType<DiagramModel['serialize']> = JSON.parse(str);\r\n\t\tmodel2.deserializeModel(obj, diagram.engine)\r\n\t\tif (model2 == null) {\r\n\t\t\tconsole.log(\"model null\")\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tdiagram.getEngine().setModel(model2)\r\n\t\ttogglePropUpdate()\r\n\t\tconsole.log(\"load sucess\")\r\n\t}\r\n\r\n\tfunction togglePropUpdate() {\r\n\t\tsetupdate(!update)\r\n\t}\r\n\r\n\tfunction downloadFile(fileName : string , content : string){\r\n\t\tvar a = document.createElement('a');\r\n\t\t// toDataURL defaults to png, so we need to request a jpeg, then convert for file download.\r\n\t\ta.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(content));\r\n\t\ta.setAttribute('download', fileName);\r\n\r\n\t\ta.style.display = 'none';\r\n\t\tdocument.body.appendChild(a);\r\n\r\n\t\ta.click();\r\n\r\n\t\tdocument.body.removeChild(a);\r\n\t}\r\n\r\n\tfunction exportSelect(filename : string,codeGen : BaseGenerate){\r\n\t\tlet tbs = getAllTable(diagram)\r\n\t\t//alert(JSON.stringify(tbs))\r\n\t\tlet str = codeGen.export(tbs)\r\n\t\talert(str)\r\n\r\n\t\tdownloadFile(filename , str)\r\n\t}\r\n\r\n\tfunction exportSql(filename : string){exportSelect(filename , new MySqlGenerate())}\r\n\r\n\tfunction zoomIn() {diagram.doZoom(20)}\r\n\r\n\tfunction zoomOut() {diagram.doZoom(-20)}\r\n\r\n\tfunction testEx(e : string){alert(e)}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\r\n\t\t\t<AppToolbar onExport={openExport}/>\r\n\t\t\t<Toolbar onZoomIn={zoomIn}\r\n\t\t\t\tonZoomOut={zoomOut} onZoomFit={loadOpenFile} newTable={newTable} onSave={saveSerial} \r\n\t\t\t\tonLoad={loadOpenFile} />\r\n\t\t\t<ExportEditor \r\n\t\t\t\tisOpen={isExportOpen} onclose={() => setisExportOpen(false)} exportTest={testEx}\r\n\t\t\t\texportPng={exportPng} exportPdf={exportPng} exportSql={exportSql} fileName={currentProject.projectName}\r\n\t\t\t/>\r\n\t\t\t<input type=\"file\" id=\"fileinput\" style={{ display: \"none\" }} onChange={onLoadFile}/>\r\n\t\t\t<FileMenu isOpen={toggleFileMenu} onLogin={onLogin} onclose={() => settoggleFileMenu(!toggleFileMenu)} />\r\n\t\t\t<TableEditor isOpen={isEdit} diagramctr={diagram} \r\n\t\t\tonclose={ToggleEditor} forceUpdate={update}/>\r\n\r\n\t\t\t<MenuProvider id=\"diagram\" storeRef={false} >\r\n\t\t\t\t<DemoCanvasWidget background=\"#E9E9E9\" color=\"#808080\" >\r\n\t\t\t\t\t<CanvasWidget engine={diagram.engine} className=\"canvas\" />\r\n\t\t\t\t</DemoCanvasWidget>\r\n\t\t\t</MenuProvider>\r\n\r\n\t\t\t<SimpleContext  />\r\n\r\n\t\t\t<ContextMenus copyFunc={diagram.copySelected} pasteFunc={diagram.pasteSelected} deleteFunc={diagram.deleteSelected}\r\n\t\t\tduplicateFunc={diagram.duplicateSelected} cutFunc={diagram.cutSelected} \r\n\t\t\tzoomIn={zoomIn} zoomOut={zoomOut}/>\r\n\r\n\t\t</React.Fragment>\r\n\r\n\t);\r\n\r\n}\r\n\r\n\r\n\r\n","\r\nimport * as _ from 'lodash';\r\n\r\n//import ClipboardAction from './actions/ClipboardAction';\r\nimport DeleteAction from './actions/DeleteAction';\r\nimport NewNodeAction from './actions/NewNodeAction';\r\nimport DuplicateAction from './actions/DuplicateAction';\r\n//import UndoRedoAction from './actions/UndoRedoAction';\r\nimport ZoomAction from './actions/ZoomAction';\r\nimport ClipboardAction from './actions/Clipboard'\r\nimport { Action } from '@projectstorm/react-canvas-core';\r\n\r\nimport { DiagramEngine } from '@projectstorm/react-diagrams';\r\nimport { GetEngine } from '../libs/engine'\r\nimport { SchemaNodeModel } from '../schemanode/node/SchemaNodeModel';\r\nimport { TableData } from '../components/TableEditor';\r\nimport { Field } from '../schemanode/node/SchemaNodeModel'\r\n\r\nexport class DiagramController {\r\n\r\n  isLock: boolean;\r\n  engine: DiagramEngine\r\n\r\n  constructor() {\r\n    this.isLock = false\r\n    this.engine = GetEngine()\r\n\r\n    this.initActions()\r\n\r\n    console.log(this.getEngine().getModel().getZoomLevel())\r\n\r\n    let links = this.getEngine().getModel().getLinks()\r\n\r\n    let models = this.getEngine().getModel().getModels()\r\n\r\n    console.log(links)\r\n\r\n    //let p1= links[0].getTargetPort()\r\n    //let nodemd = p1.getNode() as SchemaNodeModel\r\n\r\n    //links[0].remove()\r\n\r\n    //this.getEngine().repaintCanvas()\r\n\r\n    //alert(nodemd.getOptions().name)\r\n    //console.log(p1)\r\n  }\r\n\r\n\r\n\r\n  initActions() {\r\n\r\n\r\n    let actions: Action[] = [\r\n      new DeleteAction(true),\r\n      new NewNodeAction(true),\r\n      new DuplicateAction(true),\r\n      new ClipboardAction(true)\r\n\r\n    ]\r\n\r\n    actions.forEach(Action =>\r\n      this.engine\r\n        .getActionEventBus()\r\n        .registerAction(Action),\r\n    );\r\n\r\n  }\r\n\r\n  fireAction(event: any) {\r\n    this.engine.getActionEventBus().fireAction({\r\n      event: {\r\n        ...event,\r\n        key: '',\r\n        preventDefault: () => { },\r\n        stopPropagation: () => { },\r\n      },\r\n    });\r\n  }\r\n\r\n\r\n  currentNode(): SchemaNodeModel | undefined {\r\n    let entities = this.engine\r\n      .getModel()\r\n      .getSelectedEntities()\r\n      .filter(model => !model.isLocked());\r\n\r\n    if (entities.length == 0) return undefined\r\n\r\n    let node = entities[0]\r\n\r\n    if (node instanceof SchemaNodeModel === false) return undefined\r\n\r\n    let rs = node as SchemaNodeModel\r\n\r\n    return rs\r\n  }\r\n\r\n  linktest() {\r\n    this.linkNode()\r\n  }\r\n\r\n  linkNode() {\r\n    let nodes = this.getEngine().getModel().getNodes() as SchemaNodeModel[]\r\n    alert(nodes[1].getOptions().name)\r\n    let sourcePort = nodes[0].getOutPorts()[0]\r\n    let targetPort = nodes[1].getInPorts()[0]\r\n\r\n\r\n    let link = sourcePort.link(targetPort)\r\n\r\n    targetPort.reportPosition()\r\n    sourcePort.reportPosition()\r\n\r\n    this.getEngine().getModel().addAll(link);\r\n    this.getEngine().repaintCanvas()\r\n  }\r\n\r\n  updateNodeName(e: string) {\r\n    let node = this.currentNode()\r\n    if (node == undefined) return\r\n    node.getOptions().name = e\r\n    this.getEngine().repaintCanvas()\r\n  }\r\n\r\n  linkModel(targetNodeId: string,\r\n    targetNodeField: string, mainNodeField: string,) {\r\n    let node = this.currentNode()\r\n    if (node == undefined) return\r\n    let targetNode = this.engine.getModel().getNode(targetNodeId) as SchemaNodeModel\r\n    let link = node.linkForeignKey(targetNode, targetNodeField, mainNodeField)\r\n    if (link == undefined) return\r\n    this.engine.getModel().addAll(link)\r\n    this.engine.repaintCanvas()\r\n  }\r\n\r\n  setCurrentNode(node: SchemaNodeModel) {\r\n    this.engine.repaintCanvas()\r\n  }\r\n\r\n  updateNode(tb: TableData) {\r\n    let node = this.currentNode()\r\n\r\n    if (node == undefined) return\r\n\r\n    node.updateNode(tb)\r\n\r\n    this.getEngine().repaintCanvas()\r\n\r\n  }\r\n\r\n  testEdit() {\r\n\r\n    let node = this.currentNode()\r\n\r\n    let tb = {\r\n      tablename: \"top\",\r\n      fields: [{\r\n        fieldName: \"Id\",\r\n        fieldType: \"int\"\r\n      }, {\r\n        fieldName: \"ProductId\",\r\n        fieldType: \"varchar\"\r\n      }, {\r\n        fieldName: \"Id\",\r\n        fieldType: \"int\"\r\n      }\r\n      ]\r\n    }\r\n\r\n    if (node == undefined) return\r\n\r\n    node.updateNode(tb)\r\n\r\n    this.getEngine().repaintCanvas()\r\n\r\n  }\r\n\r\n  doZoom(value : number){\r\n    let model = this.getEngine().getModel()\r\n    let zoomLevel = model.getZoomLevel()\r\n    console.log(zoomLevel)\r\n    model.setZoomLevel(zoomLevel + value)\r\n    this.getEngine().repaintCanvas()\r\n  }\r\n\r\n  updateFieldOption(f: Field) {\r\n    let node = this.currentNode()\r\n    if (node == undefined) return\r\n    node.addOrUpdateFieldOption(f)\r\n  }\r\n\r\n\r\n  copySelected = () => {\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyC' });\r\n\r\n  }\r\n\r\n  newNode() {\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyB' });\r\n  }\r\n\r\n  duplicateSelected = () => {\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyD' });\r\n  }\r\n\r\n  cutSelected = () =>\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyX' });\r\n\r\n\r\n  pasteSelected = () =>\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyV' });\r\n\r\n  deleteSelected = () =>\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'Delete' });\r\n\r\n  undo = () =>\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyZ' });\r\n\r\n  zoomIn(event: any) {\r\n    this.fireAction({\r\n      clientX: event.clientX,\r\n      clientY: event.clientY,\r\n      type: 'wheel',\r\n      deltaY: +1,\r\n    });\r\n  }\r\n\r\n  zoomOut(event: any) {\r\n    this.fireAction({\r\n      clientX: event.clientX,\r\n      clientY: event.clientY,\r\n      type: 'wheel',\r\n      deltaY: -1,\r\n    });\r\n  }\r\n\r\n\r\n\r\n  getEngine(): DiagramEngine {\r\n    return this.engine\r\n  }\r\n\r\n\r\n\r\n}","import React , {FunctionComponent, useState} from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 0,\r\n    },\r\n    inputEdit : {\r\n      backgroundColor : \"#3F51B5\",\r\n      padding : 8,\r\n      color : \"white\",\r\n      border: \"none\",\r\n      borderRadius: 4,\r\n      fontSize : 20\r\n\r\n \r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }),\r\n);\r\n\r\ninterface AppbarProp {\r\n  title : string,\r\n  onDelete : () => void,\r\n  onEndEdit : (e : string) => void\r\n}\r\n\r\nexport const  Appbar : FunctionComponent<AppbarProp> = ({ onDelete , title , onEndEdit }) => {\r\n  const classes = useStyles();\r\n\r\n  const [isEdit, setisEdit] = useState(false)\r\n\r\n  const [textInput, settextInput] = useState(\"\")\r\n\r\n  function handleChange(e : any){\r\n    settextInput(e.target.value)\r\n  }\r\n\r\n  function handleBlur(){\r\n    setisEdit(!isEdit)\r\n    \r\n    onEndEdit(textInput)\r\n  }\r\n\r\n\r\n\r\n  function handleOpenEdit(){\r\n    setisEdit(true)\r\n    settextInput(title)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" elevation={0}>\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {(isEdit) ? \r\n           <input value={textInput} onChange={handleChange} onBlur={ handleBlur} className={classes.inputEdit} />\r\n         \r\n          :\r\n          <Typography  variant=\"h6\" className={classes.title} onClick={handleOpenEdit}>\r\n            {title}\r\n          </Typography>\r\n          }\r\n          <IconButton color=\"inherit\" onClick={onDelete}><DeleteOutlineIcon/></IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React, { FunctionComponent, useEffect, useMemo, useState } from 'react'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { Appbar } from './Appbar'\r\nimport TableMat from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport { BaseModel } from '@projectstorm/react-canvas-core'\r\n\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport { DiagramEngine, NodeModel } from '@projectstorm/react-diagrams';\r\nimport { SchemaNodeModel, Field } from '../schemanode/node/SchemaNodeModel';\r\nimport { DiagramController } from '../DiagramController/DiagramCtr';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nexport interface TableProps {\r\n  isOpen: boolean,\r\n  diagramctr: DiagramController,\r\n  forceUpdate: boolean,\r\n  onclose: () => void\r\n}\r\n\r\nexport interface TableData {\r\n  id?: string,\r\n  tablename: string,\r\n  fields: Field[]\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    styledTable: {\r\n      \"borderCollapse\": \"collapse\",\r\n      \"margin\": \"25px 0\", \"fontSize\": \"0.9em\", \"fontFamily\": \"sans-serif\",\r\n      \"minWidth\": \"400px\", \"boxShadow\": \"0 0 20px rgba(0, 0, 0, 0.15)\"\r\n    },\r\n    cell: {\r\n      padding: 10\r\n    }\r\n\r\n  }),\r\n);\r\n\r\n\r\nexport const TableEditor: FunctionComponent<TableProps> = ({ isOpen, diagramctr, onclose, forceUpdate }) => {\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  const [currentTable, setTable] = useState(getNodeData(diagramctr))\r\n\r\n  const [otherTable, setotherTable] = useState(getOtherTable())\r\n\r\n  const [textInput, settextInput] = useState(\"\")\r\n\r\n\r\n  const [isEdit, setisEdit] = useState(false)\r\n\r\n  const [currentSelectTableId, setcurrentSelectTableId] = useState(\"\")\r\n\r\n  const [currentFieldId, setcurrentFieldId] = useState(\"\")\r\n\r\n  const currentField = useMemo(() => loadTableFieldSelect(), [currentSelectTableId]);\r\n\r\n  const [toggleUpdate, settoggleUpdate] = useState(false)\r\n\r\n  const [currentEdit, setcurrentEdit] = useState(\"\")\r\n\r\n  const [typeSelect, settypeSelect] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    setTable(getNodeData(diagramctr))\r\n    console.log('update tb')\r\n  }, [isOpen, toggleUpdate, forceUpdate])\r\n\r\n  function getOtherTable(): TableData[] {\r\n\r\n\r\n    let rs: TableData[] = []\r\n    let alltb = diagramctr.getEngine().getModel().getNodes() as SchemaNodeModel[]\r\n    alltb.forEach(tb => {\r\n      let name = tb.getOptions().name\r\n      if (name == undefined) name = \"\"\r\n      let add: TableData = {\r\n        id: tb.getID(),\r\n        tablename: name,\r\n        fields: tb.getAllField()\r\n      }\r\n      rs.push(add)\r\n    });\r\n    return rs\r\n  }\r\n\r\n\r\n  function getNodeData(diagramctr: DiagramController): TableData {\r\n    let rs: TableData = {\r\n      id: \"\",\r\n      tablename: '',\r\n      fields: []\r\n    }\r\n    let node = diagramctr.currentNode()\r\n\r\n    if (node == undefined) return rs\r\n\r\n    if (node instanceof SchemaNodeModel) {\r\n      console.log(\"Start getNodeData function\")\r\n      let nodedata = node as SchemaNodeModel\r\n      let tbname = nodedata.getOptions().name\r\n      if (tbname === undefined) tbname = \"\"\r\n      rs.tablename = tbname\r\n      rs.id = nodedata.getID()\r\n      rs.fields = getFieldsData(nodedata)\r\n    }\r\n\r\n    return rs\r\n  }\r\n\r\n  function getFieldsData(node: SchemaNodeModel): Field[] {\r\n    let fieldlist = node.getAllField()\r\n    console.log(\"get all fields\")\r\n    console.log(fieldlist)\r\n    return fieldlist\r\n  }\r\n\r\n  function setEditField(id: string, fieldName: string) {\r\n    setisEdit(true)\r\n    settextInput(fieldName)\r\n    setcurrentEdit(id)\r\n  }\r\n\r\n  function closeEdit() {\r\n    setisEdit(true)\r\n    updateNode()\r\n    setcurrentEdit(\"\")\r\n  }\r\n\r\n  function updateNode() {\r\n    let newtb = currentTable\r\n\r\n    let indexof = newtb.fields.findIndex(f => f.fieldName == currentEdit)\r\n\r\n    if (indexof == -1) return\r\n\r\n    newtb.fields[indexof].fieldName = textInput\r\n\r\n    if (typeSelect != \"\") newtb.fields[indexof].fieldType = typeSelect\r\n    setTable(newtb)\r\n\r\n    diagramctr.updateNode(newtb)\r\n  }\r\n\r\n  function handleChange(e: any) {\r\n    settextInput(e.target.value)\r\n  }\r\n\r\n  function handleTypeChange(e: any) {\r\n    settypeSelect(e.target.value)\r\n  }\r\n\r\n  function onDelete() {\r\n    let node = diagramctr.currentNode()\r\n    if (node == undefined) return\r\n    diagramctr.deleteSelected()\r\n    onclose()\r\n  }\r\n\r\n  function newField() {\r\n    let node = diagramctr.currentNode()\r\n    if (node == undefined) return\r\n    node.AddNewField()\r\n\r\n    let newtb = currentTable\r\n    newtb.fields.push({\r\n      fieldName: \"test\",\r\n      fieldType: \"int\"\r\n    })\r\n    setTable(newtb)\r\n\r\n    settoggleUpdate(!toggleUpdate)\r\n\r\n    diagramctr.getEngine().repaintCanvas()\r\n  }\r\n\r\n  function removeField(id: string | undefined) {\r\n    if (id == undefined) return\r\n    let node = diagramctr.currentNode()\r\n    if (node == undefined) return\r\n    node.removeFieldbyId(id)\r\n    settoggleUpdate(!toggleUpdate)\r\n    diagramctr.getEngine().repaintCanvas()\r\n  }\r\n\r\n  function onSelectTableChange(e: any) {\r\n    setcurrentSelectTableId(e.target.value)\r\n  }\r\n\r\n  function loadTableFieldSelect(): Field[] {\r\n    if (currentSelectTableId == \"\") return []\r\n    let tb = otherTable.find(t => t.id === currentSelectTableId)\r\n    if (tb == undefined) return []\r\n    return tb.fields\r\n  }\r\n\r\n  function onChangeFieldSelect(e: any) {\r\n    let targetPortOutId = e.target.value\r\n    let sourceField = currentTable.fields.find(f => f.fieldName == currentEdit)\r\n\r\n    setcurrentFieldId(targetPortOutId)\r\n\r\n    let currentTableId = (currentTable.id == undefined) ? \"\" : currentTable.id == undefined\r\n    if (currentTableId == currentSelectTableId || sourceField == undefined) return // if link self table and selt field\r\n    alert('on link')\r\n\r\n    let sourceFieldId = (sourceField.inId == undefined) ? \"\" : sourceField.inId\r\n    diagramctr.linkModel(currentSelectTableId, targetPortOutId, sourceFieldId)\r\n\r\n  }\r\n\r\n  function onSelectForeignKey() {\r\n    let node = diagramctr.currentNode() as SchemaNodeModel\r\n    if (node == undefined) return\r\n    let field = currentTable.fields.find(f => f.fieldName == currentEdit)\r\n\r\n    if (field == undefined) return\r\n\r\n    let portid = field.inId\r\n    if (portid == undefined) portid = \"\"\r\n\r\n    let option = {\r\n      portId: portid,\r\n      fkTb: currentSelectTableId,\r\n      fkField: currentFieldId\r\n    }\r\n    //node.addOrUpdateFieldOption(option)\r\n    diagramctr.getEngine().repaintCanvas()\r\n  }\r\n\r\n  function onNameChange(e: string) {\r\n    let newtb = currentTable\r\n    newtb.tablename = e\r\n    setTable(newtb)\r\n\r\n    diagramctr.updateNodeName(e)\r\n\r\n    settoggleUpdate(!toggleUpdate)\r\n\r\n\r\n  }\r\n\r\n  function getFieldOption(f: Field, optionName: string): any {\r\n    let fieldOption = f.fieldOption\r\n    if (fieldOption == undefined) {\r\n      console.log('field option undifine')\r\n      return false\r\n    }\r\n    if (optionName == \"pk\") return fieldOption.pk\r\n    if (optionName == \"fk\") return fieldOption.fk\r\n\r\n  }\r\n\r\n  function setFieldOption(e: any, idField: string | undefined, optionName: string) {\r\n\r\n    if (idField == undefined) return\r\n\r\n    console.log(optionName)\r\n\r\n    let fieldIndexof = currentTable.fields.findIndex(f => f.inId == idField)\r\n    let tb = currentTable\r\n    let newfieldOption = tb.fields[fieldIndexof].fieldOption\r\n    if (newfieldOption == undefined) return\r\n\r\n    if (optionName == \"pk\") {\r\n      newfieldOption.pk = !newfieldOption.pk\r\n    }\r\n    if (optionName == \"fk\") {\r\n      newfieldOption.fk = !newfieldOption.fk\r\n    }\r\n\r\n    tb.fields[fieldIndexof].fieldOption = newfieldOption\r\n    setTable(tb)\r\n\r\n    console.log(newfieldOption)\r\n    diagramctr.updateFieldOption(tb.fields[fieldIndexof])\r\n    settoggleUpdate(!toggleUpdate)\r\n  }\r\n\r\n  return <Drawer anchor={\"right\"} open={isOpen} style={{ width: 600 }} onClose={onclose}>\r\n    <div>\r\n      <Appbar onDelete={onDelete} title={currentTable.tablename} onEndEdit={onNameChange}></Appbar>\r\n      <TableContainer>\r\n        <TableMat aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className={classes.cell}>Field Name</TableCell>\r\n              <TableCell className={classes.cell}>Type Name</TableCell>\r\n              <TableCell className={classes.cell}>PK</TableCell>\r\n              <TableCell className={classes.cell}>FK</TableCell>\r\n              <TableCell className={classes.cell}>Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {currentTable.fields.map((row: Field, index: number) => (\r\n              <TableRow key={row.fieldName} className={classes.cell}>\r\n                {(isEdit && currentEdit == row.fieldName) ?\r\n                  <>\r\n                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\r\n                      <input onBlur={() => closeEdit()}\r\n                        onChange={handleChange} value={textInput} />\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\r\n                      <select onChange={handleTypeChange} value={typeSelect} >\r\n                        <option value=\"int\">Interger</option>\r\n                        <option value=\"varchar\">Varchar</option>\r\n                        <option value=\"float\">Float</option>\r\n                        <option value=\"bool\">Boolean</option>\r\n                      </select>\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\r\n\r\n                      <select placeholder=\"Select Table\" value={currentSelectTableId} onChange={onSelectTableChange}>\r\n                        {otherTable.map(o => <option key={o.id} value={o.id}>{o.tablename}</option>)}\r\n                      </select>\r\n\r\n                      <select placeholder=\"Select Field\" value={currentFieldId} onChange={onChangeFieldSelect}>\r\n                        {currentField.map(f => <option key={f.fieldName} value={f.outId}>{f.fieldName}</option>)}\r\n                      </select>\r\n                    </TableCell>\r\n                  </>\r\n                  :\r\n                  <>\r\n                    <TableCell className={classes.cell} component=\"th\" scope=\"row\" onClick={() => setEditField(row.fieldName, row.fieldName)}>\r\n                      {row.fieldName}\r\n                    </TableCell>\r\n\r\n                    <TableCell className={classes.cell} component=\"th\" scope=\"row\" onClick={() => setEditField(row.fieldName, row.fieldName)}>\r\n                      {row.fieldType}\r\n                    </TableCell>\r\n                  </>\r\n                }\r\n\r\n                <TableCell className={classes.cell}>\r\n                  <input type=\"checkbox\" checked={(getFieldOption(row, \"pk\"))}\r\n                    onChange={(e) => setFieldOption(e, row.inId, \"pk\")} key={`pk${row.inId}`} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <input type=\"checkbox\" checked={(getFieldOption(row, \"fk\"))}\r\n                    onChange={(e) => setFieldOption(e, row.inId, \"fk\")} />\r\n                </TableCell>\r\n                <TableCell className={classes.cell} >\r\n                  <IconButton onClick={() => removeField(row.inId)} size=\"small\">\r\n                    <DeleteOutlineIcon></DeleteOutlineIcon>\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </TableMat>\r\n      </TableContainer>\r\n      <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => newField()}>\r\n        <AddCircleOutlineIcon />\r\n      </IconButton>\r\n    </div>\r\n  </Drawer>\r\n}","import React , {FunctionComponent} from 'react';\r\n\r\nimport { Menu, Item, Separator } from 'react-contexify';\r\n\r\nimport { Redo, Undo, Paste, ZoomIn, ZoomOut } from '../Icons';\r\nimport Key from './KeyMenu';\r\nimport ContextMenuIconContainer from './ContextMenuIconContainer';\r\nimport ContextMenuShortcutContainer from './ContextMenuShortcutContainer';\r\n\r\nimport {ContextFunction} from './FunctionList'\r\n\r\n\r\nexport const SimpleContext : FunctionComponent = () => (\r\n  <Menu id=\"nodeedit\">\r\n  <Item>\r\n    <ContextMenuIconContainer>\r\n      <Paste />\r\n    </ContextMenuIconContainer>\r\n    Paste\r\n    <ContextMenuShortcutContainer>\r\n      <Key>CTRL</Key>\r\n      <Key>V</Key>\r\n    </ContextMenuShortcutContainer>\r\n  </Item>\r\n\r\n  <Separator />\r\n\r\n  <Item>\r\n    <ContextMenuIconContainer>\r\n      <ZoomIn />\r\n    </ContextMenuIconContainer>\r\n    Zoom in\r\n  </Item>\r\n  <Item>\r\n    <ContextMenuIconContainer>\r\n      <ZoomOut />\r\n    </ContextMenuIconContainer>\r\n    Zoom out\r\n  </Item>\r\n\r\n  <Separator />\r\n\r\n  <Item>\r\n    <ContextMenuIconContainer>\r\n      <Undo />\r\n    </ContextMenuIconContainer>\r\n    Undo\r\n    <ContextMenuShortcutContainer>\r\n      <Key>CTRL</Key>\r\n      <Key>Z</Key>\r\n    </ContextMenuShortcutContainer>\r\n  </Item>\r\n\r\n  <Item>\r\n    <ContextMenuIconContainer>\r\n      <Redo />\r\n    </ContextMenuIconContainer>\r\n    Redo\r\n    <ContextMenuShortcutContainer>\r\n      <Key>CTRL</Key>\r\n      <Key>SHIFT</Key>\r\n      <Key>Z</Key>\r\n    </ContextMenuShortcutContainer>\r\n  </Item>\r\n</Menu>\r\n);\r\n\r\nexport default SimpleContext;","import BaseGenerate from \"./BaseGenerate\"\r\n\r\nclass MySqlGenerate extends BaseGenerate {\r\n\r\n    getFields(field : any , isLastLine : boolean = false) : string{\r\n        let newLineAndTab = \", \\n \\t\"\r\n        let rs = `${field.fieldName} ${field.fieldType}` \r\n        if(isLastLine == false) rs += newLineAndTab\r\n        return rs \r\n    }\r\n  \r\n    getCreateTable(tb : any) : string{\r\n        let fields = ``\r\n        tb.fields.forEach((f: any , i : number)=>{\r\n            let isLastLine = false\r\n            if(tb.fields.length-1 == i) isLastLine = true\r\n            fields += this.getFields(f , isLastLine)\r\n        })\r\n\r\n        return `CREATE TABLE ${tb.tablename} (\\n \\t${fields} \\n ) `\r\n    }\r\n\r\n    export(data : any[]) : any {\r\n\r\n        let rs = ``\r\n       data.forEach(d=>{\r\n          rs += this.getCreateTable(d)\r\n          rs += \"\\n \\n\"\r\n       })\r\n       return rs\r\n    }\r\n}\r\n\r\nexport default MySqlGenerate\r\n  ","class BaseGenerate {\r\n\r\n    getFields(field : any) : string{\r\n        return `` \r\n    }\r\n  \r\n    getCreateTable(tb : any) : string{\r\n        return ``\r\n    }\r\n\r\n    export(data : any[]) : any {\r\n    \r\n      return ''\r\n    }\r\n}\r\n\r\nexport default BaseGenerate\r\n  ","export interface User{\r\n    Id : string,\r\n    UserName : string,\r\n    UserLastName : string,\r\n    UserEmail : string,\r\n    UserPassword : string\r\n}\r\n\r\nexport function defaultUser() : User{\r\n    let rs : User = {\r\n        Id : \"\",\r\n        UserName : \"\",\r\n        UserLastName :  \"\",\r\n        UserEmail : \"\",\r\n        UserPassword : \"\"\r\n    }\r\n    return rs\r\n}","import { TableData } from \"../components/TableEditor\";\r\nimport { DiagramController } from \"../DiagramController/DiagramCtr\";\r\nimport { SchemaNodeModel } from \"../schemanode/node/SchemaNodeModel\";\r\n\r\nfunction getAllTable(diagram : DiagramController) : TableData[]{\r\n    let rs : TableData[] = []\r\n    let alltb = diagram.getEngine().getModel().getNodes() as SchemaNodeModel[]\r\n    alltb.forEach(tb => {\r\n      let name =tb.getOptions().name\r\n      if(name == undefined) name = \"\"\r\n      let add : TableData = {\r\n        id : tb.getID(),\r\n        tablename : name,\r\n        fields : tb.getAllField()\r\n      }\r\n      rs.push(add)\r\n    });\r\n    return rs\r\n}\r\n\r\nexport {getAllTable}","\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport {App} from './App'\n\nReactDOM.render(   \n    <App/>\n,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}