{"version":3,"sources":["components/CanvasDiagram.tsx","components/Toolbar.tsx","components/AppToolbar.tsx","components/ExportEditor.tsx","components/Icons/Copy.jsx","components/Icons/Cut.jsx","components/Icons/Delete.jsx","components/Icons/Duplicate.jsx","components/Icons/Paste.jsx","components/Icons/Redo.jsx","components/Icons/Settings.jsx","components/Icons/Undo.jsx","components/Icons/ZoomIn.jsx","components/Icons/ZoomOut.jsx","components/ContextMenus/KeyMenu.jsx","components/ContextMenus/ContextMenuIconContainer.jsx","components/ContextMenus/ContextMenuShortcutContainer.jsx","components/ContextMenus/ComponentContextMenu.tsx","components/ContextMenus/DiagramContextMenu.tsx","components/ContextMenus/ContextMenus.tsx","DiagramController/actions/DeleteAction.ts","schemanode/link/SchemaLinkModel.ts","schemanode/port/SchemaPortModel.ts","schemanode/node/SchemaNodeModel.ts","DiagramController/actions/NewNodeAction.ts","DiagramController/actions/DuplicateAction.ts","DiagramController/actions/Clipboard.ts","schemanode/port/SchemaPortLabelWidget.tsx","schemanode/node/SchemaNodeWidget.tsx","schemanode/node/SchemaNodeFactory.tsx","libs/engine.ts","DiagramController/DiagramCtr.tsx","components/Appbar.tsx","components/TableEditor.tsx","components/ContextMenus/SimpleContext.tsx","api/export/MySqlGenerate.ts","api/export/BaseGenerate.ts","reducer/share/type.ts","interface/project.ts","reducer/share/action.ts","pages/editor.tsx","reducer/auth/type.ts","reducer/project/type.ts","libs/tableUtil.ts","components/Document/Sidebar.tsx","interface/user.ts","reducer/auth/action.ts","reducer/project/action.ts","reducer/auth/thunkaction.ts","components/Document/MainHead.tsx","reducer/loadapp.ts","components/ConfrimDialog.tsx","components/Document/FileList.tsx","reducer/project/thunkaction.ts","components/Document/ProjectForm.tsx","pages/document.tsx","pages/signin.tsx","pages/signup.tsx","App.tsx","reducer/auth/auth.ts","reducer/share/share.ts","reducer/project/project.ts","store/index.ts","index.tsx"],"names":["CT","styled","div","p","background","DemoCanvasWidget","color","id","this","props","children","React","useStyles","makeStyles","theme","createStyles","root","border","palette","divider","borderRadius","shape","backgroundColor","text","secondary","margin","spacing","Toolbar","onSave","onLoad","onZoomIn","onZoomOut","onZoomFit","newTable","classes","Grid","container","alignItems","className","onClick","style","display","fontSize","Divider","orientation","flexItem","Select","MenuItem","value","flexGrow","title","menu","marginRight","menuButton","AppToolbar","onExport","isApiLoading","useSelector","state","ShareReducer","isLoading","AppBar","position","variant","IconButton","edge","aria-label","Typography","Badge","badgeContent","Button","marginLeft","startIcon","CircularProgress","width","height","MenuEnum","LEFT","MenuList","Menu","Right","SqlExport","code","fileName","isRender","onDownloadClick","onInputChange","TextField","label","onChange","multiline","rowsMax","marginTop","ImageExport","imageType","ExportEditor","isOpen","onclose","exportPng","exportSql","exportTest","useState","Image","currentMenu","setcurrentMenu","currentFileName","setcurrentFileName","useEffect","handleFileNameInput","e","target","Drawer","anchor","open","onClose","role","size","MySql","light","Copy","viewBox","fill","stroke","strokeWidth","x","y","rx","ry","d","Cut","cx","cy","r","x1","y1","x2","y2","Delete","points","Duplicate","transform","Paste","Redo","Settings","Undo","ZoomIn","ZoomOut","Container","span","Key","ContextMenuIconContainer","ContextMenuShortcutContainer","ComponentContextMenu","copyFunc","pasteFunc","deleteFunc","duplicateFunc","cutFunc","zoomIn","zoomOut","DiagramContextMenu","redoFunc","undoFunc","ContextMenus","DeleteAction","areShortcutsAllowed","type","InputType","KEY_DOWN","fire","event","console","log","JSON","stringify","engine","getModel","isLocked","matchesInput","preventDefault","handleAction","getSelectedEntities","filter","model","forEach","remove","repaintCanvas","ctrlKey","Action","SchemaLinkModel","labelset","alert","labels","DefaultLinkModel","SchemaPortModel","DefaultPortModel","SchemaNodeModel","options","name","portsIn","portsOut","fieldOptions","lookupTable","clone","getID","i","length","portId","indexof","findIndex","fieldIndex","f","splice","removeField","port","getOptions","in","indexOf","tb","fields_tb","fields","getAllField","fieldName","fieldType","field","portin","addInPort","portout","addOutPort","add","ai","pk","fk","fkTb","fkField","push","removePort","addField","inId","undefined","fieldOption","targetNode","targetIdPort","sourceInIdPort","targetPort","getPortFromID","sourceport","link","reportPosition","portins","rs","getField","index","fieldOptionIndex","outId","after","uid","uuidv4","alignment","PortModelAlignment","addPort","RIGHT","data","_","portsInOrder","portsOutOrder","c","NodeModel","NewNodeAction","snode","setPosition","addAll","DuplicateAction","clones","entity","BaseModel","map","clearSelection","addNode","setSelected","ClipboardAction","handleCut","handleCopy","handlePaste","getSelectedComponents","selectNodes","copie","serialize","localStorage","setItem","Promise","resolve","reject","clipboardstr","getItem","clipboard","parse","pastemodel","deserializeData","registerModel","deserialize","PortLabel","Label","Port","SchemaPortLabel","storeRef","Node","Title","TitleName","Ports","PortsContainer","SchemaNodeWidget","generatePort","getActionEventBus","fireAction","key","stopPropagation","fireEvent","data-default-node-name","node","selected","isSelected","onDoubleClick","fireDoubleClick","fireDeleteEvent","getInPorts","getOutPorts","SchemaNodeFactory","initialConfig","AbstractReactFactory","GetEngine","createEngine","registerDefaultDeleteItemsAction","getNodeFactories","registerFactory","DiagramModel","setModel","DiagramController","isLock","copySelected","duplicateSelected","cutSelected","pasteSelected","deleteSelected","undo","initActions","getEngine","getZoomLevel","links","getLinks","getModels","registerAction","entities","selectPort","selectPortOut","relationName","linkPort","linkPortOut","Object","prototype","hasOwnProperty","call","element","setLabels","addLabel","model2","obj","deserializeModel","modelset","linkNode","nodes","getNodes","sourcePort","currentNode","targetNodeId","targetNodeField","mainNodeField","getNode","linkForeignKey","updateNode","tablename","zoomLevel","setZoomLevel","addOrUpdateFieldOption","clientX","clientY","deltaY","inputEdit","padding","Appbar","onDelete","onEndEdit","isEdit","setisEdit","textInput","settextInput","elevation","onBlur","borderBottom","styledTable","cell","TableEditor","diagramctr","forceUpdate","getNodeData","currentTable","setTable","setrelationName","getOtherTable","otherTable","setotherTable","currentSelectTableId","setcurrentSelectTableId","currentFieldId","setcurrentFieldId","currentField","useMemo","find","t","loadTableFieldSelect","toggleUpdate","settoggleUpdate","currentEdit","setcurrentEdit","typeSelect","settypeSelect","nodedata","tbname","getFieldsData","setEditField","closeEdit","newtb","handleChange","handleTypeChange","onSelectTableChange","onChangeFieldSelect","targetPortOutId","sourceField","sourceFieldId","linkModel","getFieldOption","optionName","setFieldOption","idField","fieldIndexof","newfieldOption","updateFieldOption","updateNodeName","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","row","Fragment","component","scope","checked","removeFieldbyId","paddingBottom","paddingTop","colSpan","Collapse","timeout","unmountOnExit","Box","placeholder","disabled","o","minWidth","portid","portOutId","portIn","portOut","connectRealation","onSelectRelation","AddNewField","newField","SimpleContext","MySqlGenerate","isLastLine","newLineAndTab","getFields","getCreateTable","ShareActionType","projectToJson","projectName","ProjectName","projectDescription","ProjectDescription","projectDetail","ProjectDetail","user","UserId","visibleStatus","VisibleStatus","shareUrl","ShareUrl","ToggleLoading","TOGGLE_LOADING","payload","AuthActionType","ProjectActionType","Editor","projectId","useParams","AuthReducer","dispatch","useDispatch","saveSnack","setsaveSnack","update","setisLogin","diagram","settoggleFileMenu","Private","Id","initProject","currentProject","isExportOpen","setisExportOpen","setEdit","useSnackbar","registerListener","ToggleEditor","token","Cookies","get","axios","defaults","headers","common","loaduserAndProject","isLogger","loadProjectDataApi","then","saveDataByString","saveProject","a","newproject","api","modelstr","put","filename","document","getElementById","htmlToImage","dataUrl","src","createElement","href","download","click","catch","error","downloadFile","content","setAttribute","encodeURIComponent","body","appendChild","removeChild","doZoom","maxSnack","clearDiagram","newNode","elem","createEvent","evt","initEvent","dispatchEvent","Snackbar","anchorOrigin","vertical","horizontal","message","action","exportPdf","codeGen","tbs","getAllTable","str","export","exportSelect","input","reader","FileReader","onload","es","result","readAsText","files","drawerPaper","whiteSpace","transition","transitions","create","easing","sharp","duration","enteringScreen","toolbarIcon","justifyContent","mixins","toolbar","Sidebar","paper","List","ListItem","button","ListItemIcon","ListItemText","primary","jsonToUser","_id","UserName","userName","UserLastName","userlastname","UserEmail","userEmail","UserPassword","userPassword","SetUser","SET_USER","SetLoginState","SET_LOGIN","SetProject","SET_PROJECT","NewProject","NEW_PROJECT","DeleteProject","DELETE_PROJECT","signIn","login","post","status","access_token","set","register","paddingRight","appBar","zIndex","drawer","leavingScreen","appBarShift","menuButtonHidden","appBarSpacer","overflow","MainHead","noWrap","initApp","userUrl","baseUrl","projectUrl","all","spread","userrs","projectrs","projects","project","ConfrimDialog","onConfrim","handleClose","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","FileList","isConfrimModal","setisConfrimModal","currentSelect","setcurrentSelect","ProjectReducer","to","ListItemAvatar","Avatar","ListItemSecondaryAction","url","delete","ProjectForm","setprojectName","setprojectDescription","Modal","Form","TOGGLE_MODAL","newProjectAsync","ExTemplate","drawerPaperClose","overflowX","breakpoints","up","flexDirection","fixedHeight","Document","isLogin","addProjectModal","Backdrop","CssBaseline","maxWidth","path","Copyright","align","Link","Date","getFullYear","avatar","main","form","submit","SignIn","setuserName","setuserPassword","onLogin","loginParam","noValidate","required","fullWidth","autoComplete","FormControlLabel","control","Checkbox","item","xs","mt","SignUp","userLastname","setuserLastname","setuserEmail","App","exact","initialState","err","confrimModal","rootReducer","combineReducers","UPDATE_USER","TOGGLE_CONFRIM_MODAL","store","createStore","applyMiddleware","thunkMiddleware","configureStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.fd9aaa70.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\n//import { useSelector } from 'react-redux'\r\n\r\n\r\n\r\nexport interface DemoCanvasWidgetProps {\r\n\tcolor?: string;\r\n\tbackground?: string;\r\n}\r\n\r\nexport const CT = styled.div<{ color: string; background: string }>`\r\ndisplay : flex;\r\njustify-content: center;\r\nbackground-color: ${(p) => p.background};\r\n\r\n\r\n`;\r\n\r\n\texport const Container = styled.div<{ color: string; background: string }>`\r\n\r\n\t\tbackground-color: ${(p) => p.background};\r\n\t\tbackground-size: 50px 50px;\r\n\t\r\n\t\tbackground-image: linear-gradient(\r\n\t\t\t\t0deg,\r\n\t\t\t\ttransparent 24%,\r\n\t\t\t\t${(p) => p.color} 25%,\r\n\t\t\t\t${(p) => p.color} 26%,\r\n\t\t\t\ttransparent 27%,\r\n\t\t\t\ttransparent 74%,\r\n\t\t\t\t${(p) => p.color} 75%,\r\n\t\t\t\t${(p) => p.color} 76%,\r\n\t\t\t\ttransparent 77%,\r\n\t\t\t\ttransparent\r\n\t\t\t),\r\n\t\t\tlinear-gradient(\r\n\t\t\t\t90deg,\r\n\t\t\t\ttransparent 24%,\r\n\t\t\t\t${(p) => p.color} 25%,\r\n\t\t\t\t${(p) => p.color} 26%,\r\n\t\t\t\ttransparent 27%,\r\n\t\t\t\ttransparent 74%,\r\n\t\t\t\t${(p) => p.color} 75%,\r\n\t\t\t\t${(p) => p.color} 76%,\r\n\t\t\t\ttransparent 77%,\r\n\t\t\t\ttransparent\r\n\t\t\t);\r\n\t`;\r\n\r\n\r\nexport class DemoCanvasWidget extends React.Component<DemoCanvasWidgetProps> {\r\n\t//public schemax  = useSelector(getSchema)\r\n\trender() {\r\n\t\t//console.log(this.schemax)\r\n\t\treturn (\r\n\t\t\t<CT id=\"diagramcv\"\r\n\t\t\t\tbackground={this.props.background || 'rgb(60, 60, 60)'}\r\n\t\t\t\tcolor={this.props.color || 'rgba(255,255,255, 0.05)'}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</CT>\r\n\t\t);\r\n\t}\r\n}","import React , {FunctionComponent} from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Redo from '@material-ui/icons/Redo';\r\nimport Undo from '@material-ui/icons/Undo';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\r\nimport ZoomOutIcon from '@material-ui/icons/ZoomOut';\r\nimport BookmarksIcon from '@material-ui/icons/Bookmarks';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport TableChartIcon from '@material-ui/icons/TableChart';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n\r\n      border: `1px solid ${theme.palette.divider}`,\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: '#F1F1F1',\r\n      color: theme.palette.text.secondary,\r\n      '& svg': {\r\n        margin: theme.spacing(1.0),\r\n      },\r\n      '& hr': {\r\n        margin: theme.spacing(0, 0.5),\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\ninterface ToolbarFunction{\r\n  onZoomIn : () => void,\r\n  onZoomOut : () => void,\r\n  onZoomFit : () => void,\r\n  onSave : () => void,\r\n  onLoad : () => void,\r\n  newTable: () => void\r\n}\r\n\r\nexport const Toolbar: FunctionComponent<ToolbarFunction> = ({onSave , onLoad , onZoomIn , onZoomOut , onZoomFit , newTable }) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Grid container alignItems=\"center\" className={classes.root}>\r\n        <div > \r\n        <TableChartIcon onClick={newTable} style={{display:\"block\"}} fontSize=\"large\"></TableChartIcon>\r\n       <span>New Table</span>\r\n        \r\n        </div>\r\n        <Grid>\r\n        <LaunchIcon></LaunchIcon>\r\n        Export\r\n        </Grid>\r\n\r\n        <Grid>\r\n        <FileCopy></FileCopy>\r\n        Copy\r\n        </Grid>\r\n\r\n        <Grid>\r\n        <PrintIcon></PrintIcon>\r\n        Print\r\n        </Grid>\r\n          \r\n          \r\n          \r\n          \r\n          <Divider orientation=\"vertical\" flexItem />\r\n        <Redo />\r\n        <Undo />\r\n        <Divider orientation=\"vertical\" flexItem />\r\n        <Select>\r\n        <MenuItem value={\"50%\"}>50%</MenuItem>\r\n          <MenuItem value={\"75%\"}>75%</MenuItem>\r\n          <MenuItem value={\"100%\"}>100%</MenuItem>\r\n        </Select>\r\n        <ZoomInIcon onClick={onZoomIn} />\r\n        <ZoomOutIcon  onClick={onZoomOut}/>\r\n        <ZoomOutIcon  onClick={onZoomFit}/>\r\n        <Divider orientation=\"vertical\" flexItem />\r\n        <BookmarksIcon onClick={onSave}></BookmarksIcon>\r\n        <DeleteIcon onClick={onLoad}></DeleteIcon>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","\r\nimport React , {FunctionComponent} from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../store';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { Button } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n\r\n    },\r\n    menu : {\r\n        marginRight : 10\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n  }),\r\n);\r\n\r\ninterface ToolbarFunction {\r\n  onExport : () => void,\r\n  onSave : () => void\r\n\r\n}\r\n\r\nexport const AppToolbar: FunctionComponent<ToolbarFunction> = ({onExport , onSave }) => {\r\n  const classes = useStyles();\r\n  \r\n  const isApiLoading = useSelector((state : RootState ) => state.ShareReducer.isLoading)\r\n\r\n  return (\r\n    <AppBar position=\"static\" >\r\n    <Toolbar variant=\"dense\">\r\n      <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <Typography variant=\"h6\" className={classes.title}>\r\n        Visual-Draw\r\n      </Typography>\r\n      <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n            <Button variant=\"outlined\" style={{marginLeft:15}} color=\"inherit\" \r\n            startIcon={(isApiLoading ? <CircularProgress style={{width:20,height:20}} color=\"inherit\" /> : <SaveIcon/> )} onClick={onSave}>Save</Button>\r\n    </Toolbar>\r\n  </AppBar>\r\n  );\r\n}\r\n\r\n /*\r\n    <div className={classes.root}>\r\n      <div style={{height : 30,marginLeft : 20 }}>\r\n \r\n          <Typography variant=\"h6\" color=\"inherit\" >\r\n            Visual Draw\r\n            \r\n          </Typography>\r\n          \r\n      </div>\r\n      <div style={{height : 40}}>\r\n \r\n          \r\n      <Button>File</Button>\r\n          <Button onClick={onExport}>Export</Button>\r\n          <Button> Print</Button>\r\n          <Button>Help</Button>\r\n          <Typography className={classes.title}></Typography>\r\n\r\n          {isApiLoading ? <div>Saving....</div> : \"\"}\r\n   \r\n      </div>\r\n  \r\n    </div>\r\n    */\r\n\r\n","import React, { FunctionComponent, useEffect, useState } from 'react'\r\nimport Drawer from '@material-ui/core/Drawer';\r\n\r\nimport styled from '@emotion/styled';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n//mongodb+srv://topster:<password>@cluster0.hbfnd.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\r\n//aaebaYCK6opQGeRA\r\n\r\nexport interface TableEditorProp {\r\n  isOpen: boolean,\r\n  onclose: () => void\r\n}\r\n\r\n\r\nexport const LEFT = styled.div<{}>`\r\nwidth : 30%;\r\nheight: 100vh;\r\ncolor : white;\r\nfont-size : 20px;\r\nbackground-color: #005AA0;\r\n`;\r\n\r\nexport const MenuList = styled.div<{}>`\r\n\r\ncolor : white;\r\n\r\npadding : 15px;\r\nmargin-bottom : 10px;\r\n`;\r\n\r\nexport const Menu = styled.div<{}>`\r\n\r\ncolor : white;\r\nfont-size : 15px;\r\nmargin : 8px;\r\n\r\n`;\r\n\r\n\r\nexport const Right = styled.div<{}>`\r\nwidth : 70%;\r\nbackground-color: \"white\";\r\nmargin : 15px;\r\nfont-size : 20px;\r\n\r\n`;\r\n\r\n\r\n\r\n\r\nexport const SqlExport: FunctionComponent<ExportSqlProp> = ({ code, fileName, isRender, onDownloadClick , onInputChange }) => {\r\n  if (!isRender) {\r\n    return (<div></div>)\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div>Export sql</div>\r\n        <TextField label=\"file name\" variant=\"filled\" value={fileName} onChange={onInputChange} />\r\n        <TextField label=\"Filled\" variant=\"filled\" multiline\r\n          rowsMax={20} style={{ marginTop: 20, width: \"100%\", height: 400 }} value={code}  />\r\n        <Button variant=\"outlined\" color=\"primary\" style={{ marginRight: 10 }}>Copy</Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDownloadClick} >Download</Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport const ImageExport: FunctionComponent<ExportImageProp> = ({ fileName, isRender, imageType, onDownloadClick , onInputChange }) => {\r\n  if (!isRender) {\r\n    return (<div></div>)\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div>Export Image</div>\r\n        <TextField label=\"file name\" variant=\"filled\" value={fileName} onChange={onInputChange} />\r\n\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onDownloadClick}  >Download</Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nenum MenuEnum {\r\n  Image,\r\n  MySql,\r\n  SqlServer,\r\n  Postresql,\r\n  Laravel\r\n}\r\n\r\n\r\ninterface ExportProp {\r\n  isOpen: boolean,\r\n  fileName : string,\r\n  onclose: () => void,\r\n  exportPng: (filename : string) => void,\r\n  exportPdf: (filename : string) => void,\r\n  exportSql: (filename : string) => void,\r\n  exportTest : (a : string) => void\r\n}\r\n\r\ninterface ExportEvent {\r\n  onclose: () => void,\r\n  exportPng: () => void,\r\n  exportPdf: (filename : string) => void,\r\n  exportSql: (filename : string) => void\r\n}\r\n\r\ninterface MenuExport {\r\n  isRender: boolean,\r\n  fileName: string,\r\n  onInputChange : (e : any) => void,\r\n  onDownloadClick: () => void\r\n}\r\n\r\ninterface ExportImageProp extends MenuExport {\r\n  imageType: string\r\n}\r\n\r\ninterface ExportSqlProp extends MenuExport {\r\n  code: string,\r\n}\r\n\r\nexport const ExportEditor: FunctionComponent<ExportProp> = ({ isOpen, onclose, exportPng,  exportSql , exportTest , fileName}) => {\r\n\r\n  const [currentMenu, setcurrentMenu] = useState(MenuEnum.Image)\r\n\r\n  const [currentFileName, setcurrentFileName] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    if(isOpen === false){\r\n      setcurrentFileName(fileName)\r\n    }\r\n    \r\n  }, [fileName])\r\n\r\n  const handleFileNameInput = (e : any) => setcurrentFileName(e.target.value)\r\n\r\n  const onExportSql = () => {\r\n    exportSql(currentFileName + \".sql\")\r\n  }\r\n\r\n  const onExportPng = () => {\r\n    exportPng(currentFileName + \".png\")\r\n  }\r\n\r\n  return (\r\n\r\n    <Drawer anchor={\"right\"} open={isOpen} style={{ width: 400 }} onClose={onclose}>\r\n      <div\r\n        style={{ width: 500, display: \"flex\" }}\r\n        role=\"presentation\"\r\n        className=\"\"\r\n      >\r\n\r\n        <LEFT>\r\n          <IconButton color=\"inherit\" size=\"medium\"><HighlightOffIcon></HighlightOffIcon></IconButton>\r\n          <MenuList>\r\n            <Menu onClick={() => setcurrentMenu(MenuEnum.MySql)}>Sql</Menu>\r\n            <Menu onClick={() => setcurrentMenu(MenuEnum.Image)}>Image</Menu>\r\n            <Menu onClick={() => exportTest('filename test')}>Pdf</Menu>\r\n\r\n            <Divider style={{ marginTop: 10, color: \"white\" }} light={true}></Divider>\r\n\r\n            <Menu>Laravel</Menu>\r\n            <Menu>Golang Gin</Menu>\r\n\r\n          </MenuList>\r\n        </LEFT>\r\n        <Right>\r\n          <SqlExport isRender={currentMenu == MenuEnum.MySql}\r\n          onInputChange={handleFileNameInput} code={\"\"} fileName={currentFileName} onDownloadClick={onExportSql} />\r\n          <ImageExport isRender={currentMenu == MenuEnum.Image} \r\n          onInputChange={handleFileNameInput} imageType=\"png\" fileName={currentFileName} onDownloadClick={onExportPng} />\r\n        </Right>\r\n\r\n      </div>\r\n    </Drawer>\r\n  )\r\n}\r\n","import React from 'react';\n\nconst Copy = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\" />\n    <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\" />\n  </svg>\n);\n\nexport default Copy;\n","import React from 'react';\n\nconst Cut = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"6\" cy=\"6\" r=\"3\" />\n    <circle cx=\"6\" cy=\"18\" r=\"3\" />\n    <line x1=\"20\" y1=\"4\" x2=\"8.12\" y2=\"15.88\" />\n    <line x1=\"14.47\" y1=\"14.48\" x2=\"20\" y2=\"20\" />\n    <line x1=\"8.12\" y1=\"8.12\" x2=\"12\" y2=\"12\" />\n  </svg>\n);\n\nexport default Cut;\n","import React from 'react';\n\nconst Delete = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <polyline points=\"3 6 5 6 21 6\" />\n    <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\" />\n    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\" />\n    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\" />\n  </svg>\n);\n\nexport default Delete;\n","import React from 'react';\n\nconst Duplicate = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={(size * 18) / 24}\n    viewBox=\"0 0 24 18\"\n    fill=\"none\"\n    stroke=\"none\"\n    strokeWidth=\"2\"\n  >\n    <g transform=\"translate(-678.000000, -2727.000000)\">\n      <g transform=\"translate(100.000000, 2626.000000)\">\n        <g transform=\"translate(578.000000, 98.000000)\">\n          <g transform=\"translate(0.000000, 0.000000)\">\n            <polygon points=\"0 0 24 0 24 24 0 24\" />\n            <path\n              d=\"M15,8 C14.45,8 14,8.45 14,9 L14,11 L12,11 C11.45,11 11,11.45 11,12 C11,12.55 11.45,13 12,13 L14,13 L14,15 C14,15.55 14.45,16 15,16 C15.55,16 16,15.55 16,15 L16,13 L18,13 C18.55,13 19,12.55 19,12 C19,11.45 18.55,11 18,11 L16,11 L16,9 C16,8.45 15.55,8 15,8 Z M2,12 C2,9.42 3.4,7.17 5.48,5.96 C5.8,5.77 6.01,5.45 6.01,5.08 C6.01,4.31 5.17,3.83 4.5,4.22 C1.82,5.78 0,8.68 0,12 C0,15.32 1.82,18.22 4.5,19.78 C5.17,20.17 6.01,19.69 6.01,18.92 C6.01,18.55 5.8,18.23 5.48,18.04 C3.4,16.83 2,14.58 2,12 Z M15,3 C10.04,3 6,7.04 6,12 C6,16.96 10.04,21 15,21 C19.96,21 24,16.96 24,12 C24,7.04 19.96,3 15,3 Z M15,19 C11.14,19 8,15.86 8,12 C8,8.14 11.14,5 15,5 C18.86,5 22,8.14 22,12 C22,15.86 18.86,19 15,19 Z\"\n              fill={color}\n            />\n          </g>\n        </g>\n      </g>\n    </g>\n  </svg>\n);\n\nexport default Duplicate;\n","import React from 'react';\n\nconst Paste = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    fill={color}\n    viewBox=\"0 0 512.001 512.001\"\n  >\n    <g>\n      <g>\n        <g>\n          <path\n            d=\"M481,371c11.046,0,20-8.954,20-20v-92c0-33.084-26.916-60-60-60h-39v-79c0-44.112-35.888-80-80-80h-47.533\n\t\t\t\tc-7.739-23.749-29.864-40-55.16-40h-25.614c-25.296,0-47.421,16.251-55.16,40H91c-44.112,0-80,35.888-80,80v312\n\t\t\t\tc0,44.112,35.888,80,80,80h88c11.046,0,20-8.954,20-20c0-11.046-8.954-20-20-20H91c-22.056,0-40-17.944-40-40V120\n\t\t\t\tc0-22.056,17.944-40,40-40h2v59c0,11.046,8.954,20,20,20h189c11.046,0,20-8.954,20-20V80c22.056,0,40,17.944,40,40v79h-65.007\n\t\t\t\tC263.914,199,237,225.913,237,258.993v193.015c0,33.08,26.916,59.993,60.01,59.993L441,511.926c33.084,0,60-26.913,60-59.992\n\t\t\t\tc0-11.046-8.954-20-20-20c-11.046,0-20,8.954-20,20c0,11.024-8.972,19.992-20.01,19.992L297,472c-11.028,0-20-8.969-20-19.993\n\t\t\t\tV258.993c0-11.024,8.969-19.993,19.993-19.993H441c11.028,0,20,8.972,20,20v92C461,362.046,469.955,371,481,371z M282,119H133V80\n\t\t\t\th21c9.177,0,17.177-6.246,19.403-15.149l2.798-11.194C178.211,45.616,185.404,40,193.693,40h25.614\n\t\t\t\tc8.289,0,15.481,5.616,17.492,13.657l2.798,11.194C241.823,73.754,249.823,80,259,80h23V119z\"\n          />\n          <path\n            d=\"M401,279h-64c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20h64c11.046,0,20-8.954,20-20\n\t\t\t\tC421,287.954,412.047,279,401,279z\"\n          />\n          <path\n            d=\"M401,349h-64c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20h64c11.046,0,20-8.954,20-20\n\t\t\t\tC421,357.954,412.047,349,401,349z\"\n          />\n        </g>\n      </g>\n    </g>\n  </svg>\n);\n\nexport default Paste;\n","import React from 'react';\n\nconst Redo = ({ size = 16, color = 'gray' }) => (\n  <svg width={size} height={size} viewBox=\"0 0 512 512\" fill={color}>\n    <path d=\"m431 481c0 11.046-8.954 20-20 20h-66c-11.046 0-20-8.954-20-20s8.954-20 20-20h66c11.046 0 20 8.954 20 20zm63.358-352.994-112.284-111.215c-7.848-7.773-20.511-7.713-28.284.135s-7.712 20.511.135 28.284l106.808 105.79h-285.733c-96.495 0-175 78.505-175 175s78.505 175 175 175h69c11.046 0 20-8.954 20-20s-8.954-20-20-20h-69c-74.439 0-135-60.561-135-135s60.561-135 135-135h284.836l-105.037 105.917c-7.778 7.843-7.725 20.506.118 28.284 3.9 3.868 8.992 5.799 14.083 5.799 5.146 0 10.292-1.975 14.202-5.917l111.225-112.157c11.332-11.332 17.573-26.4 17.573-42.426s-6.241-31.094-17.642-42.494z\" />\n  </svg>\n);\n\nexport default Redo;\n","import React from 'react';\n\nconst Settings = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"12\" cy=\"12\" r=\"3\" />\n    <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\" />\n  </svg>\n);\n\nexport default Settings;\n","import React from 'react';\n\nconst Undo = ({ size = 16, color = 'gray' }) => (\n  <svg width={size} height={size} viewBox=\"0 0 512 512\" fill={color}>\n    <path d=\"m 81,481 c 0,11.046 8.954,20 20,20 h 66 c 11.046,0 20,-8.954 20,-20 0,-11.046 -8.954,-20 -20,-20 h -66 c -11.046,0 -20,8.954 -20,20 z M 17.642,128.006 129.926,16.791 c 7.848,-7.773 20.511,-7.713 28.284,0.135 7.773,7.848 7.712,20.511 -0.135,28.284 L 51.267,151 H 337 c 96.495,0 175,78.505 175,175 0,96.495 -78.505,175 -175,175 h -69 c -11.046,0 -20,-8.954 -20,-20 0,-11.046 8.954,-20 20,-20 h 69 c 74.439,0 135,-60.561 135,-135 0,-74.439 -60.561,-135 -135,-135 H 52.164 l 105.037,105.917 c 7.778,7.843 7.725,20.506 -0.118,28.284 -3.9,3.868 -8.992,5.799 -14.083,5.799 -5.146,0 -10.292,-1.975 -14.202,-5.917 L 17.573,212.926 C 6.241,201.594 0,186.526 0,170.5 0,154.474 6.241,139.406 17.642,128.006 Z\" />\n  </svg>\n);\n\nexport default Undo;\n","import React from 'react';\n\nconst ZoomIn = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"11\" cy=\"11\" r=\"8\" />\n    <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\" />\n    <line x1=\"11\" y1=\"8\" x2=\"11\" y2=\"14\" />\n    <line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\" />\n  </svg>\n);\n\nexport default ZoomIn;\n","import React from 'react';\n\nconst ZoomOut = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"11\" cy=\"11\" r=\"8\" />\n    <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\" />\n    <line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\" />\n  </svg>\n);\n\nexport default ZoomOut;\n","import React from 'react';\r\n\r\nimport styled from '@emotion/styled';\r\n\r\nconst Container = styled.span`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  height: ${props => props.size}px;\r\n  padding: 0 ${props => props.size / 4}px;\r\n  margin: 2px ${props => props.size / 8}px;\r\n  font-size: ${props => props.size / 2}px;\r\n  font-family: monospace;\r\n  color: #000000c4;\r\n  background: #ececec;\r\n  border-radius: 4px;\r\n  border: 1px solid #ffffff17;\r\n  box-shadow: inset 0 0 ${props => props.size / 4}px #0000000a;\r\n`;\r\n\r\nconst Key = ({ children, size = 16 }) => (\r\n  <Container size={size}>{children}</Container>\r\n);\r\n\r\nexport default Key;","\r\nimport styled from '@emotion/styled';\r\nconst ContextMenuIconContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 16px;\r\n  height: 16px;\r\n  margin-right: 16px;\r\n`;\r\n\r\nexport default ContextMenuIconContainer;","import styled from '@emotion/styled';\r\n\r\nconst ContextMenuShortcutContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  justify-content: flex-end;\r\n  margin-left: 8px;\r\n`;\r\n\r\nexport default ContextMenuShortcutContainer;","import React , {FunctionComponent} from 'react';\r\n\r\nimport { Menu, Item, Separator } from 'react-contexify';\r\n\r\nimport {\r\n  Duplicate,\r\n  Copy,\r\n  Delete,\r\n  Paste,\r\n  Redo,\r\n  Settings,\r\n  Undo,\r\n  Cut,\r\n  ZoomIn,\r\n  ZoomOut,\r\n} from '../Icons';\r\nimport Key from './KeyMenu';\r\nimport ContextMenuIconContainer from './ContextMenuIconContainer';\r\nimport ContextMenuShortcutContainer from './ContextMenuShortcutContainer';\r\nimport {ComponentFunction} from './FunctionList'\r\n\r\n  export const ComponentContextMenu : FunctionComponent<ComponentFunction> = ({copyFunc , pasteFunc , deleteFunc , duplicateFunc , cutFunc , zoomIn , zoomOut} ) => (\r\n  <Menu id=\"component\">\r\n    <Item onClick={duplicateFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Duplicate />\r\n      </ContextMenuIconContainer>\r\n      Duplicate\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>D</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={cutFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Cut />\r\n      </ContextMenuIconContainer>\r\n      Cut\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>X</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={copyFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Copy />\r\n      </ContextMenuIconContainer>\r\n      Copy\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>C</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={pasteFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Paste />\r\n      </ContextMenuIconContainer>\r\n      Paste\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>V</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={deleteFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Delete />\r\n      </ContextMenuIconContainer>\r\n      Delete\r\n      <ContextMenuShortcutContainer>\r\n        <Key>Delete</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Separator />\r\n\r\n    <Item onClick={zoomIn}>\r\n      <ContextMenuIconContainer>\r\n        <ZoomIn />\r\n      </ContextMenuIconContainer>\r\n      Zoom in\r\n    </Item>\r\n\r\n    <Item onClick={zoomOut}>\r\n      <ContextMenuIconContainer>\r\n        <ZoomOut />\r\n      </ContextMenuIconContainer>\r\n      Zoom out\r\n    </Item>\r\n\r\n    <Separator />\r\n\r\n    <Item onClick={pasteFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Undo />\r\n      </ContextMenuIconContainer>\r\n      Undo\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>Z</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={pasteFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Redo />\r\n      </ContextMenuIconContainer>\r\n      Redo\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>SHIFT</Key>\r\n        <Key>Z</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Separator />\r\n\r\n    <Item\r\n     \r\n    >\r\n      <ContextMenuIconContainer>\r\n        <Settings />\r\n      </ContextMenuIconContainer>\r\n      Edit configurations...\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>E</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n  </Menu>\r\n);\r\n\r\nexport default ComponentContextMenu;","import React , {FunctionComponent} from 'react';\r\n\r\nimport { Menu, Item, Separator } from 'react-contexify';\r\n\r\nimport { Redo, Undo, Paste, ZoomIn, ZoomOut } from '../Icons';\r\nimport Key from './KeyMenu';\r\nimport ContextMenuIconContainer from './ContextMenuIconContainer';\r\nimport ContextMenuShortcutContainer from './ContextMenuShortcutContainer';\r\n\r\nimport {ContextFunction} from './FunctionList'\r\n\r\n\r\nexport const DiagramContextMenu : FunctionComponent<ContextFunction> = ({zoomIn , zoomOut , \r\n  pasteFunc , redoFunc , undoFunc} ) => (\r\n  <Menu id=\"diagram\">\r\n    <Item onClick={pasteFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Paste />\r\n      </ContextMenuIconContainer>\r\n      Paste\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>V</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Separator />\r\n\r\n    <Item onClick={zoomIn}>\r\n      <ContextMenuIconContainer>\r\n        <ZoomIn />\r\n      </ContextMenuIconContainer>\r\n      Zoom in\r\n    </Item>\r\n    <Item onClick={zoomOut}>\r\n      <ContextMenuIconContainer>\r\n        <ZoomOut />\r\n      </ContextMenuIconContainer>\r\n      Zoom out\r\n    </Item>\r\n\r\n    <Separator />\r\n\r\n    <Item onClick={undoFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Undo />\r\n      </ContextMenuIconContainer>\r\n      Undo\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>Z</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n\r\n    <Item onClick={redoFunc}>\r\n      <ContextMenuIconContainer>\r\n        <Redo />\r\n      </ContextMenuIconContainer>\r\n      Redo\r\n      <ContextMenuShortcutContainer>\r\n        <Key>CTRL</Key>\r\n        <Key>SHIFT</Key>\r\n        <Key>Z</Key>\r\n      </ContextMenuShortcutContainer>\r\n    </Item>\r\n  </Menu>\r\n);\r\n\r\nexport default DiagramContextMenu;","import React , {FunctionComponent} from 'react';\r\n\r\nimport {ComponentContextMenu} from './ComponentContextMenu';\r\nimport {DiagramContextMenu} from './DiagramContextMenu';\r\n\r\nimport 'react-contexify/dist/ReactContexify.min.css';\r\nimport {AllContextFunction} from './FunctionList'\r\n\r\n\r\n\r\nexport const ContextMenus: FunctionComponent<AllContextFunction> = ({copyFunc , deleteFunc , duplicateFunc , cutFunc , pasteFunc , zoomIn , zoomOut} ) => {\r\n\r\n  return (\r\n    <>\r\n    <DiagramContextMenu  pasteFunc={pasteFunc} zoomIn={zoomIn} zoomOut={zoomOut}  />\r\n    <ComponentContextMenu  copyFunc={copyFunc} pasteFunc={pasteFunc} \r\n    deleteFunc={deleteFunc} duplicateFunc={duplicateFunc} cutFunc={cutFunc} zoomIn={zoomIn} zoomOut={zoomOut} />\r\n  </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","\nimport {Action, InputType, BaseModel } from '@projectstorm/react-canvas-core';\n\n\n/**\n * Handles delete actions.\n */\nexport default class DeleteAction extends Action {\n  constructor(areShortcutsAllowed : boolean) {\n    super({\n      type: InputType.KEY_DOWN,\n      fire: ({ event }) => {\n        console.log(JSON.stringify(event))\n        //if (!areShortcutsAllowed) return;\n        if (this.engine.getModel().isLocked()) return;\n        \n        if (this.matchesInput(event)) {\n          event.preventDefault();\n          this.handleAction();\n        }\n      },\n    });\n  }\n\n  matchesInput(event : any) : boolean{\n    return event.ctrlKey && event.code === 'Delete'\n  }\n\n  handleAction = () => {\n    console.log(\"delete\")\n    const entities = this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(model => !model.isLocked());\n\n    //this.fireEvent(entities);\n\n    entities.forEach(model => model.remove());\n\n    this.engine.repaintCanvas();\n  };\n\n \n}\n","import { DefaultLinkModel, LabelModel } from '@projectstorm/react-diagrams';\r\n\r\nexport class SchemaLinkModel extends DefaultLinkModel {\r\n    setLabels(labelset : LabelModel[]){\r\n        alert(\"set label\")\r\n        this.labels = labelset\r\n    }\r\n}","import {\r\n\tLinkModel,\r\n\tPortModel,\r\n\tPortModelAlignment,\r\n\tPortModelGenerics,\r\n\tPortModelOptions\r\n} from '@projectstorm/react-diagrams-core';\r\n//import { DefaultLinkModel } from '@projectstorm/react-diagrams-defaults/src/link/DefaultLinkModel';\r\nimport {DefaultPortModel ,DefaultLinkModel } from '@projectstorm/react-diagrams-defaults'\r\nimport { AbstractModelFactory, DeserializeEvent } from '@projectstorm/react-canvas-core';\r\nimport { SchemaLinkModel } from '../link/SchemaLinkModel';\r\n\r\n\r\nexport interface SchemaPortModelOptions extends PortModelOptions {\r\n\tlabel?: string;\r\n\ttypename?: string,\r\n\tfk ?: boolean,\r\n\tpk ?: boolean,\r\n\tin?: boolean;\r\n}\r\n\r\nexport interface SchemaPortModelGenerics extends PortModelGenerics {\r\n\tOPTIONS: SchemaPortModelOptions;\r\n}\r\n\r\nexport interface DefaultPortModelOptions extends PortModelOptions {\r\n\tlabel?: string;\r\n\tin?: boolean;\r\n}\r\n\r\nexport interface DefaultPortModelGenerics extends PortModelGenerics {\r\n\tOPTIONS: DefaultPortModelOptions;\r\n}\r\n\r\nexport class SchemaPortModel extends DefaultPortModel {\r\n\tcreateLinkModel(): SchemaLinkModel  {\r\n\t\treturn new SchemaLinkModel();\r\n\t}\r\n}\r\n\r\n","import * as _ from 'lodash';\r\nimport { NodeModel, NodeModelGenerics, PortModel, PortModelAlignment } from '@projectstorm/react-diagrams-core';\r\nimport { SchemaPortModel } from '../port/SchemaPortModel';\r\nimport { BasePositionModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\r\nimport { DefaultLinkModel, DefaultPortModel, DiagramEngine, LinkModel } from '@projectstorm/react-diagrams';\r\nimport { TableData  } from '../../components/TableEditor';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nexport interface DefaultNodeModelOptions extends BasePositionModelOptions {\r\n\tname?: string;\r\n\tcolor?: string;\r\n}\r\n\r\nexport interface Field{\r\n\tinId ?: string,\r\n\toutId ?: string,\r\n\tfieldName : string,\r\n\tfieldType : string,\r\n\tfieldOption ?: FieldOption\r\n}\r\n\r\nexport interface FieldOption {\r\n\tportId : string,\r\n\tai ?: boolean\r\n\tpk ?: boolean,\r\n\tfk ?: boolean,\r\n\tfkTb ?: string,\r\n\tfkField ?: string\r\n}\r\n\r\nexport interface SchemaNodeModelGenerics extends NodeModelGenerics {\r\n\tOPTIONS: DefaultNodeModelOptions;\r\n}\r\n\r\nexport class SchemaNodeModel extends NodeModel<SchemaNodeModelGenerics> {\r\n\tprotected portsIn: SchemaPortModel[];\r\n\tprotected portsOut: SchemaPortModel[];\r\n\tprotected fieldOptions : FieldOption[]\t\r\n\r\n\tconstructor(name: string, color: string);\r\n\tconstructor(options?: DefaultNodeModelOptions);\r\n\tconstructor(options: any = {}, color?: string) {\r\n\t\tif (typeof options === 'string') {\r\n\t\t\toptions = {\r\n\t\t\t\tname: options,\r\n\t\t\t\tcolor: color\r\n\t\t\t};\r\n\t\t}\r\n\t\tsuper({\r\n\t\t\ttype: 'default',\r\n\t\t\tname: 'Untitled',\r\n\t\t\tcolor: 'rgb(0,192,255)',\r\n\t\t\t...options\r\n\t\t});\r\n\t\tthis.portsOut = [];\r\n\t\tthis.portsIn = [];\r\n\t\tthis.fieldOptions = []\r\n\t}\r\n\r\n\tperformanceTune() : boolean { return false}\r\n\r\n\tdoClone(lookupTable: {}, clone: SchemaNodeModel): void {\r\n\r\n\t\tconsole.log('original id : ' + this.getID())\r\n\t\tclone.portsIn = [];\r\n\t\tclone.portsOut = [];\r\n\t\t\r\n\t\tsuper.doClone(lookupTable, clone);\r\n\t\tlet fields = []\r\n\t\tfor (let i = 0; i < clone.portsIn.length; i++) {\r\n\t\t\tclone.fieldOptions[i].portId = clone.portsIn[i].getID()\r\n\t\t}\r\n\t}\r\n\r\n\tremoveFieldbyId(id : string): void{\r\n\t\t\r\n\t\tlet indexof = this.portsIn.findIndex(p=>p.getID() == id );\r\n\r\n\t\tlet fieldIndex = this.fieldOptions.findIndex(f=>f.portId == id)\r\n\r\n\t\tif(indexof === -1) return\r\n\r\n\t\tif(fieldIndex !== -1){\r\n\t\t\tthis.fieldOptions.splice(fieldIndex, 1);\r\n\t\t}\r\n\r\n\t\tthis.removeField(indexof)\r\n\t}\r\n\r\n\tremovePort(port: SchemaPortModel): void {\r\n\t\tsuper.removePort(port);\r\n\t\r\n\t\tif (port.getOptions().in) {\r\n\t\t\tthis.portsIn.splice(this.portsIn.indexOf(port), 1);\r\n\t\t} else {\r\n\t\t\tthis.portsOut.splice(this.portsOut.indexOf(port), 1);\r\n\t\t}\r\n\t}\r\n\r\n\tupdateNode(tb : TableData){\r\n\t\r\n\t\tlet fields_tb = tb.fields\r\n\t\tlet fields = this.getAllField()\r\n\t\tfor (let i = 0; i < fields_tb.length; i++) {\r\n\t\t\tif(fields[i].fieldName !== fields_tb[i].fieldName){\r\n\t\t\t\tthis.portsIn[i].getOptions().label = fields_tb[i].fieldName\r\n\t\t\t}\r\n\t\t\tif(fields[i].fieldType !== fields_tb[i].fieldType){\r\n\t\t\t\tthis.portsOut[i].getOptions().label = fields_tb[i].fieldType\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\r\n\taddField(field : Field) : SchemaPortModel[] {\r\n\t\t\r\n\t\tlet portin = this.addInPort(field.fieldName)\r\n\t\tlet portout = this.addOutPort(field.fieldType)\r\n\t\t\r\n\t\tlet add : FieldOption = {\r\n\t\t\tportId : portin.getID(),\r\n\t\t\tai : false,\r\n\t\t\tpk : false,\r\n\t\t\tfk : false,\r\n\t\t\tfkTb : \"\",\r\n\t\t\tfkField : \"\"\r\n\t\t}\r\n\r\n\t\tthis.fieldOptions.push(add)\r\n\r\n\t\treturn [portin , portout]\r\n\t}\r\n\r\n\tremoveField(i : number){\r\n\r\n\t\tthis.removePort(this.portsIn[i])\r\n\t\tthis.removePort(this.portsOut[i])\r\n\t}\r\n\r\n\tAddNewField(){\r\n\r\n\t\tlet field : Field = {\r\n\t\t\tfieldName : \"test\",\r\n\t\t\tfieldType : \"int\"\r\n\t\t}\r\n\t\tthis.addField(field)\r\n\r\n\t}\r\n\r\n\taddOrUpdateFieldOption(field : Field)  : void{\r\n\t\tlet fieldIndex = this.fieldOptions.findIndex(f=>f.portId === field.inId)\r\n\t\tif(fieldIndex === -1) return\r\n\t\t\r\n\t\tif(field.fieldOption === undefined) return \r\n\t\tthis.fieldOptions[fieldIndex] = field.fieldOption\r\n\t\tconsole.log(field.fieldOption)\r\n\r\n\t\t//fieldrs.\r\n\t\tlet fieldOption = field.fieldOption\r\n\t\tif(fieldOption == undefined) return\r\n\t\t\r\n\t\tlet targetNodeId = (fieldOption.fkTb === undefined) ? \"\" : fieldOption.fkTb\r\n\t\tlet targetPortId = (fieldOption.fkField === undefined) ? \"\" : fieldOption.fkField\r\n\t\tlet sourceIdPort = (field.inId === undefined) ? \"\" : field.inId\r\n\t\t\r\n\t\t//this.linkForeignKey(targetNodeId , targetPortId ,  sourceIdPort)\r\n\t}\r\n\r\n\tlinkForeignKey(targetNode : SchemaNodeModel ,targetIdPort : string , sourceInIdPort : string): LinkModel | undefined{\r\n\t\talert('do link')\r\n\t\tlet targetPort = targetNode.getPortFromID(targetIdPort) as SchemaPortModel\r\n\t\tlet sourceport = this.getPortFromID(sourceInIdPort)  as SchemaPortModel  // find  sourePort\r\n\t\tif(sourceport === null) return undefined\r\n\t\tif(targetPort === null) return undefined\r\n\t\talert('complete link')\r\n\t\tconsole.log(\"main field \" + sourceport.getOptions().label + \" link with : \" + targetPort.getOptions().label)\r\n\t\tconsole.log(sourceport.getOptions().in)\r\n\t\tconsole.log(targetPort.getOptions().in)\r\n\t\tlet link =  targetPort.link(sourceport)\r\n\r\n\t\ttargetPort.reportPosition()\r\n\t\tsourceport.reportPosition()\r\n\t\treturn link\r\n\t}\r\n\r\n\tgetAllField() : Field[]{\r\n\t\tlet portins = this.portsIn\r\n\t\tlet portouts = this.portsOut\r\n\t\tlet rs : Field[] = []\r\n\t\tconsole.log(\"get field lenght : \"+ portins.length)\r\n\r\n\t\tconsole.log(this.fieldOptions)\r\n\r\n\t\tfor (let i = 0; i < portins.length; i++) {\r\n\t\t\tconsole.log(\"check field \" + i )\r\n\t\t\t\r\n\t\t\tlet f = this.getField(i)\r\n\t\t\tconsole.log(f)\r\n\t\t\trs.push(f)\r\n\t\t}\r\n\t\treturn rs\r\n\t}\r\n\r\n\tgetField(index : number) : Field{\r\n\r\n\t\tlet field = this.portsIn[index].getOptions().label\r\n\t\tlet type = this.portsOut[index].getOptions().label\r\n\t\tlet id = this.portsIn[index].getID()\r\n\t\tconsole.log(\"check id : \" + id)\r\n\t\t\r\n\t\tlet fieldOptionIndex = this.fieldOptions.findIndex(f=>f.portId === id)\r\n\r\n\t\tconsole.log(\"fieldopt index : \" + fieldOptionIndex)\r\n\r\n\t\tif(fieldOptionIndex === -1){\r\n\t\t\tlet r : Field = {\r\n\t\t\t\tinId : '',\r\n\t\t\toutId : '',\r\n\t\t\tfieldName : '',\r\n\t\t\tfieldType : '',\r\n\t\r\n\t\t\t}\r\n\t\t\treturn r\r\n\t\t}\r\n\r\n\t\tlet fieldOption = this.fieldOptions[fieldOptionIndex]\r\n\t\tconsole.log(\"field name : \" + field + \" pk : \" + fieldOption.pk + \" fk : \" + fieldOption.fk)\r\n\r\n\t\tif(field === undefined) field = \"\"\r\n\t\tif(type === undefined) type = \"\"\r\n\r\n\t\t\r\n\t\tlet rs : Field = {\r\n\t\t\tinId : this.portsIn[index].getID(),\r\n\t\t\toutId : this.portsOut[index].getID(),\r\n\t\t\tfieldName : field,\r\n\t\t\tfieldType : type,\r\n\t\t\tfieldOption : fieldOption\r\n\t\t}\r\n\r\n\t\treturn rs\r\n\t}\r\n\r\n\tupdatePort(port: SchemaPortModel , index : number){\r\n\t\t\r\n\t}\r\n\r\n\taddPort<T extends SchemaPortModel>(port: T): T {\r\n\r\n\r\n\t\tsuper.addPort(port);\r\n\t\t\r\n\t\tif (port.getOptions().in) {\r\n\t\t\tif (this.portsIn.indexOf(port) === -1) {\r\n\t\t\t\tthis.portsIn.push(port);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.portsOut.indexOf(port) === -1) {\r\n\t\t\t\tthis.portsOut.push(port);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn port;\r\n\t}\r\n\r\n\taddInPort(label: string, after = true): SchemaPortModel {\r\n\t\tlet uid = uuidv4()\r\n\t\tconst p = new SchemaPortModel({\r\n\t\t\tin: true,\r\n\t\t\tname: uid,\r\n\t\t\tlabel: label,\r\n\t\t\talignment: PortModelAlignment.LEFT\r\n\t\t});\r\n\t\tif (!after) {\r\n\t\t\tthis.portsIn.splice(0, 0, p);\r\n\t\t}\r\n\t\treturn this.addPort(p);\r\n\t}\r\n\r\n\taddOutPort(label: string, after = true): SchemaPortModel {\r\n\t\tlet uid = uuidv4()\r\n\t\tconst p = new SchemaPortModel({\r\n\t\t\tin: false,\r\n\t\t\tname: uid,\r\n\t\t\tlabel: label,\r\n\t\t\talignment: PortModelAlignment.RIGHT\r\n\t\t});\r\n\t\tif (!after) {\r\n\t\t\tthis.portsOut.splice(0, 0, p);\r\n\t\t}\r\n\t\treturn this.addPort(p);\r\n\t}\r\n\r\n\t//when convert back to model it is no function to add field and add fieldoption : \r\n\t//fix you need \r\n\r\n\tdeserialize(event: DeserializeEvent<this>) {\r\n\t\tsuper.deserialize(event);\r\n\r\n\t\tthis.options.name = event.data.name;\r\n\t\tthis.options.color = event.data.color;\r\n\t\tthis.fieldOptions = event.data.fields\r\n\t\tconsole.log(this.fieldOptions)\r\n\t\tthis.portsIn = _.map(event.data.portsInOrder, (id : any) => {\r\n\t\t\treturn this.getPortFromID(id);\r\n\t\t}) as SchemaPortModel[];\r\n\t\tthis.portsOut = _.map(event.data.portsOutOrder, (id : any) => {\r\n\t\t\treturn this.getPortFromID(id);\r\n\t\t}) as SchemaPortModel[];\r\n\t\tconsole.log(\"deserial call on shemaModel\")\r\n\r\n\t\tconsole.log(\"after deserial\")\r\n\r\n\t}\r\n\r\n\tdeserializeFieldOption(){\r\n\r\n\t}\r\n\r\n\tserializeClone(c : any){\r\n\t\tconsole.log('serial clone')\r\n\t\tconsole.log(c)\r\n\t}\r\n\r\n\tserialize(): any {\r\n\r\n\t\tconsole.log(\"call serialize on model\")\r\n\r\n\t\tlet fields = []\r\n\r\n\t\tconsole.log(this.fieldOptions)\r\n\r\n\t\tfor (let i = 0; i < this.portsIn.length; i++) {\r\n\t\t\t\r\n\t\t\tlet fieldOptionIndex = this.fieldOptions.findIndex(f=>f.portId === this.portsIn[i].getID())\r\n\t\t\tconsole.log(\"fieldOptIndex : \" + fieldOptionIndex)\r\n\t\t\tif(fieldOptionIndex === -1) continue\r\n\t\t\tfields.push({\r\n\t\t\t\tportId : this.portsIn[i].getID(),\r\n\t\t\t\tfieldName : this.portsIn[i].getOptions().label,\r\n\t\t\t\tfieldType : this.portsOut[i].getOptions().label,\r\n\t\t\t\tai : this.fieldOptions[fieldOptionIndex].ai,\r\n\t\t\t\tpk : this.fieldOptions[fieldOptionIndex].pk\r\n\t\t\t})\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\t\r\n\t\treturn {\r\n\t\t\t...super.serialize(),\r\n\t\t\tname: this.options.name,\r\n\t\t\tcolor: this.options.color,\r\n\t\t\tfields : fields,\r\n\t\t\tportsInOrder: _.map(this.portsIn, (port) => {\r\n\t\t\t\treturn port.getID();\r\n\t\t\t}),\r\n\t\t\tportsOutOrder: _.map(this.portsOut, (port) => {\r\n\t\t\t\treturn port.getID();\r\n\t\t\t})\r\n\t\t};\r\n\t}\r\n\r\n\ttoJson() : any{\r\n\t\t\r\n\t\tlet fields = []\r\n\t\tfor (let i = 0; i < this.portsIn.length; i++) {\r\n\t\t\tlet fieldOptionIndex = this.fieldOptions.findIndex(f=>f.portId === this.portsIn[i].getID())\r\n\t\t\tif(fieldOptionIndex === -1) continue\r\n\t\t\tlet field = {\r\n\t\t\t\tfieldName : this.portsIn[i].getOptions().label,\r\n\t\t\t\tfieldType : this.portsOut[i].getOptions().label,\r\n\t\t\t\tfieldOption : this.fieldOptions[fieldOptionIndex]\r\n\t\t\t}\r\n\t\t\tfields.push(field)\r\n\t\t}\r\n\t\tlet rs = {\r\n\t\t\tname : this.options.name,\r\n\t\t\tcolor : this.options.color,\r\n\t\t\tfields : fields\r\n\t\t}\r\n\t\treturn rs\r\n\t}\r\n\r\n\tgetInPorts(): SchemaPortModel[] {\r\n\t\treturn this.portsIn;\r\n\t}\r\n\r\n\tgetOutPorts(): SchemaPortModel[] {\r\n\t\treturn this.portsOut;\r\n\t}\r\n\r\n\t\r\n}","import { DiagramModel, LinkModel, NodeModel } from '@projectstorm/react-diagrams';\r\n\r\nimport { Action, InputType } from '@projectstorm/react-canvas-core';\r\n\r\nimport {BaseModel} from '@projectstorm/react-canvas-core';\r\nimport { SchemaNodeModel } from '../../schemanode/node/SchemaNodeModel';\r\n\r\n/**\r\n * Handle duplication (clone) actions.\r\n */\r\nexport default class NewNodeAction extends Action {\r\n  constructor(areShortcutsAllowed : boolean) {\r\n    super({\r\n      type: InputType.KEY_DOWN,\r\n      fire: ({ event }) => {\r\n        if (!areShortcutsAllowed) return;\r\n        if (this.engine.getModel().isLocked()) return;\r\n\r\n        if (this.matchesInput(event)) {\r\n          event.preventDefault();\r\n          this.handleAction();\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  matchesInput(event : any) : boolean{\r\n    return event.ctrlKey && event.code === 'KeyB'\r\n  }\r\n\r\n  handleAction = () => {\r\n     \r\n    let snode =  new SchemaNodeModel({\r\n\t\tname: 'Product',\r\n\t\tcolor: 'rgb(0,192,255)'\r\n\t});\r\n    snode.addField({fieldName : \"Id\" , fieldType : \"int\"})\r\n\r\n    snode.setPosition(100, 100);\r\n\r\n    let model = this.engine.getModel() as DiagramModel\r\n\r\n    model.addAll(snode)\r\n\r\n    //this.engine.fireEvent({ nodes: clones }, 'componentsAdded');\r\n\r\n    this.engine.repaintCanvas();\r\n  };\r\n}\r\n","import { DiagramModel, LinkModel, NodeModel } from '@projectstorm/react-diagrams';\n\nimport { Action, InputType } from '@projectstorm/react-canvas-core';\n\nimport {BaseModel} from '@projectstorm/react-canvas-core';\n\n/**\n * Handle duplication (clone) actions.\n */\nexport default class DuplicateAction extends Action {\n  constructor(areShortcutsAllowed : boolean) {\n    super({\n      type: InputType.KEY_DOWN,\n      fire: ({ event }) => {\n        if (!areShortcutsAllowed) return;\n        if (this.engine.getModel().isLocked()) return;\n\n        if (this.matchesInput(event)) {\n          event.preventDefault();\n          this.handleAction();\n        }\n      },\n    });\n  }\n\n  matchesInput(event : any) : boolean{\n    return event.ctrlKey && event.code === 'KeyD'\n  }\n\n  handleAction = () => {\n    const model = this.engine.getModel() as DiagramModel\n\n    const clones : BaseModel[] = model \n      .getSelectedEntities()\n      .filter(entity => entity instanceof BaseModel)\n      .filter(entity => !entity.isLocked())\n      .map(entity => entity.clone());\n\n    model.clearSelection();\n\n    clones.forEach(clone => {\n\n      if (clone instanceof NodeModel) {\n        model.addNode(clone)\n        clone.setSelected(true);\n      }\n      \n      \n    });\n\n    //this.engine.fireEvent({ nodes: clones }, 'componentsAdded');\n\n    this.engine.repaintCanvas();\n  };\n}\n","import { Action, InputType , DeserializeEvent } from '@projectstorm/react-canvas-core';\r\n\r\nimport {BaseModel} from '@projectstorm/react-canvas-core';\r\nimport { DiagramModel, NodeModel } from '@projectstorm/react-diagrams';\r\n\r\nimport { SchemaNodeModel } from '../../schemanode/node/SchemaNodeModel';\r\n\r\n\r\n/**\r\n * Handles clipboard actions.\r\n */\r\nexport default class ClipboardAction extends Action {\r\n  constructor(areShortcutsAllowed : boolean) {\r\n    super({\r\n      type: InputType.KEY_DOWN,\r\n      fire: ({ event }) => {\r\n        if (!areShortcutsAllowed) return;\r\n        if (this.engine.getModel().isLocked()) return;\r\n\r\n        if (this.matchesInput(event)) {\r\n          event.preventDefault();\r\n\r\n          const e : any = event;\r\n          if (e.code === 'KeyX') this.handleCut();\r\n          if (e.code === 'KeyC') this.handleCopy();\r\n          if (e.code === 'KeyV') this.handlePaste();\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  matchesInput(event : any) : boolean{\r\n        return event.ctrlKey && (event.code === 'KeyX' || event.code === \"KeyC\" || \r\n        event.code === \"KeyV\")     \r\n  }\r\n\r\n  getSelectedComponents = () =>\r\n    this.engine\r\n      .getModel()\r\n      .getSelectedEntities()\r\n      .filter(entity => entity instanceof SchemaNodeModel)\r\n      .filter(entity => !entity.isLocked());\r\n\r\n  /** Cut */\r\n  handleCut() {\r\n    let selectNodes = this.getSelectedComponents() as SchemaNodeModel[]\r\n    let clonenode = selectNodes[0].clone()\r\n    const copie = clonenode.serialize()\r\n\r\n    localStorage.setItem('clipboard', JSON.stringify(copie));\r\n\r\n    selectNodes.forEach(model => model.remove());\r\n\r\n    this.engine.repaintCanvas();\r\n\r\n  };\r\n\r\n  /** Copy */\r\n  handleCopy() {\r\n    let selectNodes = this.getSelectedComponents() as SchemaNodeModel[]\r\n    let clonenode = selectNodes[0].clone()\r\n    const copie = clonenode.serialize()\r\n\r\n\r\n    console.log(copie)\r\n\r\n    localStorage.setItem('clipboard', JSON.stringify(copie));\r\n  };\r\n\r\n  onPromise(id : string) {\r\n    return new Promise<BaseModel>((resolve, reject) => {\r\n      let rs = new SchemaNodeModel()\r\n      resolve(rs);\r\n    });\r\n  }\r\n\r\n\r\n  /** Paste */\r\n  handlePaste() {\r\n\r\n\r\n    let clipboardstr = localStorage.getItem('clipboard')\r\n\r\n    if(clipboardstr == null) clipboardstr = \"\"\r\n\r\n    const clipboard = JSON.parse(clipboardstr);\r\n    if (!clipboard) return;\r\n\r\n    console.log(clipboard)\r\n\r\n\r\n    let pastemodel = new SchemaNodeModel()\r\n \r\n    let deserializeData : any = {\r\n      data : clipboard,\r\n      engine : this.engine,\r\n      registerModel: () => {},\r\n    }\r\n\r\n    pastemodel.deserialize(deserializeData)\r\n    \r\n  \r\n    pastemodel.setPosition(100, 100);\r\n\r\n    console.log(pastemodel)\r\n    let model = this.engine.getModel() as DiagramModel\r\n    model.addAll(pastemodel)\r\n\r\n\r\n    //this.engine.fireEvent( nodes: models , 'componentsAdded');\r\n\r\n    this.engine.repaintCanvas();\r\n  };\r\n\r\n\r\n\r\n\r\n  \r\n}\r\n","import * as React from 'react';\r\nimport { DiagramEngine, PortWidget } from '@projectstorm/react-diagrams-core';\r\nimport { SchemaPortModel } from './SchemaPortModel';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { MenuProvider  } from 'react-contexify';\r\n\r\n\r\nexport interface DefaultPortLabelProps {\r\n\tport: SchemaPortModel;\r\n\tengine: DiagramEngine;\r\n\r\n}\r\n\r\n\r\n\texport const PortLabel = styled.div`\r\n\t\tdisplay: flex;\r\n\t\tmargin-top: 1px;\r\n\t\talign-items: center;\r\n\t\t&:hover {\r\n\t\t\tbackground: rgb(192, 255, 0);\r\n\t\t}\r\n\t`;\r\n\r\n\texport const Label = styled.div`\r\n\t\tpadding: 0 5px;\r\n\t\tflex-grow: 1;\r\n\t`;\r\n\r\n\texport const Port = styled.div`\r\n\t\twidth: 16px;\r\n\t\theight: 21px;\r\n\t\tbackground: rgba(255, 255, 244, 0.1);\r\n\t\t&:hover {\r\n\t\t\tbackground: rgb(192, 255, 0);\r\n\t\t}\r\n\t`;\r\n\r\n\r\nexport class SchemaPortLabel extends React.Component<DefaultPortLabelProps> {\r\n\trender() {\r\n\t\tconst port = (\r\n\t\t\t<PortWidget engine={this.props.engine} port={this.props.port}>\r\n\t\t\t\t<Port />\r\n\t\t\t</PortWidget>\r\n\t\t);\r\n\t\tconst label = <Label>{this.props.port.getOptions().label}</Label>;\r\n\r\n\t\treturn (\r\n\t\t\t<MenuProvider id=\"nodeedit\" storeRef={false} >\r\n\t\t\t\t<PortLabel>\r\n\t\t\t\t{this.props.port.getOptions().in ? port : label}\r\n\t\t\t\t{this.props.port.getOptions().in ? label : port}\r\n\t\t\t\t</PortLabel>\r\n\t\t\t</MenuProvider>\r\n\t\t\t\r\n\t\t);\r\n\t}\r\n}","import * as React from 'react';\r\nimport * as _ from 'lodash';\r\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\r\nimport { SchemaNodeModel } from './SchemaNodeModel';\r\nimport { SchemaPortLabel } from '../port/SchemaPortLabelWidget';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/core';\r\nimport { SchemaPortModel } from '../port/SchemaPortModel';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\n\texport const Node = styled.div<{ background ?: string; selected: boolean }>`\r\n\t\r\n\t\r\n\r\n\t\tborder-style: solid;\r\n\r\n\t\tborder-color : grey;\r\n\r\n\t\tborder-width: thin;\r\n\r\n\t\tcolor: white;\r\n\t\t\r\n\t\toverflow: visible;\r\n\t\tfont-size: 13px;\r\n\t\t\r\n\t`;\r\n\r\n\texport const Title = styled.div`\r\n\t\tbackground-color: #005AA0;\r\n\t\tdisplay: flex;\r\n\t\tfont-weight: 600;\r\n\t\twhite-space: nowrap;\r\n\t\tjustify-items: center;\r\n\t`;\r\n\r\n\texport const TitleName = styled.div`\r\n\t\tmargin-left : 10px;\r\n\t\tflex-grow: 1;\r\n\t\tpadding: 10px 5px;\r\n\t`;\r\n\r\n\texport const Ports = styled.div`\r\n\t\tdisplay: flex;\r\n\t\tcolor : #5E666E;\r\n\t\tfont-weight: 600;\r\n\t\tbackground-color: white;\r\n\t`;\r\n\r\n\texport const PortsContainer = styled.div`\r\n\t\tflex-grow: 1;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\t&:first-of-type {\r\n\t\t\tmargin-right: 10px;\r\n\t\t}\r\n\t\t&:only-child {\r\n\t\t\tmargin-right: 0px;\r\n\t\t}\r\n\t`;\r\n\r\n\r\nexport interface DefaultNodeProps {\r\n\tnode: SchemaNodeModel;\r\n\tengine: DiagramEngine;\r\n}\r\n\r\n/**\r\n * Default node that models the DefaultNodeModel. It creates two columns\r\n * for both all the input ports on the left, and the output ports on the right.\r\n */\r\n\r\n\r\nexport class SchemaNodeWidget extends React.Component<DefaultNodeProps> {\r\n\r\n\r\n\t  fireAction (event : any) {\r\n\t\tthis.props.engine.getActionEventBus().fireAction({\r\n\t\t  event: {\r\n\t\t\t...event,\r\n\t\t\tkey: '',\r\n\t\t\tpreventDefault: () => {},\r\n          stopPropagation: () => {},\r\n\t\t  },\r\n\t\t});\r\n\t  }\r\n\r\n\t  fireDeleteEvent(engine : DiagramEngine){\r\n\t\tlet e = { type: 'keydown', ctrlKey: true, code: 'Delete' }\r\n\t\tthis.fireAction(e);\r\n\t  }\r\n\r\n\tfireDoubleClick(engine : DiagramEngine){\r\n\t\tconsole.log(\"double click\")\r\n\t\tif(engine != undefined){\r\n\t\r\n\t\t\tengine.fireEvent({ }, 'onDoubleClick');\r\n\t\t}else{\r\n\t\t\tconsole.log(\"unid\")\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\r\n\tgeneratePort = (port : SchemaPortModel) => {\r\n\t\r\n\t\treturn <SchemaPortLabel engine={this.props.engine} port={port} key={port.getID()}  />;\r\n\t};\r\n\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Node\r\n\t\t\t\tdata-default-node-name={this.props.node.getOptions().name}\r\n\t\t\t\tselected={this.props.node.isSelected()}\r\n\t\t\t\tbackground={this.props.node.getOptions().color} onDoubleClick={() => this.fireDoubleClick(this.props.engine)}>\r\n\t\t\t\t<Title>\r\n\t\t\t\t\t<TitleName>{this.props.node.getOptions().name}</TitleName>\r\n\t\t\t\t\t<IconButton  onClick={()=> this.fireDeleteEvent(this.props.engine)} color=\"inherit\" size=\"small\">\r\n          \t\t\t\t<DeleteOutlineIcon/>\r\n        \t\t\t</IconButton>\r\n\r\n\t\t\t\t</Title>\r\n\t\t\t\t<Ports>\r\n\t\t\t\t\t<PortsContainer>{_.map(this.props.node.getInPorts(), this.generatePort)}</PortsContainer>\r\n\t\t\t\t\t<PortsContainer>{_.map(this.props.node.getOutPorts(), this.generatePort)}</PortsContainer>\r\n\t\t\t\t</Ports>\r\n\t\t\t</Node>\r\n\t\t);\r\n\t}\r\n}","import * as React from 'react';\r\nimport { SchemaNodeModel } from './SchemaNodeModel';\r\nimport { SchemaNodeWidget } from './SchemaNodeWidget';\r\nimport { AbstractReactFactory , GenerateWidgetEvent } from '@projectstorm/react-canvas-core';\r\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\r\nimport { MenuProvider  } from 'react-contexify';\r\n\r\nexport class SchemaNodeFactory extends AbstractReactFactory<SchemaNodeModel, DiagramEngine> {\r\n\r\n\tconstructor() {\r\n\t\tsuper('default');\r\n\t}\r\n\t\r\n\r\n\tgenerateReactWidget(event : any): JSX.Element {\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<MenuProvider id=\"component\" storeRef={false} data={event.model}>\r\n\t\t\t\t<SchemaNodeWidget engine={this.engine} node={event.model}  />\r\n\t\t\t</MenuProvider>\r\n\t\t\t)\r\n\t}\r\n\r\n\tgenerateModel(initialConfig : any) {\r\n\t\treturn new SchemaNodeModel('Node 2', 'rgb(192,255,0)');\r\n\t}\r\n}","import createEngine, { DefaultLinkModel, DefaultNodeModel , DiagramEngine,  DiagramModel , PathFindingLinkFactory } from \"@projectstorm/react-diagrams\";\r\n\r\n\r\nimport {SchemaNodeModel} from '../schemanode/node/SchemaNodeModel'\r\nimport {SchemaNodeFactory} from '../schemanode/node/SchemaNodeFactory'\r\nimport { SchemaPortModel } from \"../schemanode/port/SchemaPortModel\";\r\nimport { SchemaPortFactory } from \"../schemanode/port/SchemaPortFactory\";\r\n\r\n\r\nfunction GetEngine() : DiagramEngine  {\r\n \r\n    let rs = createEngine({registerDefaultDeleteItemsAction: false,\r\n})\r\n\r\n    rs.getNodeFactories().registerFactory(new SchemaNodeFactory());\r\n\r\n    const model = new DiagramModel();\r\n\r\n\r\n    /*\r\n    var node1 = new DefaultNodeModel({\r\n\t\tname: 'Node 1',\r\n\t\tcolor: 'rgb(0,192,255)'\r\n\t});\r\n\tnode1.setPosition(100, 100);\r\n\tlet port1 = node1.addOutPort('id');\r\n    node1.addInPort('int');\r\n\r\n\t//3-B) create another default node\r\n\tvar node2 = new DefaultNodeModel('Node 2', 'rgb(192,255,0)');\r\n\tlet port2 = node2.addInPort('product_id');\r\n    node2.addOutPort('int');\r\n\tnode2.setPosition(400, 100);\r\n\r\n\t// link the ports\r\n\tlet link1 = port1.link<DefaultLinkModel>(port2);\r\n\tlink1.getOptions().testName = 'Test';\r\n\tlink1.addLabel('Hello World!');\r\n    */\r\n    \r\n    rs.setModel(model);\r\n\r\n    return rs\r\n}\r\n\r\n\r\n\r\nconst engine = GetEngine()\r\nexport {engine , GetEngine}","\r\nimport * as _ from 'lodash';\r\n\r\n//import ClipboardAction from './actions/ClipboardAction';\r\nimport DeleteAction from './actions/DeleteAction';\r\nimport NewNodeAction from './actions/NewNodeAction';\r\nimport DuplicateAction from './actions/DuplicateAction';\r\n//import UndoRedoAction from './actions/UndoRedoAction';\r\nimport ZoomAction from './actions/ZoomAction';\r\nimport ClipboardAction from './actions/Clipboard'\r\nimport { Action } from '@projectstorm/react-canvas-core';\r\n\r\nimport { DefaultLabelModel, DefaultLinkModel, DefaultPortModel , DiagramEngine, DiagramModel, LabelModel, LinkModel } from '@projectstorm/react-diagrams';\r\nimport { GetEngine } from '../libs/engine'\r\nimport { SchemaNodeModel } from '../schemanode/node/SchemaNodeModel';\r\nimport { TableData } from '../components/TableEditor';\r\nimport { Field } from '../schemanode/node/SchemaNodeModel'\r\nimport { SchemaLinkModel } from '../schemanode/link/SchemaLinkModel';\r\n\r\nexport class DiagramController {\r\n\r\n  isLock: boolean;\r\n  engine: DiagramEngine\r\n\r\n  constructor() {\r\n    this.isLock = false\r\n    this.engine = GetEngine()\r\n\r\n    this.initActions()\r\n\r\n    console.log(this.getEngine().getModel().getZoomLevel())\r\n\r\n    let links = this.getEngine().getModel().getLinks()\r\n\r\n    let models = this.getEngine().getModel().getModels()\r\n\r\n    console.log(links)\r\n\r\n    //let p1= links[0].getTargetPort()\r\n    //let nodemd = p1.getNode() as SchemaNodeModel\r\n\r\n    //links[0].remove()\r\n\r\n    //this.getEngine().repaintCanvas()\r\n\r\n    //alert(nodemd.getOptions().name)\r\n    //console.log(p1)\r\n  }\r\n\r\n\r\n\r\n  initActions() {\r\n\r\n\r\n    let actions: Action[] = [\r\n      new DeleteAction(true),\r\n      new NewNodeAction(true),\r\n      new DuplicateAction(true),\r\n      new ClipboardAction(true)\r\n\r\n    ]\r\n\r\n    actions.forEach(Action =>\r\n      this.engine\r\n        .getActionEventBus()\r\n        .registerAction(Action),\r\n    );\r\n\r\n  }\r\n\r\n  fireAction(event: any) {\r\n    this.engine.getActionEventBus().fireAction({\r\n      event: {\r\n        ...event,\r\n        key: '',\r\n        preventDefault: () => { },\r\n        stopPropagation: () => { },\r\n      },\r\n    });\r\n  }\r\n\r\n\r\n  currentNode(): SchemaNodeModel | undefined {\r\n    let entities = this.engine\r\n      .getModel()\r\n      .getSelectedEntities()\r\n      .filter(model => !model.isLocked());\r\n\r\n    if (entities.length == 0) return undefined\r\n\r\n    let node = entities[0]\r\n\r\n    if (node instanceof SchemaNodeModel === false) return undefined\r\n\r\n    let rs = node as SchemaNodeModel\r\n\r\n    return rs\r\n  }\r\n\r\n  connectRealation(selectPort : DefaultPortModel,selectPortOut : DefaultPortModel,relationName : string){\r\n    const linkPort = selectPort.getLinks() \r\n    const linkPortOut = selectPortOut.getLinks()\r\n    \r\n    for (const key in linkPort) {\r\n      alert(\"have link in\")\r\n      if (Object.prototype.hasOwnProperty.call(linkPort, key)) {\r\n        const element = linkPort[key] as SchemaLinkModel;\r\n        element.setLabels([])   \r\n        element.addLabel(relationName)\r\n      }\r\n    }\r\n\r\n    for (const key in linkPortOut) {\r\n      alert(\"have link out\")\r\n      if (Object.prototype.hasOwnProperty.call(linkPortOut, key)) {\r\n        const element = linkPortOut[key] as SchemaLinkModel;\r\n        element.setLabels([])\r\n        element.addLabel(relationName)\r\n      }\r\n    }\r\n\r\n    this.getEngine().repaintCanvas()\r\n  }\r\n\r\n  saveDataByString(data : string){\r\n    const model2 = new DiagramModel()\r\n    const model = JSON.parse(data)\r\n    let obj: ReturnType<DiagramModel['serialize']> = model\r\n    model2.deserializeModel(obj, this.getEngine())\r\n\t\t\tif (model2 == null) {\r\n\t\t\t\tconsole.log(\"model null\")\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.getEngine().setModel(model2)\r\n  }\r\n\r\n  clearDiagram(){\r\n    const modelset = new DiagramModel()\r\n    this.getEngine().setModel(modelset)\r\n    this.getEngine().repaintCanvas()\r\n  }\r\n\r\n  linktest() {\r\n    this.linkNode()\r\n  }\r\n\r\n  linkNode() {\r\n    let nodes = this.getEngine().getModel().getNodes() as SchemaNodeModel[]\r\n    alert(nodes[1].getOptions().name)\r\n    let sourcePort = nodes[0].getOutPorts()[0]\r\n    let targetPort = nodes[1].getInPorts()[0]\r\n\r\n\r\n    let link = sourcePort.link(targetPort)\r\n\r\n    targetPort.reportPosition()\r\n    sourcePort.reportPosition()\r\n\r\n    this.getEngine().getModel().addAll(link);\r\n    this.getEngine().repaintCanvas()\r\n  }\r\n\r\n  updateNodeName(e: string) {\r\n    let node = this.currentNode()\r\n    if (node == undefined) return\r\n    node.getOptions().name = e\r\n    this.getEngine().repaintCanvas()\r\n  }\r\n\r\n  linkModel(targetNodeId: string,\r\n    targetNodeField: string, mainNodeField: string,) {\r\n    let node = this.currentNode()\r\n    if (node == undefined) return\r\n    let targetNode = this.engine.getModel().getNode(targetNodeId) as SchemaNodeModel\r\n    let link = node.linkForeignKey(targetNode, targetNodeField, mainNodeField)\r\n    if (link == undefined) return\r\n    this.engine.getModel().addAll(link)\r\n    this.engine.repaintCanvas()\r\n  }\r\n\r\n  setCurrentNode(node: SchemaNodeModel) {\r\n    this.engine.repaintCanvas()\r\n  }\r\n\r\n  updateNode(tb: TableData) {\r\n    let node = this.currentNode()\r\n\r\n    if (node == undefined) return\r\n\r\n    node.updateNode(tb)\r\n\r\n    this.getEngine().repaintCanvas()\r\n\r\n  }\r\n\r\n  testEdit() {\r\n\r\n    let node = this.currentNode()\r\n\r\n    let tb = {\r\n      tablename: \"top\",\r\n      fields: [{\r\n        fieldName: \"Id\",\r\n        fieldType: \"int\"\r\n      }, {\r\n        fieldName: \"ProductId\",\r\n        fieldType: \"varchar\"\r\n      }, {\r\n        fieldName: \"Id\",\r\n        fieldType: \"int\"\r\n      }\r\n      ]\r\n    }\r\n\r\n    if (node == undefined) return\r\n\r\n    node.updateNode(tb)\r\n\r\n    this.getEngine().repaintCanvas()\r\n\r\n  }\r\n\r\n  doZoom(value : number){\r\n    let model = this.getEngine().getModel()\r\n    let zoomLevel = model.getZoomLevel()\r\n    console.log(zoomLevel)\r\n    model.setZoomLevel(zoomLevel + value)\r\n    this.getEngine().repaintCanvas()\r\n  }\r\n\r\n  updateFieldOption(f: Field) {\r\n    let node = this.currentNode()\r\n    if (node == undefined) return\r\n    node.addOrUpdateFieldOption(f)\r\n  }\r\n\r\n\r\n  copySelected = () => {\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyC' });\r\n\r\n  }\r\n\r\n  newNode() {\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyB' });\r\n  }\r\n\r\n  duplicateSelected = () => {\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyD' });\r\n  }\r\n\r\n  cutSelected = () =>\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyX' });\r\n\r\n\r\n  pasteSelected = () =>\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyV' });\r\n\r\n  deleteSelected = () =>\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'Delete' });\r\n\r\n  undo = () =>\r\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyZ' });\r\n\r\n  zoomIn(event: any) {\r\n    this.fireAction({\r\n      clientX: event.clientX,\r\n      clientY: event.clientY,\r\n      type: 'wheel',\r\n      deltaY: +1,\r\n    });\r\n  }\r\n\r\n  zoomOut(event: any) {\r\n    this.fireAction({\r\n      clientX: event.clientX,\r\n      clientY: event.clientY,\r\n      type: 'wheel',\r\n      deltaY: -1,\r\n    });\r\n  }\r\n\r\n\r\n\r\n  getEngine(): DiagramEngine {\r\n    return this.engine\r\n  }\r\n\r\n\r\n\r\n}","import React , {FunctionComponent, useState} from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 0,\r\n    },\r\n    inputEdit : {\r\n      backgroundColor : \"#3F51B5\",\r\n      padding : 8,\r\n      color : \"white\",\r\n      border: \"none\",\r\n      borderRadius: 4,\r\n      fontSize : 20\r\n\r\n \r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }),\r\n);\r\n\r\ninterface AppbarProp {\r\n  title : string,\r\n  onDelete : () => void,\r\n  onEndEdit : (e : string) => void\r\n}\r\n\r\nexport const  Appbar : FunctionComponent<AppbarProp> = ({ onDelete , title , onEndEdit }) => {\r\n  const classes = useStyles();\r\n\r\n  const [isEdit, setisEdit] = useState(false)\r\n\r\n  const [textInput, settextInput] = useState(\"\")\r\n\r\n  function handleChange(e : any){\r\n    settextInput(e.target.value)\r\n  }\r\n\r\n  function handleBlur(){\r\n    setisEdit(!isEdit)\r\n    \r\n    onEndEdit(textInput)\r\n  }\r\n\r\n\r\n\r\n  function handleOpenEdit(){\r\n    setisEdit(true)\r\n    settextInput(title)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" elevation={0}>\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {(isEdit) ? \r\n           <input value={textInput} onChange={handleChange} onBlur={ handleBlur} className={classes.inputEdit} />\r\n         \r\n          :\r\n          <Typography  variant=\"h6\" className={classes.title} onClick={handleOpenEdit}>\r\n            {title}\r\n          </Typography>\r\n          }\r\n          <IconButton color=\"inherit\" onClick={onDelete}><DeleteOutlineIcon/></IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React, { FunctionComponent, useEffect, useMemo, useState } from 'react'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { Appbar } from './Appbar'\r\nimport TableMat from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport { BaseModel } from '@projectstorm/react-canvas-core'\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport { DefaultPortModel, DiagramEngine, NodeModel } from '@projectstorm/react-diagrams';\r\nimport { SchemaNodeModel, Field } from '../schemanode/node/SchemaNodeModel';\r\nimport { DiagramController } from '../DiagramController/DiagramCtr';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport { Box, Collapse, Typography } from '@material-ui/core';\r\n\r\nexport interface TableProps {\r\n  isOpen: boolean,\r\n  diagramctr: DiagramController,\r\n  forceUpdate: boolean,\r\n  onclose: () => void\r\n}\r\n\r\nexport interface TableData {\r\n  id?: string,\r\n  tablename: string,\r\n  fields: Field[]\r\n}\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    styledTable: {\r\n      \"borderCollapse\": \"collapse\",\r\n      \"margin\": \"25px 0\", \"fontSize\": \"0.9em\", \"fontFamily\": \"sans-serif\",\r\n      \"minWidth\": \"400px\", \"boxShadow\": \"0 0 20px rgba(0, 0, 0, 0.15)\"\r\n    },\r\n    cell: {\r\n      padding: 10\r\n    }\r\n\r\n  }),\r\n);\r\n\r\n\r\nexport const TableEditor: FunctionComponent<TableProps> = ({ isOpen, diagramctr, onclose, forceUpdate }) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [isOptionEdit, setisOptionEdit] = useState(\"\")\r\n\r\n  const [currentTable, setTable] = useState(getNodeData(diagramctr))\r\n\r\n  const [relationName, setrelationName] = useState(\"\")\r\n\r\n  const [otherTable, setotherTable] = useState(getOtherTable())\r\n\r\n  const [textInput, settextInput] = useState(\"\")\r\n\r\n\r\n  const [isEdit, setisEdit] = useState(false)\r\n\r\n  const [currentSelectTableId, setcurrentSelectTableId] = useState(\"\")\r\n\r\n  const [currentFieldId, setcurrentFieldId] = useState(\"\")\r\n\r\n  const currentField = useMemo(() => loadTableFieldSelect(), [currentSelectTableId]);\r\n\r\n  const [toggleUpdate, settoggleUpdate] = useState(false)\r\n\r\n  const [currentEdit, setcurrentEdit] = useState(\"\")\r\n\r\n  const [typeSelect, settypeSelect] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    setTable(getNodeData(diagramctr))\r\n    setotherTable(getOtherTable())\r\n\r\n  }, [isOpen, toggleUpdate, forceUpdate])\r\n\r\n  function getOtherTable(): TableData[] {\r\n    let rs: TableData[] = []\r\n    let alltb = diagramctr.getEngine().getModel().getNodes() as SchemaNodeModel[]\r\n    alltb.forEach(tb => {\r\n      let name = tb.getOptions().name\r\n      if (name == undefined) name = \"\"\r\n      let add: TableData = {\r\n        id: tb.getID(),\r\n        tablename: name,\r\n        fields: tb.getAllField()\r\n      }\r\n      rs.push(add)\r\n    });\r\n    return rs\r\n  }\r\n\r\n  function getNodeData(diagramctr: DiagramController): TableData {\r\n    let rs: TableData = {\r\n      id: \"\",\r\n      tablename: '',\r\n      fields: []\r\n    }\r\n    let node = diagramctr.currentNode()\r\n\r\n    if (node == undefined) return rs\r\n\r\n    if (node instanceof SchemaNodeModel) {\r\n      console.log(\"Start getNodeData function\")\r\n      let nodedata = node as SchemaNodeModel\r\n      let tbname = nodedata.getOptions().name\r\n      if (tbname === undefined) tbname = \"\"\r\n      rs.tablename = tbname\r\n      rs.id = nodedata.getID()\r\n      rs.fields = getFieldsData(nodedata)\r\n    }\r\n\r\n    return rs\r\n  }\r\n\r\n  function getFieldsData(node: SchemaNodeModel): Field[] {return node.getAllField()}\r\n\r\n  function setEditField(id: string | undefined, fieldName: string) {\r\n    if (id === undefined) id = \"\"\r\n    setisEdit(true)\r\n    settextInput(fieldName)\r\n    setcurrentEdit(id)\r\n  }\r\n\r\n  function closeEdit() {\r\n    setisEdit(true)\r\n    updateNode()\r\n    setcurrentEdit(\"\")\r\n  }\r\n\r\n  function updateNode() {\r\n    let newtb = currentTable\r\n\r\n    //let indexof = newtb.fields.findIndex(f => f.fieldName == currentEdit)\r\n\r\n    let indexof = newtb.fields.findIndex(f => f.inId == currentEdit)\r\n\r\n    if (indexof == -1) return\r\n\r\n    newtb.fields[indexof].fieldName = textInput\r\n\r\n    if (typeSelect != \"\") newtb.fields[indexof].fieldType = typeSelect\r\n    setTable(newtb)\r\n\r\n    diagramctr.updateNode(newtb)\r\n  }\r\n\r\n  function handleChange(e: any) {\r\n    settextInput(e.target.value)\r\n  }\r\n\r\n  function handleTypeChange(e: any) {\r\n    settypeSelect(e.target.value)\r\n  }\r\n\r\n  function onDelete() {\r\n    let node = diagramctr.currentNode()\r\n    if (node == undefined) return\r\n    diagramctr.deleteSelected()\r\n    onclose()\r\n  }\r\n\r\n  function newField() {\r\n    let node = diagramctr.currentNode()\r\n    if (node == undefined) return\r\n    node.AddNewField()\r\n\r\n    let newtb = currentTable\r\n    newtb.fields.push({\r\n      fieldName: \"test\",\r\n      fieldType: \"int\"\r\n    })\r\n    setTable(newtb)\r\n\r\n    settoggleUpdate(!toggleUpdate)\r\n\r\n    diagramctr.getEngine().repaintCanvas()\r\n  }\r\n\r\n  function removeField(id: string | undefined) {\r\n    if (id == undefined) return\r\n    let node = diagramctr.currentNode()\r\n    if (node == undefined) return\r\n    node.removeFieldbyId(id)\r\n    settoggleUpdate(!toggleUpdate)\r\n    diagramctr.getEngine().repaintCanvas()\r\n  }\r\n\r\n  function onSelectTableChange(e: any) {\r\n    setcurrentSelectTableId(e.target.value)\r\n  }\r\n\r\n  function loadTableFieldSelect(): Field[] {\r\n    if (currentSelectTableId == \"\") return []\r\n    let tb = otherTable.find(t => t.id === currentSelectTableId)\r\n    if (tb == undefined) return []\r\n    return tb.fields\r\n  }\r\n\r\n  function onChangeFieldSelect(e: any) {\r\n    if(e.target.value === \"none\"){\r\n      alert(\"select none\")\r\n      return\r\n    }\r\n    let targetPortOutId = e.target.value\r\n    let sourceField = currentTable.fields.find(f => f.inId == currentEdit)\r\n\r\n    setcurrentFieldId(targetPortOutId)\r\n\r\n    let currentTableId = (currentTable.id == undefined) ? \"\" : currentTable.id == undefined\r\n    if (currentTableId == currentSelectTableId || sourceField == undefined) return // if link self table and selt field\r\n    alert('on link')\r\n\r\n    let sourceFieldId = (sourceField.inId == undefined) ? \"\" : sourceField.inId\r\n    diagramctr.linkModel(currentSelectTableId, targetPortOutId, sourceFieldId)\r\n\r\n  }\r\n\r\n\r\n  function onNameChange(e: string) {\r\n    let newtb = currentTable\r\n    newtb.tablename = e\r\n    setTable(newtb)\r\n\r\n    diagramctr.updateNodeName(e)\r\n\r\n    settoggleUpdate(!toggleUpdate)\r\n\r\n  }\r\n\r\n  function getFieldOption(f: Field, optionName: string): any {\r\n    let fieldOption = f.fieldOption\r\n    if (fieldOption == undefined) {\r\n      console.log('field option undifine')\r\n      return false\r\n    }\r\n    if (optionName == \"pk\") return fieldOption.pk\r\n    if (optionName == \"fk\") return fieldOption.fk\r\n\r\n  }\r\n\r\n  function setFieldOption(e: any, idField: string | undefined, optionName: string) {\r\n\r\n    if (idField == undefined) return\r\n\r\n    console.log(optionName)\r\n\r\n    let fieldIndexof = currentTable.fields.findIndex(f => f.inId == idField)\r\n    let tb = currentTable\r\n    let newfieldOption = tb.fields[fieldIndexof].fieldOption\r\n    if (newfieldOption == undefined) return\r\n\r\n    if (optionName == \"pk\") {\r\n      newfieldOption.pk = !newfieldOption.pk\r\n    }\r\n    if (optionName == \"fk\") {\r\n      newfieldOption.fk = !newfieldOption.fk\r\n    }\r\n\r\n    tb.fields[fieldIndexof].fieldOption = newfieldOption\r\n    setTable(tb)\r\n\r\n    console.log(newfieldOption)\r\n    diagramctr.updateFieldOption(tb.fields[fieldIndexof])\r\n    settoggleUpdate(!toggleUpdate)\r\n  }\r\n\r\n  function onSelectRelation(portid: string | undefined, portOutId: string | undefined, relationName: string) {\r\n    if (portid === undefined || portOutId === undefined) return\r\n    const node = diagramctr.currentNode()\r\n    if (node === undefined) return\r\n    const portIn = node.getPortFromID(portid) as DefaultPortModel\r\n    const portOut = node.getPortFromID(portOutId) as DefaultPortModel\r\n    if (portIn === null || portOut === null) return\r\n    setrelationName(relationName)\r\n    diagramctr.connectRealation(portIn, portOut, relationName)\r\n  }\r\n\r\n  return <Drawer anchor={\"right\"} open={isOpen} style={{ width: 600 }} onClose={onclose}>\r\n    <div>\r\n      <Appbar onDelete={onDelete} title={currentTable.tablename} onEndEdit={onNameChange}></Appbar>\r\n      <TableContainer>\r\n        <TableMat aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell></TableCell>\r\n              <TableCell className={classes.cell}>Field Name</TableCell>\r\n              <TableCell className={classes.cell}>Type Name</TableCell>\r\n              <TableCell className={classes.cell}>PK</TableCell>\r\n              <TableCell className={classes.cell}>FK</TableCell>\r\n              <TableCell className={classes.cell}>Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {currentTable.fields.map((row: Field, index: number) => (\r\n              <React.Fragment key={row.inId}>\r\n\r\n                <TableRow className={classes.cell}>\r\n                  <TableCell >\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" >\r\n                      {(isEdit && currentEdit !== row.inId) ? <CreateIcon /> : <SaveAltIcon />}\r\n                    </IconButton>\r\n                  </TableCell>\r\n                  {(isEdit && currentEdit == row.inId) ?\r\n                    <>\r\n\r\n                      <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\r\n                        <input onBlur={() => closeEdit()}\r\n                          onChange={handleChange} value={textInput} />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\r\n                        <select onChange={handleTypeChange} value={typeSelect} >\r\n                          <option value=\"int\">Interger</option>\r\n                          <option value=\"varchar\">Varchar</option>\r\n                          <option value=\"float\">Float</option>\r\n                          <option value=\"bool\">Boolean</option>\r\n                        </select>\r\n                      </TableCell>\r\n\r\n                    </>\r\n                    :\r\n                    <>\r\n                      <TableCell className={classes.cell} component=\"th\" scope=\"row\" onClick={() => setEditField(row.inId, row.fieldName)}>\r\n                        {row.fieldName}\r\n                      </TableCell>\r\n\r\n                      <TableCell className={classes.cell} component=\"th\" scope=\"row\" onClick={() => setEditField(row.inId, row.fieldName)}>\r\n                        {row.fieldType}\r\n                      </TableCell>\r\n                    </>\r\n                  }\r\n\r\n                  <TableCell className={classes.cell}>\r\n                    <input type=\"checkbox\" checked={(getFieldOption(row, \"pk\"))}\r\n                      onChange={(e) => setFieldOption(e, row.inId, \"pk\")} key={`pk${row.inId}`} />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <input type=\"checkbox\" checked={(getFieldOption(row, \"fk\"))}\r\n                      onChange={(e) => setFieldOption(e, row.inId, \"fk\")} />\r\n                  </TableCell>\r\n                  <TableCell className={classes.cell} >\r\n                    <IconButton onClick={() => removeField(row.inId)} size=\"small\">\r\n                      <DeleteOutlineIcon></DeleteOutlineIcon>\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n                    <Collapse in={(isEdit && currentEdit === row.inId)} timeout=\"auto\" unmountOnExit>\r\n                      <Box margin={1}>\r\n\r\n                          <select placeholder=\"Select Table\" value={currentSelectTableId} onChange={onSelectTableChange}>\r\n                          <option disabled selected value=\"\"> -- Select Ref Table -- </option>\r\n                            {otherTable.map(o => <option key={o.id} value={o.id}>{o.tablename}</option>)}\r\n                          </select>\r\n\r\n                          <select placeholder=\"Select Field\" style={{minWidth:100}} value={currentFieldId} onChange={onChangeFieldSelect}>\r\n\r\n                          <option style={{display:\"none\"}}></option>\r\n                           \r\n                            {currentField.map(f => <option key={f.fieldName} value={f.outId}>{f.fieldName}</option>)}\r\n                          </select>\r\n\r\n                          <select placeholder=\"Select Relation\" value={relationName} onChange={(e) => onSelectRelation(row.inId, row.outId, e.target.value)}>\r\n                            <option value=\"1:1\">One to One</option>\r\n                            <option value=\"1:N\">One to Many</option>\r\n                          </select>\r\n                       \r\n                          <TextField label=\"Default Value\" variant=\"outlined\" size=\"small\"></TextField>\r\n                  \r\n\r\n                      </Box>\r\n                    </Collapse>\r\n                  </TableCell>\r\n                </TableRow>\r\n\r\n              </React.Fragment>\r\n\r\n            ))}\r\n          </TableBody>\r\n        </TableMat>\r\n      </TableContainer>\r\n      <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => newField()}>\r\n        <AddCircleOutlineIcon />\r\n      </IconButton>\r\n    </div>\r\n  </Drawer>\r\n}","import React , {FunctionComponent} from 'react';\r\n\r\nimport { Menu, Item, Separator } from 'react-contexify';\r\n\r\nimport { Redo, Undo, Paste, ZoomIn, ZoomOut } from '../Icons';\r\nimport Key from './KeyMenu';\r\nimport ContextMenuIconContainer from './ContextMenuIconContainer';\r\nimport ContextMenuShortcutContainer from './ContextMenuShortcutContainer';\r\n\r\nimport {ContextFunction} from './FunctionList'\r\n\r\n\r\nexport const SimpleContext : FunctionComponent = () => (\r\n  <Menu id=\"nodeedit\">\r\n  <Item>\r\n    <ContextMenuIconContainer>\r\n      <Paste />\r\n    </ContextMenuIconContainer>\r\n    Paste\r\n    <ContextMenuShortcutContainer>\r\n      <Key>CTRL</Key>\r\n      <Key>V</Key>\r\n    </ContextMenuShortcutContainer>\r\n  </Item>\r\n\r\n  <Separator />\r\n\r\n  <Item>\r\n    <ContextMenuIconContainer>\r\n      <ZoomIn />\r\n    </ContextMenuIconContainer>\r\n    Zoom in\r\n  </Item>\r\n  <Item>\r\n    <ContextMenuIconContainer>\r\n      <ZoomOut />\r\n    </ContextMenuIconContainer>\r\n    Zoom out\r\n  </Item>\r\n\r\n  <Separator />\r\n\r\n  <Item>\r\n    <ContextMenuIconContainer>\r\n      <Undo />\r\n    </ContextMenuIconContainer>\r\n    Undo\r\n    <ContextMenuShortcutContainer>\r\n      <Key>CTRL</Key>\r\n      <Key>Z</Key>\r\n    </ContextMenuShortcutContainer>\r\n  </Item>\r\n\r\n  <Item>\r\n    <ContextMenuIconContainer>\r\n      <Redo />\r\n    </ContextMenuIconContainer>\r\n    Redo\r\n    <ContextMenuShortcutContainer>\r\n      <Key>CTRL</Key>\r\n      <Key>SHIFT</Key>\r\n      <Key>Z</Key>\r\n    </ContextMenuShortcutContainer>\r\n  </Item>\r\n</Menu>\r\n);\r\n\r\nexport default SimpleContext;","import BaseGenerate from \"./BaseGenerate\"\r\n\r\nclass MySqlGenerate extends BaseGenerate {\r\n\r\n    getFields(field : any , isLastLine : boolean = false) : string{\r\n        let newLineAndTab = \", \\n \\t\"\r\n        let rs = `${field.fieldName} ${field.fieldType}` \r\n        if(isLastLine == false) rs += newLineAndTab\r\n        return rs \r\n    }\r\n  \r\n    getCreateTable(tb : any) : string{\r\n        let fields = ``\r\n        tb.fields.forEach((f: any , i : number)=>{\r\n            let isLastLine = false\r\n            if(tb.fields.length-1 == i) isLastLine = true\r\n            fields += this.getFields(f , isLastLine)\r\n        })\r\n\r\n        return `CREATE TABLE ${tb.tablename} (\\n \\t${fields} \\n ) `\r\n    }\r\n\r\n    export(data : any[]) : any {\r\n\r\n        let rs = ``\r\n       data.forEach(d=>{\r\n          rs += this.getCreateTable(d)\r\n          rs += \"\\n \\n\"\r\n       })\r\n       return rs\r\n    }\r\n}\r\n\r\nexport default MySqlGenerate\r\n  ","class BaseGenerate {\r\n\r\n    getFields(field : any) : string{\r\n        return `` \r\n    }\r\n  \r\n    getCreateTable(tb : any) : string{\r\n        return ``\r\n    }\r\n\r\n    export(data : any[]) : any {\r\n    \r\n      return ''\r\n    }\r\n}\r\n\r\nexport default BaseGenerate\r\n  ","\r\n\r\nexport enum ShareActionType {\r\n    TOGGLE_LOADING = \"TOGGLE_LOADING\",\r\n}\r\n\r\ninterface ToggleAction {\r\n    type: typeof ShareActionType.TOGGLE_LOADING\r\n    payload: boolean\r\n}\r\n\r\n  \r\n\r\n  \r\nexport type ShareActionTypes = ToggleAction ","export interface Project{\r\n    Id ?: string;\r\n    ProjectName : string;\r\n    ProjectDescription : string;\r\n    UserId : string;\r\n    VisibleStatus : number;\r\n    ShareUrl : string;\r\n    ProjectDetail : string;\r\n}\r\n\r\nexport function defaultProject() : Project{\r\n    let rs : Project = {\r\n        Id : \"\",\r\n        ProjectName : \"\" ,\r\n        ProjectDescription : \"\",\r\n        UserId : \"\",\r\n        VisibleStatus : 1,\r\n        ShareUrl  : \"\",\r\n        ProjectDetail : \"\"\r\n    }\r\n    return rs\r\n}\r\n\r\nexport function defaultProjects() : Project[]{\r\n    return []\r\n}\r\n\r\nexport function jsonToProject(d : any) : Project{\r\n    let rs : Project = {\r\n            Id : d._id,\r\n\t\t    ProjectName : d.projectName,\r\n\t\t\tProjectDescription : d.projectDescription,\r\n\t\t\tProjectDetail : \"\",\r\n\t\t\tVisibleStatus :  d.visibleStatus,\r\n\t\t\tUserId :  d.user,\r\n\t\t\tShareUrl : \"\"\r\n    }\r\n    return rs\r\n}\r\n\r\nexport function projectToJson(p : Project) {\r\n    let rs : any = {\r\n        projectName : p.ProjectName,\r\n        projectDescription : p.ProjectDescription,\r\n        projectDetail : p.ProjectDetail,\r\n        user : p.UserId,\r\n        visibleStatus : p.VisibleStatus,\r\n        shareUrl : p.ShareUrl\r\n    }\r\n    return rs\r\n}","\r\nimport { ShareActionType, ShareActionTypes } from \"./type\";\r\n\r\nexport function ToggleLoading(data: boolean): ShareActionTypes {\r\n    return {\r\n      type: ShareActionType.TOGGLE_LOADING,\r\n      payload: data\r\n    }\r\n}","import React, { FunctionComponent, useEffect, useState } from 'react'\r\n\r\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\r\n\r\nimport { DemoCanvasWidget } from '../components/CanvasDiagram';\r\n\r\n\r\nimport { Toolbar } from '../components/Toolbar'\r\nimport { AppToolbar } from '../components/AppToolbar'\r\nimport { DiagramModel } from \"@projectstorm/react-diagrams\";\r\n\r\nimport { ExportEditor } from '../components/ExportEditor'\r\n\r\nimport { ContextMenus } from '../components/ContextMenus/ContextMenus'\r\nimport { MenuProvider } from 'react-contexify';\r\n\r\nimport { DiagramController } from '../DiagramController/DiagramCtr'\r\nimport { TableEditor } from '../components/TableEditor'\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport SimpleContext from '../components/ContextMenus/SimpleContext'\r\nimport * as htmlToImage from 'html-to-image';\r\nimport BaseGenerate from '../api/export/BaseGenerate';\r\nimport MySqlGenerate from '../api/export/MySqlGenerate';\r\n\r\nimport { getAllTable } from '../libs/tableUtil'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport Cookies from 'js-cookie'\r\n\r\nimport axios from 'axios'\r\n\r\nimport { Project, defaultProjects, jsonToProject, projectToJson } from '../interface/project'\r\nimport { useParams } from 'react-router';\r\nimport { RootState } from '../store';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ToggleLoading } from '../reducer/share/action';\r\nimport { SnackbarProvider, VariantType, useSnackbar } from 'notistack';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nenum VisibleStatus {\r\n\tPublic,\r\n\tPrivate,\r\n\tProtected\r\n}\r\n\r\ninterface EditorParamType {\r\n\tprojectId: string\r\n}\r\n\r\nexport const Editor: FunctionComponent = () => {\r\n\r\n\tlet { projectId } = useParams<EditorParamType>();\r\n\r\n\tconst user = useSelector((state: RootState) => state.AuthReducer.user)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst [saveSnack, setsaveSnack] = useState(false)\r\n\r\n\tconst [update, setupdate] = useState(false)\r\n\r\n\tconst [isLogin, setisLogin] = useState(true)\r\n\r\n\tconst [diagram, setDiagram] = useState(new DiagramController())\r\n\r\n\tconst [toggleFileMenu, settoggleFileMenu] = useState(true)\r\n\r\n\tconst [isApiLoading, setisApiLoading] = useState(false)\r\n\r\n\tconst [currentProject, setcurrentProject] = useState(initProject())\r\n\r\n\tconst [isExportOpen, setisExportOpen] = useState(false)\r\n\r\n\tconst [saveData, setsaveData] = useState(\"\")\r\n\r\n\tconst [isEdit, setEdit] = useState(false)\r\n\r\n\tconst snack = useSnackbar();\r\n\r\n\tuseEffect(() => {\r\n\t\tdiagram.getEngine().registerListener({\r\n\t\t\tonDoubleClick: () => ToggleEditor()\r\n\t\t})\r\n\t\tisLogger()\r\n\t}, [])\r\n\r\n\tfunction handleClickVariant(variant: VariantType) {\r\n\t\tsnack.enqueueSnackbar('Save Project success!');\r\n\t};\r\n\r\n\tfunction isLogger() {\r\n\r\n\t\tlet token = Cookies.get(\"ertoken\")\r\n\t\tif (token === undefined || token === \"\") {\r\n\t\t\tsetisLogin(false)\r\n\t\t\tsettoggleFileMenu(true)\r\n\t\t} else {\r\n\t\t\taxios.defaults.headers.common['Authorization'] = \"Bearer \" + token\r\n\t\t\tloaduserAndProject()\r\n\t\t}\r\n\t}\r\n\r\n\tconst loaduserAndProject = () => {\r\n\r\n\t\tlet baseUrl = \"https://toperbackend.herokuapp.com/\"\r\n\t\tlet loadProjectDataApi = \"project/loadproject/\" + projectId\r\n\t\tlet userApi = \"user/getuser\"\r\n\t\tlet projectApi = \"project/getprojects\"\r\n\r\n\t\taxios.get(baseUrl + loadProjectDataApi).then(rs => {\r\n\t\t\tdiagram.saveDataByString(rs.data.projectDetail)\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tasync function saveProject() {\r\n\t\tconst newproject = currentProject\r\n\t\tlet baseUrl = \"https://toperbackend.herokuapp.com/\"\r\n\t\tlet api = \"project/update/\" + projectId\r\n\t\tconst model = diagram.getEngine().getModel().serialize()\r\n\t\tconst modelstr = JSON.stringify(model)\r\n\r\n\t\tnewproject.ProjectDetail = modelstr\r\n\t\tlet data = projectToJson(newproject)\r\n\t\tdispatch(ToggleLoading(true))\r\n\t\tconst rs = await axios.put(baseUrl + api, data)\r\n\t\tdispatch(ToggleLoading(false))\r\n\t\tsetsaveSnack(true)\r\n\r\n\t}\r\n\r\n\r\n\tfunction exportPng(filename: string) {\r\n\t\tlet node = document.getElementById('diagramcv');\r\n\t\tif (node == null) return\r\n\t\thtmlToImage.toPng(node)\r\n\t\t\t.then(function (dataUrl) {\r\n\t\t\t\tvar img = new Image();\r\n\t\t\t\timg.src = dataUrl;\r\n\t\t\t\tvar a = document.createElement('a');\r\n\t\t\t\t// toDataURL defaults to png, so we need to request a jpeg, then convert for file download.\r\n\t\t\t\ta.href = dataUrl\r\n\t\t\t\ta.download = filename;\r\n\t\t\t\ta.click();\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.error('oops, something went wrong!', error);\r\n\t\t\t});\r\n\t}\r\n\r\n\tfunction initProject(): Project {\r\n\t\tlet pid = uuidv4()\r\n\t\tlet project: Project = {\r\n\t\t\tProjectName: \"Projecttyu\",\r\n\t\t\tProjectDescription: \"hello world\",\r\n\t\t\tProjectDetail: \"\",\r\n\t\t\tVisibleStatus: VisibleStatus.Private,\r\n\t\t\tUserId: user.Id,\r\n\t\t\tShareUrl: \"xff\"\r\n\r\n\t\t}\r\n\t\treturn project\r\n\t}\r\n\r\n\tfunction openExport() { setisExportOpen(true) }\r\n\r\n\tfunction ToggleEditor() {\r\n\t\tsetEdit(!isEdit)\r\n\t}\r\n\r\n\tfunction onZoomFit() {\r\n\t\talert('zoom fit ')\r\n\t\tdiagram.getEngine().zoomToFit()\r\n\t}\r\n\r\n\tfunction newTable() {\r\n\t\tdiagram.newNode()\r\n\t}\r\n\r\n\tfunction saveSerial() {\r\n\t\tlet modelJson = diagram.getEngine().getModel().serialize()\r\n\t\tlet modelStr = JSON.stringify(modelJson)\r\n\t\t//new code\r\n\t\tlet rs: Project = {\r\n\t\t\tId: \"\",\r\n\t\t\tProjectName: currentProject.ProjectName,\r\n\t\t\tProjectDescription: currentProject.ProjectDescription,\r\n\t\t\tVisibleStatus: currentProject.VisibleStatus,\r\n\t\t\tShareUrl: \"\",\r\n\t\t\tUserId: currentProject.UserId,\r\n\t\t\tProjectDetail: modelStr\r\n\t\t}\r\n\t\tdownloadFile(rs.ProjectName + \".er\", JSON.stringify(rs))\r\n\t\t//\r\n\t\tsetsaveData(modelStr)\r\n\t\tconsole.log(modelJson)\r\n\t\tdownloadFile(\"someer.er\", modelStr)\r\n\t}\r\n\r\n\r\n\tfunction loadOpenFile() {\r\n\t\tvar elem = document.getElementById(\"fileinput\");\r\n\t\tif (elem && document.createEvent) {\r\n\t\t\tvar evt = document.createEvent(\"MouseEvents\");\r\n\t\t\tevt.initEvent(\"click\", true, false);\r\n\t\t\telem.dispatchEvent(evt);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction onLoadFile(e: any) {\r\n\t\talert(\"select\")\r\n\t\tvar input = e.target;\r\n\t\tconsole.log(e)\r\n\t\tvar reader = new FileReader();\r\n\t\treader.onload = (es) => {\r\n\t\t\tvar text: any = reader.result;\r\n\t\t\tlet model2 = new DiagramModel()\r\n\t\t\tlet obj: ReturnType<DiagramModel['serialize']> = JSON.parse(text);\r\n\t\t\tmodel2.deserializeModel(obj, diagram.engine)\r\n\t\t\tif (model2 == null) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\te.target.value = null\r\n\t\t\tdiagram.getEngine().setModel(model2)\r\n\r\n\t\t};\r\n\t\treader.readAsText(input.files[0]);\r\n\t}\r\n\r\n\tfunction loadSerial() {\r\n\r\n\t\tif (saveData == \"\") return\r\n\t\tlet str = saveData\r\n\t\tlet model2 = new DiagramModel()\r\n\t\tlet obj: ReturnType<DiagramModel['serialize']> = JSON.parse(str);\r\n\t\tmodel2.deserializeModel(obj, diagram.engine)\r\n\t\tif (model2 == null) {\r\n\t\t\tconsole.log(\"model null\")\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tdiagram.getEngine().setModel(model2)\r\n\t\ttogglePropUpdate()\r\n\t\tconsole.log(\"load sucess\")\r\n\t}\r\n\r\n\tfunction togglePropUpdate() {\r\n\t\tsetupdate(!update)\r\n\t}\r\n\r\n\tfunction downloadFile(fileName: string, content: string) {\r\n\t\tvar a = document.createElement('a');\r\n\t\ta.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(content));\r\n\t\ta.setAttribute('download', fileName);\r\n\r\n\t\ta.style.display = 'none';\r\n\t\tdocument.body.appendChild(a);\r\n\r\n\t\ta.click();\r\n\r\n\t\tdocument.body.removeChild(a);\r\n\t}\r\n\r\n\tfunction exportSelect(filename: string, codeGen: BaseGenerate) {\r\n\t\tlet tbs = getAllTable(diagram)\r\n\t\t//alert(JSON.stringify(tbs))\r\n\t\tlet str = codeGen.export(tbs)\r\n\t\talert(str)\r\n\r\n\t\tdownloadFile(filename, str)\r\n\t}\r\n\r\n\tfunction resetDiagram() {\r\n\t\tdiagram.clearDiagram()\r\n\t}\r\n\r\n\tfunction exportSql(filename: string) { exportSelect(filename, new MySqlGenerate()) }\r\n\r\n\tfunction zoomIn() { diagram.doZoom(20) }\r\n\r\n\tfunction zoomOut() { diagram.doZoom(-20) }\r\n\r\n\tfunction testEx(e: string) { alert(e) }\r\n\r\n\treturn (\r\n\t\t<SnackbarProvider maxSnack={3}>\r\n\t\t\t<AppToolbar onExport={openExport} onSave={saveProject} />\r\n\t\t\t<Toolbar onZoomIn={zoomIn}\r\n\t\t\t\tonZoomOut={zoomOut} onZoomFit={resetDiagram} newTable={newTable} onSave={saveProject}\r\n\t\t\t\tonLoad={loadOpenFile} />\r\n\r\n\t\t\t<Snackbar\r\n\t\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n\t\t\t\topen={saveSnack}\r\n\t\t\t\tmessage=\"Save Project Success\"\r\n\t\t\t\tstyle={{ backgroundColor: \"green\", color: \"white\" }}\r\n\t\t\t\tkey={\"snack44\"}\r\n\t\t\t\taction={\r\n\t\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={() => setsaveSnack(false)}>\r\n\t\t\t\t\t\t<CloseIcon fontSize=\"small\" />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\r\n\t\t\t<ExportEditor\r\n\t\t\t\tisOpen={isExportOpen} onclose={() => setisExportOpen(false)} exportTest={testEx}\r\n\t\t\t\texportPng={exportPng} exportPdf={exportPng} exportSql={exportSql} fileName={currentProject.ProjectName}\r\n\t\t\t/>\r\n\r\n\t\t\t<input type=\"file\" id=\"fileinput\" style={{ display: \"none\" }} onChange={onLoadFile} />\r\n\r\n\t\t\t<TableEditor isOpen={isEdit} diagramctr={diagram}\r\n\t\t\t\tonclose={ToggleEditor} forceUpdate={update} />\r\n\r\n\t\t\t<MenuProvider id=\"diagram\" storeRef={false} >\r\n\t\t\t\t<DemoCanvasWidget background=\"#E9E9E9\" color=\"#808080\" >\r\n\t\t\t\t\t<CanvasWidget engine={diagram.engine} className=\"canvas\" />\r\n\t\t\t\t</DemoCanvasWidget>\r\n\t\t\t</MenuProvider>\r\n\r\n\t\t\t<SimpleContext />\r\n\r\n\t\t\t<ContextMenus copyFunc={diagram.copySelected} pasteFunc={diagram.pasteSelected} deleteFunc={diagram.deleteSelected}\r\n\t\t\t\tduplicateFunc={diagram.duplicateSelected} cutFunc={diagram.cutSelected}\r\n\t\t\t\tzoomIn={zoomIn} zoomOut={zoomOut} />\r\n\t\t</SnackbarProvider>\r\n\r\n\t);\r\n\r\n}\r\n\r\n\r\n\r\n","import { User } from \"../../interface/user\";\r\n\r\nexport enum AuthActionType {\r\n    SET_USER = \"SET_USER\",\r\n    UPDATE_USER = \"UPDATE_USER\",\r\n    SET_LOGIN = \"SET_LOGIN\"\r\n}\r\n\r\ninterface UpdatePayload {\r\n    Id : string,\r\n    user : User\r\n}\r\n\r\nexport interface SetUserAction {\r\n    type: typeof AuthActionType.SET_USER\r\n    payload: User\r\n}\r\n\r\nexport interface UpdatetUserAction {\r\n    type: typeof AuthActionType.UPDATE_USER\r\n    payload: UpdatePayload\r\n}\r\n\r\nexport interface SetLoginStateAction {\r\n    type: typeof AuthActionType.SET_LOGIN\r\n    payload: boolean\r\n}\r\n\r\n  \r\nexport type AuthActionTypes = SetUserAction | UpdatetUserAction | SetLoginStateAction","import { Project } from \"../../interface/project\";\r\n\r\nexport enum ProjectActionType {\r\n    SET_PROJECT = \"SET_PROJECT\",\r\n    UPDATE_PROJECT = \"UPDATE_PROJECT\",\r\n    NEW_PROJECT = \"NEW_PROJECT\",\r\n    DELETE_PROJECT = \"DELETE_PROJECT\",\r\n    TOGGLE_MODAL = \"TOGGLE_MODAL\",\r\n    TOGGLE_CONFRIM_MODAL = \"TOGGLE_CONFRIM_MODAL\"\r\n}\r\n\r\ninterface SetProjectAction {\r\n    type: typeof ProjectActionType.SET_PROJECT\r\n    payload: Project[]\r\n}\r\n\r\ninterface UpdateProjectAction {\r\n    type: typeof ProjectActionType.UPDATE_PROJECT\r\n    payload: Project\r\n}\r\n\r\ninterface NewProjectAction {\r\n    type : typeof ProjectActionType.NEW_PROJECT,\r\n    payload : Project\r\n}\r\n\r\ninterface DeleteProjectAction {\r\n    type : typeof ProjectActionType.DELETE_PROJECT,\r\n    payload : string\r\n}\r\n\r\ninterface ToggleAddModal{\r\n    type : typeof ProjectActionType.TOGGLE_MODAL,\r\n    payload : boolean\r\n}\r\n\r\ninterface ToggleConfrimModal{\r\n    type : typeof ProjectActionType.TOGGLE_CONFRIM_MODAL,\r\n    payload : boolean\r\n}\r\n\r\n  \r\nexport type ProjectActionTypes = SetProjectAction  | UpdateProjectAction | NewProjectAction | \r\nDeleteProjectAction | ToggleAddModal | ToggleConfrimModal","import { TableData } from \"../components/TableEditor\";\r\nimport { DiagramController } from \"../DiagramController/DiagramCtr\";\r\nimport { SchemaNodeModel } from \"../schemanode/node/SchemaNodeModel\";\r\n\r\nfunction getAllTable(diagram : DiagramController) : TableData[]{\r\n    let rs : TableData[] = []\r\n    let alltb = diagram.getEngine().getModel().getNodes() as SchemaNodeModel[]\r\n    alltb.forEach(tb => {\r\n      let name =tb.getOptions().name\r\n      if(name == undefined) name = \"\"\r\n      let add : TableData = {\r\n        id : tb.getID(),\r\n        tablename : name,\r\n        fields : tb.getAllField()\r\n      }\r\n      rs.push(add)\r\n    });\r\n    return rs\r\n}\r\n\r\nexport {getAllTable}","import { FunctionComponent } from \"react\";\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n      },\r\n      toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n      },\r\n\r\n}));\r\n\r\nexport const Sidebar: FunctionComponent = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n        <div>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Dashboard\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <ShoppingCartIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Orders\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <PeopleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Customers\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <BarChartIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Reports\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <LayersIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Integrations\" />\r\n          </ListItem>\r\n        </div>\r\n        </List>\r\n  \r\n      </Drawer>\r\n        \r\n      )\r\n}","import Cookies from 'js-cookie'\r\n\r\nexport interface User{\r\n    Id : string,\r\n    UserName : string,\r\n    UserLastName : string,\r\n    UserEmail : string,\r\n    UserPassword : string\r\n}\r\n\r\nexport function defaultUser() : User{\r\n    \r\n    let rs : User = {\r\n        Id : \"\",\r\n        UserName : \"test\",\r\n        UserLastName :  \"\",\r\n        UserEmail : \"\",\r\n        UserPassword : \"\"\r\n    }\r\n    return rs\r\n}\r\n\r\nexport function isLogin() : boolean{\r\n    const token = Cookies.get(\"ertoken\")\r\n    alert(\"call login check in file :src/interface/user.isLogin\")\r\n        if(token !== \"\" && token !== undefined){\r\n            //pass login\r\n            return true\r\n        }\r\n    return false\r\n}\r\n\r\nexport function jsonToUser(d : any) : User{\r\n    const rs : User = {\r\n        Id : d._id,\r\n        UserName : d.userName,\r\n        UserLastName : d.userlastname,\r\n        UserEmail : d.userEmail,\r\n        UserPassword : d.userPassword\r\n    }\r\n    return rs\r\n}","import { User } from \"../../interface/user\";\r\nimport { AuthActionType, AuthActionTypes } from \"./type\";\r\n\r\nexport function SetUser(user: User): AuthActionTypes {\r\n    return {\r\n      type: AuthActionType.SET_USER,\r\n      payload: user\r\n    }\r\n}\r\n\r\nexport function SetLoginState(data:boolean): AuthActionTypes {\r\n  return {\r\n    type: AuthActionType.SET_LOGIN,\r\n    payload: data\r\n  }\r\n}","\r\nimport { Project } from \"../../interface/project\";\r\nimport { ProjectActionType, ProjectActionTypes } from \"./type\";\r\n\r\nexport function SetProject(data: Project[]): ProjectActionTypes {\r\n    return {\r\n      type: ProjectActionType.SET_PROJECT,\r\n      payload: data\r\n    }\r\n}\r\n\r\nexport function NewProject(data: Project): ProjectActionTypes {\r\n  return {\r\n    type: ProjectActionType.NEW_PROJECT,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport function DeleteProject(id : string) : ProjectActionTypes{\r\n  return {\r\n    type : ProjectActionType.DELETE_PROJECT,\r\n    payload : id\r\n  }\r\n}\r\n\r\nexport function ToggleModal(value : boolean) : ProjectActionTypes{\r\n  return {\r\n    type : ProjectActionType.TOGGLE_MODAL,\r\n    payload : value\r\n  }\r\n}\r\n\r\nexport function ToggleConfrimModal(value : boolean) : ProjectActionTypes{\r\n  return {\r\n    type : ProjectActionType.TOGGLE_CONFRIM_MODAL,\r\n    payload : value\r\n  }\r\n}","import axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { LoginPayload } from \"../../interface/loginpayload\"\r\nimport { User , defaultUser , jsonToUser } from \"../../interface/user\";\r\nimport {SetLoginState, SetUser} from './action'\r\nimport Cookies from \"js-cookie\"\r\nimport { SetProject } from \"../project/action\";\r\nimport {initApp} from '../loadapp'\r\nexport const signIn = (login : LoginPayload) => {\r\n    return async (dispatch : Dispatch) => {\r\n      let url = \"https://toperbackend.herokuapp.com/auth/login\"\r\n      alert(\"login\")\r\n      let rs = await axios.post(url , login)\r\n      console.log(rs)\r\n      if(rs.status === 200){\r\n        const data = rs.data\r\n        if(data.access_token !== \"\"){\r\n            Cookies.set(\"ertoken\" , data.access_token)\r\n            const user : User = jsonToUser(data)\r\n            dispatch(SetUser(user))\r\n            dispatch(SetLoginState(true))\r\n  \r\n        }\r\n        \r\n      }\r\n      \r\n    };\r\n}\r\n\r\nexport const register = (user : any) => {\r\n  return async (dispatch : Dispatch) => {\r\n    let url = \"https://toperbackend.herokuapp.com/auth/register\"\r\n    alert(\"register\")\r\n    let rs = await axios.post(url , user)\r\n    if(rs.status === 200){\r\n      const data = rs.data\r\n      if(data.access_token !== \"\"){\r\n          Cookies.set(\"ertoken\" , data.access_token)\r\n          const user : User = jsonToUser(data)\r\n          dispatch(SetUser(user))\r\n          dispatch(SetLoginState(true))\r\n\r\n      }\r\n      \r\n    }\r\n    \r\n  };\r\n}\r\n\r\n\r\nexport const signOut = () => {\r\n  return (dispatch : Dispatch) => {\r\n    Cookies.set(\"ertoken\" , \"\")\r\n    const user : User = defaultUser()\r\n    dispatch(SetUser(user))\r\n    dispatch(SetLoginState(false))\r\n    dispatch(SetProject([]))\r\n  };\r\n}\r\n\r\nexport const fetchPosts = (loginPayload : LoginPayload) => async (dispatch : any) => {\r\n\r\n    dispatch({ type: 'FETCH_POSTS', payload: \"\" })\r\n}\r\n\r\n","import React, { FunctionComponent } from 'react'\r\nimport {  useDispatch, useSelector } from 'react-redux'\r\nimport { Button, Container, Menu , Image} from 'semantic-ui-react';\r\nimport { signOut } from '../../reducer/auth/thunkaction';\r\n\r\nimport {RootState} from '../../store/index'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Logo from '../Icons/ericon.png'\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Badge } from '@material-ui/core';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n\r\n\r\n}));\r\n\r\nexport const MainHead: FunctionComponent = () => {\r\n\r\n    const user = useSelector((state: RootState) => state.AuthReducer.user);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const classes = useStyles();\r\n\r\n    const onLogOut = () => {\r\n        dispatch(signOut())\r\n    }\r\n\r\n    return (\r\n      <AppBar position=\"absolute\" className={classes.appBar} elevation={0}  >\r\n      <Toolbar className={classes.toolbar} >\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          className={classes.menuButton}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n          Dashboard\r\n        </Typography>\r\n        <IconButton color=\"inherit\" onClick={onLogOut}>\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default MainHead\r\n","import axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport Cookies from \"js-cookie\"\r\nimport { ToggleLoading } from \"./share/action\";\r\nimport { jsonToProject, Project } from \"../interface/project\";\r\nimport { jsonToUser } from \"../interface/user\";\r\nimport { SetLoginState, SetUser } from \"./auth/action\";\r\nimport { SetProject } from \"./project/action\";\r\n\r\nexport const initApp = () => {\r\n\r\n    return async (dispatch : Dispatch) => {\r\n\r\n      let baseUrl = \"https://toperbackend.herokuapp.com\"\r\n      let userUrl = baseUrl + \"/user/getuser\"\r\n      let projectUrl = baseUrl + \"/project/getprojects\"\r\n\r\n      let token = Cookies.get(\"ertoken\")\r\n\r\n      if(token === \"\" || token === undefined){\r\n            dispatch(ToggleLoading(false))\r\n            dispatch(SetLoginState(false))\r\n  \r\n            return\r\n      }\r\n\r\n      dispatch(ToggleLoading(true))\r\n\r\n      axios.defaults.headers.common['Authorization'] = \"Bearer \" + token\r\n\r\n      axios.all([\r\n        axios.get(userUrl), \r\n        axios.get(projectUrl)\r\n      ])\r\n      .then(axios.spread((userrs, projectrs) => {\r\n\r\n        dispatch(ToggleLoading(false))\r\n\r\n        if(userrs.data.length > 0){\r\n            let userdata = userrs.data[0]\r\n            const user = jsonToUser(userdata)\r\n            dispatch(SetUser(user))\r\n            dispatch(SetLoginState(true))\r\n        }\r\n        let projects : Project[] = []\r\n        projectrs.data.forEach((p : any) =>{\r\n            const project : Project = jsonToProject(p)\r\n            projects.push(project)\r\n        })\r\n\r\n        dispatch(SetProject(projects))\r\n\r\n      }));      \r\n      \r\n    };\r\n}","import React , { FunctionComponent } from \"react\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\ninterface ConfrimProp {\r\n    isOpen : boolean,\r\n    onClose : () => void,\r\n    onConfrim : () => void\r\n}\r\n\r\nexport const ConfrimDialog: FunctionComponent<ConfrimProp> = ({isOpen , onClose , onConfrim}) => {\r\n\r\n  const handleClose = () => {\r\n    onClose()\r\n  };\r\n\r\n  const handleConfrim = () => {\r\n    onConfrim()\r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Dialog\r\n        open={isOpen}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Are you want Delete this Project?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleConfrim} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React, { FunctionComponent, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Project } from '../../interface/project'\r\nimport { deleteProjectAsync } from '../../reducer/project/thunkaction'\r\nimport { RootState } from '../../store'\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {ConfrimDialog} from \"../ConfrimDialog\"\r\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react'\r\n\r\nexport const FileList: FunctionComponent = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [isConfrimModal, setisConfrimModal] = useState(false)\r\n\r\n    const [currentSelect, setcurrentSelect] = useState(\"\")\r\n\r\n    const projects = useSelector((state: RootState) => state.ProjectReducer.projects)\r\n\r\n    const selectRemove = (id: string | undefined) => {\r\n        if (id === undefined) id = \"\"\r\n        setisConfrimModal(true)\r\n        setcurrentSelect(id)\r\n    }\r\n\r\n    const confrimRemove = () => {\r\n        alert(currentSelect)\r\n        setisConfrimModal(false)\r\n        if(currentSelect === \"\") return\r\n        dispatch(deleteProjectAsync(currentSelect))\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <List>\r\n            {projects.map((p: Project) => (\r\n                 <ListItem key={p.Id}>\r\n                     <Link to={`/editor/${p.Id}`}>\r\n                     <ListItemAvatar>\r\n                   <Avatar>\r\n                     <FolderIcon />\r\n                   </Avatar>\r\n                 </ListItemAvatar>\r\n                        </Link>\r\n                \r\n                 <ListItemText\r\n                   primary={p.ProjectName}\r\n                   secondary={'Update at 10min ago'}\r\n                 />\r\n                 <ListItemSecondaryAction>\r\n                   <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => selectRemove(p.Id)}>\r\n                     <DeleteIcon />\r\n                   </IconButton>\r\n                 </ListItemSecondaryAction>\r\n               </ListItem>\r\n             \r\n            ))}\r\n            <ConfrimDialog isOpen={isConfrimModal} onClose={()=>setisConfrimModal(false)} onConfrim={confrimRemove}  />\r\n      \r\n        </List>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default FileList","import axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { LoginPayload } from \"../../interface/loginpayload\"\r\nimport { Project, projectToJson } from \"../../interface/project\";\r\nimport { User , defaultUser , jsonToUser } from \"../../interface/user\";\r\nimport { ToggleLoading } from \"../share/action\";\r\nimport { DeleteProject, NewProject, ToggleModal } from \"./action\";\r\n\r\nexport const newProjectAsync = (project : Project) => {\r\n    return async (dispatch : Dispatch) => {\r\n        let url = \"https://toperbackend.herokuapp.com/project\"\r\n        let data = projectToJson(project)\r\n        alert(JSON.stringify(data))\r\n        dispatch(ToggleModal(false))\r\n        dispatch(ToggleLoading(true))\r\n        const rs = await axios.post(url , data)\r\n        if(rs.status === 200){\r\n            dispatch(NewProject(project))\r\n\r\n        }\r\n        dispatch(ToggleLoading(false))\r\n    };\r\n  }\r\n\r\n  export const deleteProjectAsync = (id : string) => {\r\n    return async (dispatch : Dispatch) => {\r\n        let url = \"https://toperbackend.herokuapp.com/project/delete/\" + id \r\n        dispatch(ToggleLoading(true))\r\n        const rs = await axios.delete(url)\r\n        if(rs.status === 200){\r\n            dispatch(DeleteProject(id))\r\n        }\r\n        dispatch(ToggleLoading(false))\r\n    };\r\n  }\r\n\r\nexport const fetchPosts = (loginPayload : LoginPayload) => async (dispatch : any) => {\r\n\r\n    dispatch({ type: 'FETCH_POSTS', payload: \"\" })\r\n}\r\n\r\n","import React ,  { FunctionComponent, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Form, Modal } from \"semantic-ui-react\";\r\nimport { Project } from \"../../interface/project\";\r\nimport { newProjectAsync } from \"../../reducer/project/thunkaction\";\r\nimport { RootState } from \"../../store\";\r\n\r\ninterface ProjectForm {\r\n    isOpen : boolean\r\n}\r\n\r\nexport const ProjectForm: FunctionComponent<ProjectForm> = ({isOpen}) => {\r\n\r\n    const [projectName, setprojectName] = useState(\"\")\r\n\r\n    const [projectDescription, setprojectDescription] = useState(\"\")\r\n\r\n    const user = useSelector((state : RootState) => state.AuthReducer.user)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onSave = () => {\r\n        let project : Project = {\r\n            ProjectName : projectName,\r\n            ProjectDescription : projectDescription,\r\n            ProjectDetail : \"\",\r\n            VisibleStatus : 1,\r\n            UserId :  user.Id,\r\n            ShareUrl : \"\"\r\n        }\r\n        dispatch(newProjectAsync(project))\r\n    }\r\n\r\n        return (\r\n            <Modal open={isOpen}>\r\n                <Form>\r\n                <input type=\"text\" placeholder=\"Project name\" value={projectName} \r\n                onChange={(e) => setprojectName(e.target.value)} />\r\n                <input type=\"text\" placeholder=\"Project Description\" value={projectDescription}\r\n                onChange={(e) => setprojectDescription(e.target.value)} />\r\n                <Button onClick={onSave}>Save</Button>\r\n            </Form>\r\n            </Modal>\r\n            \r\n        )\r\n\r\n\r\n    \r\n}","import React, { FunctionComponent, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport {Sidebar} from '../components/Document/Sidebar'\r\nimport LoginModal from \"../components/Document/LoginModal\";\r\nimport { MainHead } from \"../components/Document/MainHead\";\r\nimport { RootState } from \"../store\";\r\nimport { initApp } from \"../reducer/loadapp\";\r\nimport {\r\n\r\n  Loader,\r\n\r\n\r\n} from \"semantic-ui-react\";\r\nimport { FileList } from \"../components/Document/FileList\";\r\nimport { ToggleModal } from \"../reducer/project/action\";\r\nimport { ProjectForm } from \"../components/Document/ProjectForm\";\r\n\r\nexport default function ExTemplate() {\r\n  return <div>Template</div>;\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport const Document: FunctionComponent = () => {\r\n  const isLogin = useSelector((state: RootState) => state.AuthReducer.isLogin);\r\n\r\n  const classes = useStyles();\r\n\r\n  const addProjectModal = useSelector((state: RootState) => state.ProjectReducer.addProjectModal)\r\n\r\n  const isLoading = useSelector(\r\n    (state: RootState) => state.ShareReducer.isLoading\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(initApp());\r\n  }, []);\r\n\r\n  return (\r\n\r\n    <div className={classes.root}>\r\n      <Backdrop open={isLoading} >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <ProjectForm isOpen={addProjectModal} />\r\n    <CssBaseline />\r\n    <MainHead></MainHead>\r\n    <Sidebar/>\r\n    <main className={classes.content}>\r\n      <div className={classes.appBarSpacer} />\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Grid container spacing={3}>\r\n          {/* Chart */}\r\n          <Switch>\r\n              <Route path=\"/document/filelist\" component={FileList} />\r\n              <Route path=\"/document/template\" component={ExTemplate} />\r\n            </Switch>\r\n\r\n        </Grid>\r\n        \r\n      </Container>\r\n    </main>\r\n  </div>\r\n    \r\n\r\n  );\r\n};\r\n","import React ,  { FunctionComponent, useState } from \"react\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { useDispatch } from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport LinkMat from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { LoginPayload } from \"../interface/loginpayload\";\r\nimport { initApp } from \"../reducer/loadapp\";\r\nimport { signIn } from \"../reducer/auth/thunkaction\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <LinkMat color=\"inherit\" href=\"https://material-ui.com/\">\r\n          Your Website\r\n        </LinkMat>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n  \r\n\r\nexport const SignIn: FunctionComponent = () => {\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [userName, setuserName] = useState(\"\")\r\n\r\n    const [userPassword, setuserPassword] = useState(\"\")\r\n\r\n    const onLogin = async () => {\r\n        let loginParam: LoginPayload = {\r\n            userName: userName,\r\n            userPassword: userPassword\r\n        }\r\n        await dispatch(signIn(loginParam))\r\n        dispatch(initApp())\r\n    }\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate >\r\n            \r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={(e) => setuserName(e.target.value)} value={userName}\r\n            />\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={(e) => setuserPassword(e.target.value)} value={userPassword}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={onLogin}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <LinkMat href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </LinkMat>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link to=\"/signup\">\r\n                <LinkMat href=\"#\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </LinkMat>\r\n                </Link>\r\n                \r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n}","import React ,  { FunctionComponent, useState } from \"react\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { useDispatch } from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport LinkMat from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { LoginPayload } from \"../interface/loginpayload\";\r\nimport { initApp } from \"../reducer/loadapp\";\r\nimport { register } from \"../reducer/auth/thunkaction\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <LinkMat color=\"inherit\" href=\"https://material-ui.com/\">\r\n          Your Website\r\n        </LinkMat>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n  \r\n\r\nexport const SignUp: FunctionComponent = () => {\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [userName, setuserName] = useState(\"\")\r\n\r\n    const [userLastname, setuserLastname] = useState(\"\")\r\n\r\n    const [userEmail, setuserEmail] = useState(\"\")\r\n\r\n    const [userPassword, setuserPassword] = useState(\"\")\r\n\r\n    const onLogin = async () => {\r\n        let user: any = {\r\n            userName,\r\n            userLastname,\r\n            userPassword,\r\n            userEmail\r\n        }\r\n        alert(JSON.stringify(user))\r\n        await dispatch(register(user))\r\n        dispatch(initApp())\r\n    }\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate >\r\n          <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"User name\"\r\n              name=\"user\"\r\n              autoFocus\r\n              onChange={(e) => setuserName(e.target.value)} value={userName}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"lastname\"\r\n              label=\"User Lastname\"\r\n              name=\"lastname\"\r\n              autoFocus\r\n              onChange={(e) => setuserLastname(e.target.value)} value={userLastname}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={(e) => setuserEmail(e.target.value)} value={userEmail}\r\n            />\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={(e) => setuserPassword(e.target.value)} value={userPassword}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={onLogin}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <LinkMat href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </LinkMat>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link to=\"/signup\">\r\n                <LinkMat href=\"#\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </LinkMat>\r\n                </Link>\r\n                \r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n}","import React, { FunctionComponent, useEffect, useState } from 'react'\r\n\r\n\r\n\r\nimport {BrowserRouter as Router, Redirect, Route, useHistory } from 'react-router-dom'\r\n\r\nimport { Editor } from './pages/editor'\r\n\r\nimport {Document} from './pages/document'\r\n\r\nimport {SignIn} from './pages/signin'\r\nimport Cookies from 'js-cookie'\r\nimport { SignUp } from './pages/signup'\r\n\r\nexport const App: FunctionComponent = () => {\r\n\r\n\r\n\r\n\tconst isLogin = () => {\r\n\t\tlet token = Cookies.get(\"ertoken\")\r\n\t\tif(token === \"\" || token === undefined) return false\r\n\t\treturn true\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Router>\r\n\r\n\t\t\t<Route exact path=\"/signup\" component={SignUp}/>\r\n\r\n\t\t\t<Route exact path=\"/login\" component={SignIn}/>\r\n\r\n\t\t\t<Route exact path=\"/\" component={Document} >\r\n\t\t\t\t{isLogin() ? <Redirect to=\"/document/filelist\" /> : <Redirect to=\"/login\" />}\r\n\t\t\t\t\r\n\t\t\t</Route>\r\n\t\t\t<Route  path=\"/document\" component={Document} />\r\n\t\t\t<Route exact path=\"/editor/:projectId\" component={Editor} />\r\n\r\n\t\t\t</Router>\r\n\r\n\t\t\t\r\n\r\n\t\t</React.Fragment>\r\n\r\n\t);\r\n\r\n}\r\n\r\n\r\n\r\n","import { User , defaultUser, isLogin } from \"../../interface/user\"\r\nimport { AuthActionType , AuthActionTypes} from './type'\r\n\r\n\r\nexport interface AuthState {\r\n    user : User,\r\n    isLogin : boolean,\r\n    err : string\r\n}\r\n\r\nconst initialState : AuthState = {\r\n    user : defaultUser(),\r\n    isLogin : true,\r\n    err : \"no err\"\r\n}\r\n\r\nexport const AuthReducer =  (state  = initialState, action : AuthActionTypes) => {\r\n    switch (action.type) {\r\n\r\n    case AuthActionType.SET_USER:\r\n        return { ...state, user : action.payload }\r\n    case AuthActionType.UPDATE_USER:\r\n        return { ...state, ...action.payload }\r\n    case AuthActionType.SET_LOGIN:\r\n        return { ...state, isLogin : action.payload }\r\n    \r\n    default:\r\n        return state\r\n    }\r\n}\r\n","\r\nimport { ShareActionTypes , ShareActionType } from './type'\r\n\r\ninterface ShareState {\r\n    error : string,\r\n    isLoading : boolean,\r\n}\r\n\r\nconst initialState : ShareState = {\r\n    error : \"\",\r\n    isLoading : false,\r\n}\r\n\r\nexport const ShareReducer =  (state = initialState, action : ShareActionTypes) => {\r\n    switch (action.type) {\r\n\r\n    case ShareActionType.TOGGLE_LOADING:\r\n        return { ...state, isLoading : action.payload }\r\n\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","\r\nimport { Project , defaultProjects  , defaultProject } from \"../../interface/project\"\r\nimport { ProjectActionTypes , ProjectActionType } from \"./type\"\r\n\r\ninterface ProjectState {\r\n    projects : Project[],\r\n    currentProject : Project,\r\n    addProjectModal : boolean,\r\n    confrimModal : boolean\r\n}\r\n\r\nconst initialState : ProjectState = {\r\n    projects : defaultProjects(),\r\n    currentProject : defaultProject(),\r\n    addProjectModal : false,\r\n    confrimModal : false\r\n}\r\n\r\nexport const ProjectReducer = (state = initialState, action : ProjectActionTypes) => {\r\n    switch (action.type) {\r\n\r\n    case ProjectActionType.SET_PROJECT:\r\n        return { ...state, projects : action.payload }\r\n    case ProjectActionType.NEW_PROJECT:\r\n        state.projects.push(action.payload)\r\n        return { ...state }\r\n    case ProjectActionType.DELETE_PROJECT:\r\n        const indexof = state.projects.findIndex(p=>p.Id === action.payload)\r\n        if(indexof !== -1) state.projects.splice(indexof , 1)\r\n        return { ...state }\r\n    case ProjectActionType.TOGGLE_MODAL:\r\n        return { ...state , addProjectModal : action.payload }\r\n    case ProjectActionType.TOGGLE_CONFRIM_MODAL:\r\n        return { ...state , confrimModal : action.payload }\r\n\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import { createStore, combineReducers , applyMiddleware } from \"redux\";\r\n\r\nimport {AuthReducer} from \"../reducer/auth/auth\";\r\n\r\nimport {ShareReducer} from '../reducer/share/share'\r\n\r\nimport {ProjectReducer} from '../reducer/project/project'\r\n\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nconst rootReducer = combineReducers({\r\n\tAuthReducer,\r\n    ShareReducer,\r\n    ProjectReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nconst store = () => {\r\n\t return\tcreateStore(rootReducer , applyMiddleware(thunkMiddleware));\r\n}\r\n\r\nexport default store","\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App'\nimport './index.css';\n\nimport { Provider } from 'react-redux';\nimport configureStore from \"./store/index\";\n\nconst store = configureStore();\n\n\nReactDOM.render(   \n  <Provider store={store}>\n\t\t<App />\n\t</Provider>\n  \n,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}